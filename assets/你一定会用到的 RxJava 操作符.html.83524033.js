import{_ as p,r as o,o as c,c as l,b as n,d as e,e as s,a as t}from"./app.5e319a5d.js";const i={},u=s("\u9605\u8BFB\u672C\u6587\u524D\u8BF7\u5148\u4E86\u89E3 "),r={href:"https://github.com/ReactiveX/RxJava",target:"_blank",rel:"noopener noreferrer"},k=s("RxJava"),d=s(" \u7684\u57FA\u672C\u4F7F\u7528\u3002"),v=n("p",null,"\u53C2\u8003\u6587\u6863\uFF1A",-1),b={href:"http://reactivex.io/RxJava/javadoc",target:"_blank",rel:"noopener noreferrer"},m=s("RxJava JavaDoc"),h={href:"https://www.gitbook.com/book/mcxiaoke/rxdocs/details",target:"_blank",rel:"noopener noreferrer"},_=s("ReactiveX \u6587\u6863\u4E2D\u6587\u7FFB\u8BD1"),g=n("hr",null,null,-1),f={id:"_1-observable-\u7684\u521B\u5EFA",tabindex:"-1"},x=n("a",{class:"header-anchor",href:"#_1-observable-\u7684\u521B\u5EFA","aria-hidden":"true"},"#",-1),O=s(" 1 "),T={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},j=s("Observable"),w=s(" \u7684\u521B\u5EFA"),y=n("h3",{id:"_1-1-from",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-from","aria-hidden":"true"},"#"),s(" 1.1 from( )")],-1),R=s("\u8F6C\u6362\u96C6\u5408\u4E3A\u4E00\u4E2A\u6BCF\u6B21\u53D1\u5C04\u96C6\u5408\u4E2D\u4E00\u4E2A\u5143\u7D20\u7684 "),S={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},J=s("Observable"),F=s(" \u5BF9\u8C61\u3002\u53EF\u7528\u6765\u904D\u5386\u96C6\u5408\u3002"),U=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),I={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(java.util.concurrent.Future)",target:"_blank",rel:"noopener noreferrer"},L=s("public static <T> Observable<T> from(Future<? extends T> future)"),q={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(java.util.concurrent.Future,%20long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},E=s("public static <T> Observable<T> from(Future<? extends T> future, long timeout, TimeUnit unit)"),C={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(java.util.concurrent.Future,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},N=s("public static <T> Observable<T> from(Future<? extends T> future, Scheduler scheduler)"),B={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(java.lang.Iterable)",target:"_blank",rel:"noopener noreferrer"},D=s("public static <T> Observable<T> from(Iterable<? extends T> iterable)"),M={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(T%5B%5D)",target:"_blank",rel:"noopener noreferrer"},W=s("public static <T> Observable<T> from(T[] array)"),A=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 1. \u904D\u5386\u96C6\u5408</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 2. \u4F7F\u7528 Future \u521B\u5EFA Observable\uFF0CFuture \u8868\u793A\u4E00\u4E2A\u5F02\u6B65\u8BA1\u7B97\u7684\u7ED3\u679C\u3002</span>
<span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> futureTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO \u6267\u884C\u5F02\u6B65\u64CD\u4F5C\u5E76\u8FD4\u56DE\u6570\u636E</span>
        <span class="token keyword">return</span> <span class="token string">&quot;hihi&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Scheduler<span class="token punctuation">.</span>Worker</span> worker <span class="token operator">=</span> <span class="token class-name">Schedulers</span><span class="token punctuation">.</span><span class="token function">io</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
worker<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        futureTask<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-just" tabindex="-1"><a class="header-anchor" href="#_1-2-just" aria-hidden="true">#</a> 1.2 just( )</h3>`,4),V=s("\u8F6C\u6362\u4E00\u4E2A\u6216\u591A\u4E2A Object \u4E3A\u4F9D\u6B21\u53D1\u5C04\u8FD9\u4E9B Object \u7684 "),H={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},z=s("Observable"),X=s(" \u5BF9\u8C61\u3002"),G=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),K={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T)",target:"_blank",rel:"noopener noreferrer"},P=s("public static <T> Observable<T> just(final T value)"),Q={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T)",target:"_blank",rel:"noopener noreferrer"},Y=s("public static <T> Observable<T> just(T t1, T t2)"),Z={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},$=s("public static <T> Observable<T> just(T t1, T t2, T t3)"),nn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},sn=s("public static <T> Observable<T> just(T t1, T t2, T t3, T t4)"),an={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},en=s("public static <T> Observable<T> just(T t1, T t2, T t3, T t4, T t5)"),tn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},pn=s("public static <T> Observable<T> just(T t1, T t2, T t3, T t4, T t5, T t6)"),on={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},cn=s("public static <T> Observable<T> just(T t1, T t2, T t3, T t4, T t5, T t6, T t7)"),ln={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},un=s("public static <T> Observable<T> just(T t1, T t2, T t3, T t4, T t5, T t6, T t7, T t8)"),rn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},kn=s("public static <T> Observable<T> just(T t1, T t2, T t3, T t4, T t5, T t6, T t7, T t8, T t9)"),dn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},vn=s("public static <T> Observable<T> just(T t1, T t2, T t3, T t4, T t5, T t6, T t7, T t8, T t9, T t10)"),bn=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528 just() \u904D\u5386\u51E0\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       
<span class="token comment">// \u4F7F\u7528 from() \u65B9\u6CD5\u904D\u5386\uFF0C\u6548\u679C\u548C just() \u4E00\u6837\u3002</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringArrs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>stringArrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>just()</code> \u65B9\u6CD5\u53EF\u4F20\u5165 1~10 \u4E2A\u53C2\u6570\uFF0C\u4E5F\u5C31\u8BF4\u5F53\u5143\u7D20\u4E2A\u6570\u5C0F\u4E8E\u7B49\u4E8E 10 \u7684\u65F6\u5019\u65E2\u53EF\u4EE5\u4F7F\u7528 <code>just() </code> \u4E5F\u53EF\u4EE5\u4F7F\u7528 <code>from()</code>\uFF0C\u5426\u5219\u53EA\u80FD\u7528 <code>from()</code> \u65B9\u6CD5\u3002</p><h3 id="_1-3-create" tabindex="-1"><a class="header-anchor" href="#_1-3-create" aria-hidden="true">#</a> 1.3 create( )</h3>`,4),mn=s("\u8FD4\u56DE\u4E00\u4E2A\u5728\u88AB "),hn=n("code",null,"OnSubscribe",-1),_n=s(" \u8BA2\u9605\u65F6\u6267\u884C\u7279\u5B9A\u65B9\u6CD5\u7684 "),gn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},fn=s("Observable"),xn=s(" \u5BF9\u8C61\u3002"),On=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),Tn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#create(rx.Observable.OnSubscribe)",target:"_blank",rel:"noopener noreferrer"},jn=s("public static <T> Observable<T> create(OnSubscribe<T> f)"),wn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#create(rx.observables.SyncOnSubscribe)",target:"_blank",rel:"noopener noreferrer"},yn=s("@Beta public static <S, T> Observable<T>create(SyncOnSubscribe<S, T> syncOnSubscribe)"),Rn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#create(rx.observables.AsyncOnSubscribe)",target:"_blank",rel:"noopener noreferrer"},Sn=s("@Experimental public static <S, T> Observable<T> create(AsyncOnSubscribe<S, T> asyncOnSubscribe)"),Jn=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> onSubscribe <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span> <span class="token class-name">String</span> <span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">String</span> <span class="token punctuation">&gt;</span></span> subscriber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// onNext() \u65B9\u6CD5\u53EF\u6267\u884C\u591A\u6B21</span>
        subscribe<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        subscribe<span class="token punctuation">.</span><span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>onSubscribe<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65B9\u6CD5\u4E0D\u5E38\u7528\uFF0C\u5927\u591A\u6570\u65F6\u5019\u90FD\u662F\u4F7F\u7528 <code>just( )</code>\u3001<code>form( )</code> \u7B49\u65B9\u6CD5\uFF0C\u5982\u4E0A\u9762\u90A3\u4E32\u4EE3\u7801\u5C31\u53EF\u4EE5\u5199\u6210\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-4-interval" tabindex="-1"><a class="header-anchor" href="#_1-4-interval" aria-hidden="true">#</a> 1.4 interval( )</h3>`,5),Fn=s("\u8FD4\u56DE\u4E00\u4E2A\u6BCF\u9694\u6307\u5B9A\u7684\u65F6\u95F4\u95F4\u9694\u5C31\u53D1\u5C04\u4E00\u4E2A\u5E8F\u5217\u53F7\u7684 "),Un={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},In=s("Observable"),Ln=s(" \u5BF9\u8C61\uFF0C\u53EF\u7528\u6765\u505A\u5012\u8BA1\u65F6\u7B49\u64CD\u4F5C\u3002"),qn=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),En={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#interval(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Cn=s("public static Observable<Long> interval(long interval, TimeUnit unit)"),Nn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#interval(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Bn=s("public static Observable<Long> interval(long interval, TimeUnit unit, Scheduler scheduler)"),Dn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#interval(long,%20long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Mn=s("public static Observable<Long> interval(long initialDelay, long period, TimeUnit unit)"),Wn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#interval(long,%20long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},An=s("public static Observable<Long> interval(long initialDelay, long period, TimeUnit unit, Scheduler scheduler)"),Vn=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6BCF\u9694 1 s \u53D1\u9001\u4E00\u4E2A\u5E8F\u5217\u53F7\uFF0C\u5E8F\u5217\u53F7\u4ECE 0 \u5F00\u59CB\uFF0C\u6BCF\u6B21\u7D2F\u52A0 1\u3002</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-timer" tabindex="-1"><a class="header-anchor" href="#_1-5-timer" aria-hidden="true">#</a> 1.5 timer( )</h3>`,3),Hn=s("\u521B\u5EFA\u4E00\u4E2A\u5728\u6307\u5B9A\u5EF6\u8FDF\u65F6\u95F4\u540E\u53D1\u5C04\u4E00\u6761\u6570\u636E\uFF08"),zn=n("span",{color:"#999999"}," \u56FA\u5B9A\u503C\uFF1A0 ",-1),Xn=s("\uFF09\u7684 "),Gn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Kn=s("Observable"),Pn=s(" \u5BF9\u8C61\uFF0C\u53EF\u7528\u6765\u505A\u5B9A\u65F6\u64CD\u4F5C\u3002"),Qn=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),Yn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#timer(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Zn=s("public static Observable<Long> timer(long delay, TimeUnit unit)"),$n={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#timer(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},ns=s("public static Observable<Long> timer(long delay, TimeUnit unit, Scheduler scheduler)"),ss=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5B9A\u65F6 3 s</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-6-range" tabindex="-1"><a class="header-anchor" href="#_1-6-range" aria-hidden="true">#</a> 1.6 range( )</h3>`,3),as=s("\u521B\u5EFA\u4E00\u4E2A\u53D1\u5C04\u6307\u5B9A\u8303\u56F4\u5185\u7684\u8FDE\u7EED\u6574\u6570\u7684 "),es={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ts=s("Observable"),ps=s(" \u5BF9\u8C61\u3002"),os=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),cs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#range(int,%20int)",target:"_blank",rel:"noopener noreferrer"},ls=s("public static Observable<Integer> range(int start, int count)"),is={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#range(int,%20int,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},us=s("public static Observable<Integer> range(int start, int count, Scheduler scheduler)"),rs=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4F9D\u6B21\u53D1\u5C04 5\u30016\u30017</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-7-empty" tabindex="-1"><a class="header-anchor" href="#_1-7-empty" aria-hidden="true">#</a> 1.7 empty()</h3>`,3),ks=s("\u521B\u5EFA\u4E00\u4E2A\u4E0D\u53D1\u5C04\u4EFB\u4F55\u6570\u636E\u5C31\u53D1\u51FA "),ds=n("code",null,"onCompleted()",-1),vs=s(" \u901A\u77E5\u7684 "),bs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ms=s("Observable"),hs=s(" \u5BF9\u8C61\u3002"),_s=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),gs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#empty()",target:"_blank",rel:"noopener noreferrer"},fs=s("public static <T> Observable<T> empty()"),xs=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D1\u51FA\u4E00\u4E2A onCompleted() \u901A\u77E5</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-8-error" tabindex="-1"><a class="header-anchor" href="#_1-8-error" aria-hidden="true">#</a> 1.8 error( )</h3>`,3),Os=s("\u521B\u5EFA\u4E0D\u53D1\u5C04\u4EFB\u4F55\u6570\u636E\u5C31\u53D1\u51FA "),Ts=n("code",null,"onError",-1),js=s(" \u901A\u77E5\u7684 "),ws={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ys=s("Observable"),Rs=s(" \u5BF9\u8C61\u3002"),Ss=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),Js={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#error(java.lang.Throwable)",target:"_blank",rel:"noopener noreferrer"},Fs=s("public static <T> Observable<T> error(Throwable exception)"),Us=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D1\u51FA\u4E00\u4E2A onError() \u901A\u77E5</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Throwable</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-9-never" tabindex="-1"><a class="header-anchor" href="#_1-9-never" aria-hidden="true">#</a> 1.9 never()</h3>`,3),Is=s("\u521B\u5EFA\u4E00\u4E2A\u4E0D\u53D1\u5C04\u4EFB\u4F55\u6570\u636E\u548C\u901A\u77E5\u7684 "),Ls={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},qs=s("Observable"),Es=s(" \u5BF9\u8C61\u3002"),Cs=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),Ns={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#never()",target:"_blank",rel:"noopener noreferrer"},Bs=s("public static <T> Observable<T> never()"),Ds=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">never</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-10-defer" tabindex="-1"><a class="header-anchor" href="#_1-10-defer" aria-hidden="true">#</a> 1.10 defer( )</h3>`,3),Ms=s("\u5728\u8BA2\u9605\u7684\u65F6\u5019\u624D\u4F1A\u521B\u5EFA Observable \u5BF9\u8C61\uFF1B\u6BCF\u4E00\u6B21\u8BA2\u9605\u90FD\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684 "),Ws={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},As=s("Observable"),Vs=s(" \u5BF9\u8C61\u3002"),Hs=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),zs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#defer(rx.functions.Func0)",target:"_blank",rel:"noopener noreferrer"},Xs=s("public static <T> Observable<T> defer(Func0<Observable<T>> observableFactory)"),Gs=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">defer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func0</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u91CD\u505A" tabindex="-1"><a class="header-anchor" href="#_2-\u91CD\u505A" aria-hidden="true">#</a> 2 \u91CD\u505A</h2><h3 id="_2-1-repeat" tabindex="-1"><a class="header-anchor" href="#_2-1-repeat" aria-hidden="true">#</a> 2.1 repeat( )</h3><p>\u4F7FObservable \u5BF9\u8C61\u5728\u53D1\u51FA <code>onNext()</code> \u901A\u77E5\u4E4B\u540E\u91CD\u590D\u53D1\u5C04\u6570\u636E\u3002\u91CD\u505A\u7ED3\u675F\u624D\u4F1A\u53D1\u51FA <code>onComplete()</code> \u901A\u77E5\uFF0C\u82E5\u91CD\u505A\u8FC7\u7A0B\u4E2D\u51FA\u73B0\u5F02\u5E38\u5219\u4F1A\u4E2D\u65AD\u5E76\u53D1\u51FA <code>onError()</code> \u901A\u77E5\u3002</p><p><strong>\u65B9\u6CD5\u5217\u8868\uFF1A</strong></p>`,6),Ks={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeat()",target:"_blank",rel:"noopener noreferrer"},Ps=s("public final Observable<T> repeat()"),Qs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeat(long)",target:"_blank",rel:"noopener noreferrer"},Ys=s("public final Observable<T> repeat(final long count) "),Zs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeat(rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},$s=s("public final Observable<T> repeat(Scheduler scheduler) "),na={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeat(long,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},sa=s("public final Observable<T> repeat(final long count, Scheduler scheduler)"),aa=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u65E0\u9650\u91CD\u590D\u6267\u884C</span>
observable<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u91CD\u590D\u6267\u884C 5 \u6B21</span>
observable<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-repeatwhen" tabindex="-1"><a class="header-anchor" href="#_2-2-repeatwhen" aria-hidden="true">#</a> 2.2 repeatWhen( )</h3><p>\u4F7FObservable \u5BF9\u8C61\u5728\u53D1\u51FA <code>onNext()</code> \u901A\u77E5\u4E4B\u540E\u6709\u6761\u4EF6\u7684\u91CD\u590D\u53D1\u5C04\u6570\u636E\u3002\u91CD\u505A\u7ED3\u675F\u624D\u4F1A\u53D1\u51FA <code>onCompleted()</code> \u901A\u77E5\uFF0C\u82E5\u91CD\u505A\u8FC7\u7A0B\u4E2D\u51FA\u73B0\u5F02\u5E38\u5219\u4F1A\u4E2D\u65AD\u5E76\u53D1\u51FA <code>onError()</code> \u901A\u77E5\u3002</p><p><strong>\u65B9\u6CD5\u5217\u8868\uFF1A</strong></p>`,5),ea={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeatWhen(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},ta=s("public final Observable<T> repeatWhen(final Func1<? super Observable<? extends Void>, ? extends Observable<?>> notificationHandler)"),pa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeatWhen(rx.functions.Func1,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},oa=s("public final Observable<T> repeatWhen(final Func1<? super Observable<? extends Void>, ? extends Observable>?> notificationHandler, Scheduler scheduler)"),ca=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>observable<span class="token punctuation">.</span><span class="token function">repeatWhen</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Void</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> observable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u91CD\u590D 3 \u6B21, \u6BCF\u6B21\u95F4\u9694 1 s</span>
        <span class="token keyword">return</span> observable<span class="token punctuation">.</span><span class="token function">zipWith</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Void</span> aVoid<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer<span class="token punctuation">;</span>
             <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>integer <span class="token operator">-&gt;</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u91CD\u8BD5" tabindex="-1"><a class="header-anchor" href="#_3-\u91CD\u8BD5" aria-hidden="true">#</a> 3 \u91CD\u8BD5</h2><h3 id="_3-1-retry" tabindex="-1"><a class="header-anchor" href="#_3-1-retry" aria-hidden="true">#</a> 3.1 retry( )</h3>`,4),la=s("\u5728\u6267\u884C "),ia={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ua=s("Observable"),ra=s("\u5BF9\u8C61\u7684\u5E8F\u5217\u51FA\u73B0\u5F02\u5E38\u65F6\uFF0C\u4E0D\u76F4\u63A5\u53D1\u51FA "),ka=n("code",null,"onError()",-1),da=s(" \u901A\u77E5\uFF0C\u800C\u662F\u91CD\u65B0\u8BA2\u9605\u8BE5 "),va={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ba=s("Observable"),ma=s("\u5BF9\u8C61\uFF0C\u76F4\u5230\u91CD\u505A\u8FC7\u7A0B\u4E2D\u672A\u51FA\u73B0\u5F02\u5E38\uFF0C\u5219\u4F1A\u53D1\u51FA "),ha=n("code",null,"onNext()",-1),_a=s(" \u548C "),ga=n("code",null,"onCompleted()",-1),fa=s(" \u901A\u77E5\uFF1B\u82E5\u91CD\u505A\u8FC7\u7A0B\u4E2D\u4E5F\u51FA\u73B0\u5F02\u5E38\uFF0C\u5219\u4F1A\u7EE7\u7EED\u91CD\u8BD5\uFF0C\u76F4\u5230\u8FBE\u5230\u91CD\u8BD5\u6B21\u6570\u4E0A\u9650\uFF0C\u8D85\u51FA\u6B21\u6570\u540E\u53D1\u51FA\u6700\u65B0\u7684 "),xa=n("code",null,"onError()",-1),Oa=s(" \u901A\u77E5\u3002"),Ta=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),ja={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retry()",target:"_blank",rel:"noopener noreferrer"},wa=s("public final Observable<T> retry()"),ya={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retry(long)",target:"_blank",rel:"noopener noreferrer"},Ra=s("public final Observable<T> retry(final long count)"),Sa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retry(rx.functions.Func2)",target:"_blank",rel:"noopener noreferrer"},Ja=s("public final Observable<T> retry(Func2<Integer, Throwable, Boolean> predicate)"),Fa=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> subscriber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;.......&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
        subscriber<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        subscriber<span class="token punctuation">.</span><span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u65E0\u9650\u6B21\u7684\u91CD\u8BD5</span>
observable<span class="token punctuation">.</span><span class="token function">retry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u91CD\u8BD5 3 \u6B21</span>
observable<span class="token punctuation">.</span><span class="token function">retry</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4F7F\u7528\u8C13\u8BED\u51FD\u6570\u51B3\u5B9A\u662F\u5426\u91CD\u8BD5</span>
observable<span class="token punctuation">.</span><span class="token function">retry</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53C2\u6570 integer \u662F\u8BA2\u9605\u7684\u6B21\u6570; \u53C2\u6570 throwable \u662F\u629B\u51FA\u7684\u5F02\u5E38</span>
        <span class="token comment">// \u8FD4\u56DE\u503C\u4E3A true \u8868\u793A\u91CD\u8BD5, \u8FD4\u56DE\u503C\u4E3A false \u8868\u793A\u4E0D\u91CD\u8BD5</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-retrywhen" tabindex="-1"><a class="header-anchor" href="#_3-2-retrywhen" aria-hidden="true">#</a> 3.2 retryWhen( )</h3><p><strong>\u4F5C\u7528\uFF1A</strong> \u6709\u6761\u4EF6\u7684\u6267\u884C\u91CD\u8BD5\u3002</p><p><strong>\u65B9\u6CD5\u5217\u8868\uFF1A</strong></p>`,5),Ua={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retryWhen(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},Ia=s("public final Observable<T> retryWhen(final Func1<? super Observable<? extends Throwable>, ? extends Observable<?>> notificationHandler)"),La={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retryWhen(rx.functions.Func1,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},qa=s("public final Observable<T> retryWhen(final Func1<? super Observable<? extends Throwable>, ? extends Observable<?>>notificationHandler, Scheduler scheduler)"),Ea=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u91CD\u8BD5 3 \u6B21\uFF0C\u6BCF\u6B21\u95F4\u9694 1 s</span>
observable<span class="token punctuation">.</span><span class="token function">retryWhen</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span></span> observable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> observable<span class="token punctuation">.</span><span class="token function">zipWith</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u53D8\u6362" tabindex="-1"><a class="header-anchor" href="#_4-\u53D8\u6362" aria-hidden="true">#</a> 4 \u53D8\u6362</h2><h3 id="_4-1-map" tabindex="-1"><a class="header-anchor" href="#_4-1-map" aria-hidden="true">#</a> 4.1 map( )</h3>`,4),Ca=s("\u628A\u6E90 "),Na={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Ba=s("Observable"),Da=s(" \u53D1\u5C04\u7684\u5143\u7D20\u5E94\u7528\u4E8E\u6307\u5B9A\u7684\u51FD\u6570\uFF0C\u5E76\u53D1\u9001\u8BE5\u51FD\u6570\u7684\u7ED3\u679C\u3002"),Ma=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),Wa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#map(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},Aa=s("public final <R> Observable<R> map(Func1<? super T, ? extends R> func)"),Va=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;\u539F\u59CB\u6570\u636E\u7684\u4E24\u500D\u4E3A: %s&quot;</span><span class="token punctuation">,</span> integer <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-flatmap" tabindex="-1"><a class="header-anchor" href="#_4-2-flatmap" aria-hidden="true">#</a> 4.2 flatMap( )</h3>`,3),Ha=s("\u8F6C\u6362\u6E90 "),za={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Xa=s("Observable"),Ga=s(" \u5BF9\u8C61\u4E3A\u53E6\u4E00\u4E2A "),Ka={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Pa=s("Observable"),Qa=s(" \u5BF9\u8C61\u3002"),Ya=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),Za={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},$a=s("public final <R> Observable<R> flatMap(Func1<? super T, ? extends Observable<? extends R>> func)"),ne={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20int)",target:"_blank",rel:"noopener noreferrer"},se=s("@Beta public final <R> Observable<R> flatMap(Func1<? super T, ? extends Observable<? extends R>> func, int maxConcurrent)"),ae={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20rx.functions.Func1,%20rx.functions.Func0)",target:"_blank",rel:"noopener noreferrer"},ee=s("public final <R> Observable<R> flatMap(Func1<? super T, ? extends Observable<? extends R>> onNext, Func1<? super Throwable, ? extends Observable<? extends R>> onError, Func0<? extends Observable<? extends R>> onCompleted)"),te={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20rx.functions.Func1,%20rx.functions.Func0,%20int)",target:"_blank",rel:"noopener noreferrer"},pe=s("@Beta public final <R> Observable<R> flatMap(Func1<? super T, ? extends Observable<? extends R>> onNext, Func1<? super Throwable, ? extends Observable<? extends R>> onError, Func0<? extends Observable<? extends R>> onCompleted, int maxConcurrent)"),oe={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20rx.functions.Func2)",target:"_blank",rel:"noopener noreferrer"},ce=s("public final <U, R> Observable<R> flatMap(final Func1<? super T, ? extends Observable<? extends U>> collectionSelector, final Func2<? super T, ? super U, ? extends R> resultSelector)"),le={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20rx.functions.Func2,%20int)",target:"_blank",rel:"noopener noreferrer"},ie=s("@Beta public final <U, R> Observable<R> flatMap(final Func1<? super T, ? extends Observable<? extends U>> collectionSelector, final Func2<? super T, ? super U, ? extends R> resultSelector, int maxConcurrent)"),ue=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u8F6C\u6362\u4E3A\u4E00\u4E2A\u5B9A\u65F6 integer \u79D2\u7684 Observable \u5BF9\u8C61</span>
                <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span>integer<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u8FC7\u6EE4" tabindex="-1"><a class="header-anchor" href="#_5-\u8FC7\u6EE4" aria-hidden="true">#</a> 5 \u8FC7\u6EE4</h2><h3 id="_5-1-filter" tabindex="-1"><a class="header-anchor" href="#_5-1-filter" aria-hidden="true">#</a> 5.1 filter( )</h3><p>\u53EA\u53D1\u5C04\u6EE1\u8DB3\u6307\u5B9A\u8C13\u8BCD\u7684\u5143\u7D20\u3002</p><p><strong>\u65B9\u6CD5\u5217\u8868\uFF1A</strong></p>`,6),re={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#filter(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},ke=s("public final Observable<T> filter(Func1<? super T, Boolean> predicate)"),de=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-first" tabindex="-1"><a class="header-anchor" href="#_5-2-first" aria-hidden="true">#</a> 5.2 first( )</h3>`,3),ve=s("\u8FD4\u56DE\u4E00\u4E2A\u4EC5\u4EC5\u53D1\u5C04\u6E90 "),be={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},me=s("Observable"),he=s(" \u53D1\u5C04\u7684\u7B2C\u4E00\u4E2A\uFF3B\u6EE1\u8DB3\u6307\u5B9A\u8C13\u8BCD\u7684\uFF3D\u5143\u7D20\u7684 "),_e={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ge=s("Observable"),fe=s("\uFF0C\u5982\u679C\u5982\u679C\u6E90 "),xe={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Oe=s("Observable"),Te=s(" \u4E3A\u7A7A\uFF0C\u5219\u4F1A\u629B\u51FA\u4E00\u4E2A "),je=n("code",null,"NoSuchElementException",-1),we=s("\u3002"),ye=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),Re={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#first()",target:"_blank",rel:"noopener noreferrer"},Se=s("public final Observable<T> first()"),Je={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#first(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},Fe=s("public final Observable<T> first(Func1<? super T, Boolean> predicate)"),Ue=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D1\u5C04\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u53D1\u5C04\u6EE1\u8DB3\u6761\u4EF6\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F1A\u629B\u51FA NoSuchElementException \u5F02\u5E38</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-last" tabindex="-1"><a class="header-anchor" href="#_5-3-last" aria-hidden="true">#</a> 5.3 last( )</h3>`,3),Ie=s("\u8FD4\u56DE\u4E00\u4E2A\u4EC5\u4EC5\u53D1\u5C04\u6E90 "),Le={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},qe=s("Observable"),Ee=s(" \u53D1\u5C04\u7684\u5012\u6570\u7B2C\u4E00\u4E2A\uFF3B\u6EE1\u8DB3\u6307\u5B9A\u8C13\u8BCD\u7684\uFF3D\u5143\u7D20\u7684 "),Ce={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Ne=s("Observable"),Be=s("\uFF0C\u5982\u679C\u5982\u679C\u6E90 "),De={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Me=s("Observable"),We=s(" \u4E3A\u7A7A\uFF0C\u5219\u4F1A\u629B\u51FA\u4E00\u4E2A "),Ae=n("code",null,"NoSuchElementException",-1),Ve=s("\u3002"),He=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),ze={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#last()",target:"_blank",rel:"noopener noreferrer"},Xe=s("public final Observable<T> last()"),Ge={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#last(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},Ke=s("public final Observable<T> last(Func1<? super T, Boolean> predicate)"),Pe=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D1\u5C04\u5012\u6570\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u53D1\u5C04\u6EE1\u8DB3\u6761\u4EF6\u7684\u5012\u6570\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F1A\u629B\u51FA NoSuchElementException \u5F02\u5E38</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-4-skip" tabindex="-1"><a class="header-anchor" href="#_5-4-skip" aria-hidden="true">#</a> 5.4 skip( )</h3><p>\u8DF3\u8FC7\u524D\u9762\u6307\u5B9A\u6570\u91CF\u6216\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u5143\u7D20\uFF0C\u53EA\u53D1\u5C04\u540E\u9762\u7684\u5143\u7D20\u3002</p><p><strong>\u65B9\u6CD5\u5217\u8868\uFF1A</strong></p>`,5),Qe={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skip(int)",target:"_blank",rel:"noopener noreferrer"},Ye=s("public final Observable<T> skip(int count)"),Ze={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skip(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},$e=s("public final Observable<T> skip(long time, TimeUnit unit)"),nt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skip(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},st=s("public final Observable<T> skip(long time, TimeUnit unit, Scheduler scheduler)"),at=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// \u8DF3\u8FC7\u524D\u4E24\u6761\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-5-skiplast" tabindex="-1"><a class="header-anchor" href="#_5-5-skiplast" aria-hidden="true">#</a> 5.5 skipLast( )</h3>`,3),et=s("\u8DF3\u8FC7\u524D\u9762\u6307\u5B9A\u6570\u91CF\u6216\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u5143\u7D20\uFF0C\u53EA\u53D1\u5C04\u540E\u9762\u7684\u5143\u7D20\u3002\u6307\u5B9A\u65F6\u95F4\u65F6\u4F1A\u5EF6\u8FDF\u6E90 "),tt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},pt=s("Observable"),ot=s(" \u53D1\u5C04\u7684\u4EFB\u4F55\u6570\u636E\u3002"),ct=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),lt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skipLast(int)",target:"_blank",rel:"noopener noreferrer"},it=s("public final Observable<T> skipLast(int count)"),ut={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skipLast(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},rt=s("public final Observable<T> skipLast(long time, TimeUnit unit)"),kt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skipLast(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},dt=s("public final Observable<T> skipLast(long time, TimeUnit unit, Scheduler scheduler)"),vt=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// \u8DF3\u8FC7\u540E\u4E24\u6761\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-6-take" tabindex="-1"><a class="header-anchor" href="#_5-6-take" aria-hidden="true">#</a> 5.6 take( )</h3><p>\u53EA\u53D1\u5C04\u524D\u9762\u6307\u5B9A\u6570\u91CF\u6216\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u5143\u7D20\u3002</p><p><strong>\u65B9\u6CD5\u5217\u8868\uFF1A</strong></p>`,5),bt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#take(int)",target:"_blank",rel:"noopener noreferrer"},mt=s("public final Observable<T> take(final int count)"),ht={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#take(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},_t=s("public final Observable<T> take(long time, TimeUnit unit)"),gt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#take(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},ft=s("public final Observable<T> take(long time, TimeUnit unit, Scheduler scheduler)"),xt=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u53D1\u5C04\u524D\u4E09\u6761\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-7-takelast" tabindex="-1"><a class="header-anchor" href="#_5-7-takelast" aria-hidden="true">#</a> 5.7 takeLast( )</h3>`,3),Ot=s("\u53EA\u53D1\u5C04\u540E\u9762\u6307\u5B9A\u6570\u91CF\u6216\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u5143\u7D20\u3002\u6307\u5B9A\u65F6\u95F4\u65F6\u4F1A\u5EF6\u8FDF\u6E90 "),Tt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},jt=s("Observable"),wt=s(" \u53D1\u5C04\u7684\u4EFB\u4F55\u6570\u636E\u3002"),yt=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),Rt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(int)",target:"_blank",rel:"noopener noreferrer"},St=s("public final Observable<T> takeLast(final int count)"),Jt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(int,%20long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Ft=s("public final Observable<T> takeLast(int count, long time, TimeUnit unit)"),Ut={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(int,%20long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},It=s("public final Observable<T> takeLast(int count, long time, TimeUnit unit, Scheduler scheduler)"),Lt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},qt=s("public final Observable<T> takeLast(long time, TimeUnit unit)"),Et={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Ct=s("public final Observable<T> takeLast(long time, TimeUnit unit, Scheduler scheduler)"),Nt=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">takeLast</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u53D1\u5C04\u540E\u4E09\u6761\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-8-sample" tabindex="-1"><a class="header-anchor" href="#_5-8-sample" aria-hidden="true">#</a> 5.8 sample( )</h3>`,3),Bt=s("\u5B9A\u671F\u53D1\u5C04 "),Dt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Mt=s("Observable"),Wt=s(" \u53D1\u5C04\u7684\u6700\u540E\u4E00\u6761\u6570\u636E\u3002"),At=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),Vt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#sample(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Ht=s("public final Observable<T> sample(long period, TimeUnit unit)"),zt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#sample(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Xt=s("public final Observable<T> sample(long period, TimeUnit unit, Scheduler scheduler)"),Gt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#sample(rx.Observable)",target:"_blank",rel:"noopener noreferrer"},Kt=s("public final <U> Observable<T> sample(Observable<U> sampler)"),Pt=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">sample</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-9-elementat" tabindex="-1"><a class="header-anchor" href="#_5-9-elementat" aria-hidden="true">#</a> 5.9 elementAt( )</h3><p>\u53EA\u53D1\u5C04\u6307\u5B9A\u7D22\u5F15\u7684\u5143\u7D20\u3002</p><p><strong>\u65B9\u6CD5\u5217\u8868\uFF1A</strong></p>`,5),Qt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#elementAt(int)",target:"_blank",rel:"noopener noreferrer"},Yt=s("public final Observable<T> elementAt(int index)"),Zt=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">elementAt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D1\u5C04\u7D22\u5F15\u4E3A 2 \u7684\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-10-elementatordefault" tabindex="-1"><a class="header-anchor" href="#_5-10-elementatordefault" aria-hidden="true">#</a> 5.10 elementAtOrDefault( )</h3><p>\u53EA\u53D1\u5C04\u6307\u5B9A\u7D22\u5F15\u7684\u5143\u7D20\uFF0C\u82E5\u8BE5\u7D22\u5F15\u5BF9\u5E94\u7684\u5143\u7D20\u4E0D\u5B58\u5728\uFF0C\u5219\u53D1\u5C04\u9ED8\u8BA4\u503C\u3002</p><p><strong>\u65B9\u6CD5\u5217\u8868\uFF1A</strong></p>`,5),$t={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#elementAtOrDefault(int,%20T)",target:"_blank",rel:"noopener noreferrer"},np=s("public final Observable<T> elementAtOrDefault(int index, T defaultValue)"),sp=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">elementAtOrDefault</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D1\u5C04\u7D22\u5F15\u4E3A 9\u7684\u6570\u636E\uFF0C\u82E5\u4E0D\u5B58\u5728\uFF0C\u5219\u53D1\u5C04 -5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-11-ignoreelements" tabindex="-1"><a class="header-anchor" href="#_5-11-ignoreelements" aria-hidden="true">#</a> 5.11 ignoreElements( )</h3><p>\u4E0D\u53D1\u5C04\u4EFB\u4F55\u6570\u636E\uFF0C\u76F4\u63A5\u53D1\u51FA <code>onCompleted()</code> \u901A\u77E5\u3002</p><p><strong>\u65B9\u6CD5\u5217\u8868\uFF1A</strong></p>`,5),ap={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#ignoreElements()",target:"_blank",rel:"noopener noreferrer"},ep=s("public final Observable<T> ignoreElements()"),tp=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ignoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-12-distinct" tabindex="-1"><a class="header-anchor" href="#_5-12-distinct" aria-hidden="true">#</a> 5.12 distinct( )</h3><p>\u8FC7\u6EE4\u91CD\u590D\u7684\u5143\u7D20\uFF0C\u8FC7\u6EE4\u89C4\u5219\u662F\uFF1A\u53EA\u5141\u8BB8\u8FD8\u6CA1\u6709\u53D1\u5C04\u8FC7\u7684\u5143\u7D20\u901A\u8FC7\u3002</p><p><strong>\u65B9\u6CD5\u5217\u8868\uFF1A</strong></p>`,5),pp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#distinct()",target:"_blank",rel:"noopener noreferrer"},op=s("public final Observable<T> distinct()"),cp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#distinct(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},lp=s("public final <U> Observable<T> distinct(Func1<? super T, ? extends U> keySelector)"),ip=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u76F4\u63A5\u8FC7\u6EE4</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u901A\u8FC7\u751F\u6210\u7684 key \u503C\u8FC7\u6EE4</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u968F\u673A\u751F\u6210 key</span>
        <span class="token keyword">return</span> integer <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-13-debounce" tabindex="-1"><a class="header-anchor" href="#_5-13-debounce" aria-hidden="true">#</a> 5.13 debounce( )</h3>`,3),up=s("\u6E90 "),rp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},kp=s("Observable"),dp=s(" \u6BCF\u4EA7\u751F\u7ED3\u679C\u540E\uFF0C\u5982\u679C\u5728\u89C4\u5B9A\u7684\u95F4\u9694\u65F6\u95F4\u5185\u6CA1\u6709\u4EA7\u751F\u65B0\u7684\u7ED3\u679C\uFF0C\u5219\u53D1\u5C04\u8FD9\u4E2A\u7ED3\u679C\uFF0C\u5426\u5219\u4F1A\u5FFD\u7565\u8FD9\u4E2A\u7ED3\u679C\u3002\u8BE5\u64CD\u4F5C\u7B26\u4F1A\u8FC7\u6EE4\u6389\u53D1\u5C04\u901F\u7387\u8FC7\u5FEB\u7684\u6570\u636E\u9879\u3002"),vp=n("p",null,[n("strong",null,"\u65B9\u6CD5\u5217\u8868\uFF1A")],-1),bp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#debounce(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},mp=s("public final Observable<T> debounce(long timeout, TimeUnit unit)"),hp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#debounce(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},_p=s("public final Observable<T> debounce(long timeout, TimeUnit unit, Scheduler scheduler)"),gp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#debounce(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},fp=s("public final <U> Observable<T> debounce(Func1<? super T, ? extends Observable<U>> debounceSelector)"),xp=t(`<p><strong>\u6817\u5B50\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> subscriber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u4EA7\u751F\u7ED3\u679C\u7684\u95F4\u9694\u65F6\u95F4\u5206\u522B\u4E3A100\u3001200\u3001300...900\u6BEB\u79D2</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                subscriber<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            subscriber<span class="token punctuation">.</span><span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            subscriber<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
observable<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span>  <span class="token comment">// \u8D85\u65F6\u65F6\u95F4\u4E3A400\u6BEB\u79D2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u6817\u5B50\u4EA7\u751F\u7ED3\u679C\u4E3A\uFF1A\u4F9D\u6B21\u6253\u53705\u30016\u30017\u30018\u3002</p><h2 id="\u9644-\u529F\u80FD\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u9644-\u529F\u80FD\u5B9E\u73B0" aria-hidden="true">#</a> \u9644\uFF1A\u529F\u80FD\u5B9E\u73B0</h2><h3 id="\u5EF6\u65F6\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5EF6\u65F6\u904D\u5386" aria-hidden="true">#</a> \u5EF6\u65F6\u904D\u5386</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u904D\u5386</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> traverseObservable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8BA1\u65F6</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> intervalObservable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
<span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> func2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> integer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

intervalObservable<span class="token punctuation">.</span><span class="token function">zipWith</span><span class="token punctuation">(</span>traverseObservable<span class="token punctuation">,</span> func2<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toBlocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;onCompleted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

           <span class="token annotation punctuation">@Override</span>
           <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5012\u8BA1\u65F6" tabindex="-1"><a class="header-anchor" href="#\u5012\u8BA1\u65F6" aria-hidden="true">#</a> \u5012\u8BA1\u65F6</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> startTime <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span>startTime <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// \u63A5\u6536 startTime + 1 \u6B21</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Long</span> time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 1 2 3...\u8F6C\u6362\u4E3A...3 2 1</span>
                <span class="token keyword">return</span> startTime <span class="token operator">-</span> time<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toBlocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5012\u8BA1\u65F6\u7ED3\u675F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5012\u8BA1\u65F6\u51FA\u73B0\u5F02\u5E38&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;\u5012\u8BA1\u65F6: %s s&quot;</span><span class="token punctuation">,</span> aLong<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function Op(Tp,jp){const a=o("ExternalLinkIcon");return c(),l("div",null,[n("p",null,[n("strong",null,[u,n("a",r,[k,e(a)]),d])]),v,n("ul",null,[n("li",null,[n("a",b,[m,e(a)])]),n("li",null,[n("a",h,[_,e(a)])])]),g,n("h2",f,[x,O,n("a",T,[j,e(a)]),w]),y,n("p",null,[R,n("a",S,[J,e(a)]),F]),U,n("ul",null,[n("li",null,[n("p",null,[n("a",I,[L,e(a)])])]),n("li",null,[n("p",null,[n("a",q,[E,e(a)])])]),n("li",null,[n("p",null,[n("a",C,[N,e(a)])])]),n("li",null,[n("p",null,[n("a",B,[D,e(a)])])]),n("li",null,[n("p",null,[n("a",M,[W,e(a)])])])]),A,n("p",null,[V,n("a",H,[z,e(a)]),X]),G,n("ul",null,[n("li",null,[n("p",null,[n("a",K,[P,e(a)])])]),n("li",null,[n("p",null,[n("a",Q,[Y,e(a)])])]),n("li",null,[n("p",null,[n("a",Z,[$,e(a)])])]),n("li",null,[n("p",null,[n("a",nn,[sn,e(a)])])]),n("li",null,[n("p",null,[n("a",an,[en,e(a)])])]),n("li",null,[n("p",null,[n("a",tn,[pn,e(a)])])]),n("li",null,[n("p",null,[n("a",on,[cn,e(a)])])]),n("li",null,[n("p",null,[n("a",ln,[un,e(a)])])]),n("li",null,[n("p",null,[n("a",rn,[kn,e(a)])])]),n("li",null,[n("p",null,[n("a",dn,[vn,e(a)])])])]),bn,n("p",null,[mn,hn,_n,n("a",gn,[fn,e(a)]),xn]),On,n("ul",null,[n("li",null,[n("p",null,[n("a",Tn,[jn,e(a)])])]),n("li",null,[n("p",null,[n("a",wn,[yn,e(a)])])]),n("li",null,[n("p",null,[n("a",Rn,[Sn,e(a)])])])]),Jn,n("p",null,[Fn,n("a",Un,[In,e(a)]),Ln]),qn,n("ul",null,[n("li",null,[n("p",null,[n("a",En,[Cn,e(a)])])]),n("li",null,[n("p",null,[n("a",Nn,[Bn,e(a)])])]),n("li",null,[n("p",null,[n("a",Dn,[Mn,e(a)])])]),n("li",null,[n("p",null,[n("a",Wn,[An,e(a)])])])]),Vn,n("p",null,[Hn,zn,Xn,n("a",Gn,[Kn,e(a)]),Pn]),Qn,n("ul",null,[n("li",null,[n("p",null,[n("a",Yn,[Zn,e(a)])])]),n("li",null,[n("p",null,[n("a",$n,[ns,e(a)])])])]),ss,n("p",null,[as,n("a",es,[ts,e(a)]),ps]),os,n("ul",null,[n("li",null,[n("p",null,[n("a",cs,[ls,e(a)])])]),n("li",null,[n("p",null,[n("a",is,[us,e(a)])])])]),rs,n("p",null,[ks,ds,vs,n("a",bs,[ms,e(a)]),hs]),_s,n("ul",null,[n("li",null,[n("a",gs,[fs,e(a)])])]),xs,n("p",null,[Os,Ts,js,n("a",ws,[ys,e(a)]),Rs]),Ss,n("ul",null,[n("li",null,[n("a",Js,[Fs,e(a)])])]),Us,n("p",null,[Is,n("a",Ls,[qs,e(a)]),Es]),Cs,n("ul",null,[n("li",null,[n("a",Ns,[Bs,e(a)])])]),Ds,n("p",null,[Ms,n("a",Ws,[As,e(a)]),Vs]),Hs,n("ul",null,[n("li",null,[n("a",zs,[Xs,e(a)])])]),Gs,n("ul",null,[n("li",null,[n("p",null,[n("a",Ks,[Ps,e(a)])])]),n("li",null,[n("p",null,[n("a",Qs,[Ys,e(a)])])]),n("li",null,[n("p",null,[n("a",Zs,[$s,e(a)])])]),n("li",null,[n("p",null,[n("a",na,[sa,e(a)])])])]),aa,n("ul",null,[n("li",null,[n("p",null,[n("a",ea,[ta,e(a)])])]),n("li",null,[n("p",null,[n("a",pa,[oa,e(a)])])])]),ca,n("p",null,[la,n("a",ia,[ua,e(a)]),ra,ka,da,n("a",va,[ba,e(a)]),ma,ha,_a,ga,fa,xa,Oa]),Ta,n("ul",null,[n("li",null,[n("p",null,[n("a",ja,[wa,e(a)])])]),n("li",null,[n("p",null,[n("a",ya,[Ra,e(a)])])]),n("li",null,[n("p",null,[n("a",Sa,[Ja,e(a)])])])]),Fa,n("ul",null,[n("li",null,[n("p",null,[n("a",Ua,[Ia,e(a)])])]),n("li",null,[n("p",null,[n("a",La,[qa,e(a)])])])]),Ea,n("p",null,[Ca,n("a",Na,[Ba,e(a)]),Da]),Ma,n("ul",null,[n("li",null,[n("a",Wa,[Aa,e(a)])])]),Va,n("p",null,[Ha,n("a",za,[Xa,e(a)]),Ga,n("a",Ka,[Pa,e(a)]),Qa]),Ya,n("ul",null,[n("li",null,[n("p",null,[n("a",Za,[$a,e(a)])])]),n("li",null,[n("p",null,[n("a",ne,[se,e(a)])])]),n("li",null,[n("p",null,[n("a",ae,[ee,e(a)])])]),n("li",null,[n("p",null,[n("a",te,[pe,e(a)])])]),n("li",null,[n("p",null,[n("a",oe,[ce,e(a)])])]),n("li",null,[n("p",null,[n("a",le,[ie,e(a)])])])]),ue,n("ul",null,[n("li",null,[n("a",re,[ke,e(a)])])]),de,n("p",null,[ve,n("a",be,[me,e(a)]),he,n("a",_e,[ge,e(a)]),fe,n("a",xe,[Oe,e(a)]),Te,je,we]),ye,n("ul",null,[n("li",null,[n("p",null,[n("a",Re,[Se,e(a)])])]),n("li",null,[n("p",null,[n("a",Je,[Fe,e(a)])])])]),Ue,n("p",null,[Ie,n("a",Le,[qe,e(a)]),Ee,n("a",Ce,[Ne,e(a)]),Be,n("a",De,[Me,e(a)]),We,Ae,Ve]),He,n("ul",null,[n("li",null,[n("p",null,[n("a",ze,[Xe,e(a)])])]),n("li",null,[n("p",null,[n("a",Ge,[Ke,e(a)])])])]),Pe,n("ul",null,[n("li",null,[n("p",null,[n("a",Qe,[Ye,e(a)])])]),n("li",null,[n("p",null,[n("a",Ze,[$e,e(a)])])]),n("li",null,[n("p",null,[n("a",nt,[st,e(a)])])])]),at,n("p",null,[et,n("a",tt,[pt,e(a)]),ot]),ct,n("ul",null,[n("li",null,[n("p",null,[n("a",lt,[it,e(a)])])]),n("li",null,[n("p",null,[n("a",ut,[rt,e(a)])])]),n("li",null,[n("p",null,[n("a",kt,[dt,e(a)])])])]),vt,n("ul",null,[n("li",null,[n("p",null,[n("a",bt,[mt,e(a)])])]),n("li",null,[n("p",null,[n("a",ht,[_t,e(a)])])]),n("li",null,[n("p",null,[n("a",gt,[ft,e(a)])])])]),xt,n("p",null,[Ot,n("a",Tt,[jt,e(a)]),wt]),yt,n("ul",null,[n("li",null,[n("p",null,[n("a",Rt,[St,e(a)])])]),n("li",null,[n("p",null,[n("a",Jt,[Ft,e(a)])])]),n("li",null,[n("p",null,[n("a",Ut,[It,e(a)])])]),n("li",null,[n("p",null,[n("a",Lt,[qt,e(a)])])]),n("li",null,[n("p",null,[n("a",Et,[Ct,e(a)])])])]),Nt,n("p",null,[Bt,n("a",Dt,[Mt,e(a)]),Wt]),At,n("ul",null,[n("li",null,[n("p",null,[n("a",Vt,[Ht,e(a)])])]),n("li",null,[n("p",null,[n("a",zt,[Xt,e(a)])])]),n("li",null,[n("p",null,[n("a",Gt,[Kt,e(a)])])])]),Pt,n("ul",null,[n("li",null,[n("a",Qt,[Yt,e(a)])])]),Zt,n("ul",null,[n("li",null,[n("a",$t,[np,e(a)])])]),sp,n("ul",null,[n("li",null,[n("a",ap,[ep,e(a)])])]),tp,n("ul",null,[n("li",null,[n("p",null,[n("a",pp,[op,e(a)])])]),n("li",null,[n("p",null,[n("a",cp,[lp,e(a)])])])]),ip,n("p",null,[up,n("a",rp,[kp,e(a)]),dp]),vp,n("ul",null,[n("li",null,[n("p",null,[n("a",bp,[mp,e(a)])])]),n("li",null,[n("p",null,[n("a",hp,[_p,e(a)])])]),n("li",null,[n("p",null,[n("a",gp,[fp,e(a)])])])]),xp])}var yp=p(i,[["render",Op],["__file","\u4F60\u4E00\u5B9A\u4F1A\u7528\u5230\u7684 RxJava \u64CD\u4F5C\u7B26.html.vue"]]);export{yp as default};
