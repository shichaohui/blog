import{_ as e,p as o,q as c,s as n,R as s,t,a0 as p,n as i}from"./framework-8abcb967.js";const l={},u=n("p",null,[n("img",{src:"https://upload-images.jianshu.io/upload_images/1837368-636807121e6b206f.gif?imageMogr2/auto-orient/strip|imageView2/2/w/462/format/webp",alt:"demo"})],-1),k={href:"https://github.com/CymChad/BaseRecyclerViewAdapterHelper",target:"_blank",rel:"noopener noreferrer"},d=p(`<h2 id="简单-demo" tabindex="-1"><a class="header-anchor" href="#简单-demo" aria-hidden="true">#</a> 简单 Demo</h2><h3 id="定义-item" tabindex="-1"><a class="header-anchor" href="#定义-item" aria-hidden="true">#</a> 定义 Item</h3><p>为减少篇幅，这里省略了构造函数和 <code>getter/setter</code> 方法。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 省份（一级列表）
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Province</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractExpandableItem</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">City</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">MultiItemEntity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_province<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 城市（二级列表）
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">City</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractExpandableItem</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Town</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">MultiItemEntity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_city<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 乡镇（三级列表）
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Town</span> <span class="token keyword">implements</span> <span class="token class-name">MultiItemEntity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_town<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),r={href:"https://github.com/CymChad/BaseRecyclerViewAdapterHelper/blob/master/library/src/main/java/com/chad/library/adapter/base/entity/IExpandable.java",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/CymChad/BaseRecyclerViewAdapterHelper/blob/master/library/src/main/java/com/chad/library/adapter/base/entity/AbstractExpandableItem.java",target:"_blank",rel:"noopener noreferrer"},v=n("li",null,[n("code",null,"getLevel()"),s(" 函数的返回值必须从 0 开始，子列表的 "),n("code",null,"level"),s(" 必须大于父列表的 "),n("code",null,"level"),s(" 。")],-1),b={href:"https://github.com/CymChad/BaseRecyclerViewAdapterHelper/blob/master/library/src/main/java/com/chad/library/adapter/base/entity/MultiItemEntity.java",target:"_blank",rel:"noopener noreferrer"},y=p(`<h3 id="布局-item" tabindex="-1"><a class="header-anchor" href="#布局-item" aria-hidden="true">#</a> 布局 Item</h3><p><code>item_province.xml</code></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>40dp<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10dp<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/tvProvince<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center_vertical<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

    <span class="token comment">&lt;!-- 标识该 Item 的子列表是否展开，图片是 → ，通过旋转控制状态 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/ivExpandIcon<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center_vertical|end<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@mipmap/arrow_r<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>item_city.xml</code></p><p>城市也含有子列表，布局与 <code>Province</code> 一样，仅仅 id 不同。</p><p><code>item_town.xml</code></p><p>乡镇没有子列表，布局很简单，只有一个 <code>TextView</code>。</p><blockquote><p>**技巧：**可以通过设置子列表的 <code>margin_start</code> 控制不同级别列表的缩进效果。</p></blockquote><h3 id="定义-adapter" tabindex="-1"><a class="header-anchor" href="#定义-adapter" aria-hidden="true">#</a> 定义 Adapter</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 地区适配器
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LocationAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMultiItemQuickAdapter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MultiItemEntity</span><span class="token punctuation">,</span> <span class="token class-name">BaseViewHolder</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">LocationAdapter</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MultiItemEntity</span><span class="token punctuation">&gt;</span></span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      
        <span class="token comment">// 指定 type 对应的布局资源</span>
        <span class="token function">addItemType</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_province<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_province<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addItemType</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_city<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_city<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addItemType</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_town<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_town<span class="token punctuation">)</span><span class="token punctuation">;</span>
      
        <span class="token function">setOnItemClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
    <span class="token comment">// 设置 Item 点击事件监听器</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setOnItemClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">OnItemClickListener</span> onItemClickListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OnItemClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onItemClick</span><span class="token punctuation">(</span><span class="token class-name">BaseQuickAdapter</span> adapter<span class="token punctuation">,</span> <span class="token class-name">View</span> view<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">MultiItemEntity</span> item <span class="token operator">=</span> <span class="token function">getItem</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>item <span class="token keyword">instanceof</span> <span class="token class-name">AbstractExpandableItem</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AbstractExpandableItem</span><span class="token punctuation">)</span> item<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isExpanded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 收起被点击 Item 的子列表</span>
                    <span class="token function">collapse</span><span class="token punctuation">(</span>position <span class="token operator">+</span> <span class="token function">getHeaderLayoutCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 展开被点击 Item 的子列表</span>
                    <span class="token function">expand</span><span class="token punctuation">(</span>position <span class="token operator">+</span> <span class="token function">getHeaderLayoutCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token function">setOnItemClickListener</span><span class="token punctuation">(</span>onItemClickListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">BaseViewHolder</span> helper<span class="token punctuation">,</span> <span class="token class-name">MultiItemEntity</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>helper<span class="token punctuation">.</span><span class="token function">getItemViewType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_province<span class="token operator">:</span>
                <span class="token function">showProvince</span><span class="token punctuation">(</span>helper<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Province</span><span class="token punctuation">)</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_city<span class="token operator">:</span>
                <span class="token function">showCity</span><span class="token punctuation">(</span>helper<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">City</span><span class="token punctuation">)</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_town<span class="token operator">:</span>
                <span class="token function">showTown</span><span class="token punctuation">(</span>helper<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Town</span><span class="token punctuation">)</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">showProvince</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">BaseViewHolder</span> helper<span class="token punctuation">,</span> <span class="token class-name">Province</span> province<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        helper<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>tvProvince<span class="token punctuation">,</span> province<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        helper<span class="token punctuation">.</span><span class="token function">getView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>ivExpandIcon<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setRotation</span><span class="token punctuation">(</span>province<span class="token punctuation">.</span><span class="token function">isExpanded</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">90</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">showCity</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">BaseViewHolder</span> helper<span class="token punctuation">,</span> <span class="token class-name">City</span> city<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        helper<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>tvCity<span class="token punctuation">,</span> city<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        helper<span class="token punctuation">.</span><span class="token function">getView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>ivExpandIcon<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setRotation</span><span class="token punctuation">(</span>city<span class="token punctuation">.</span><span class="token function">isExpanded</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">90</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">showTown</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">BaseViewHolder</span> helper<span class="token punctuation">,</span> <span class="token class-name">Town</span> town<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        helper<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>tvTown<span class="token punctuation">,</span> town<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),h={href:"https://github.com/CymChad/BaseRecyclerViewAdapterHelper/blob/master/library/src/main/java/com/chad/library/adapter/base/BaseMultiItemQuickAdapter.java",target:"_blank",rel:"noopener noreferrer"},w=p(`<li><p>在构造函数中使用 <code>addItemType(type, layoutId)</code> 函数指定每种 Item 类型对应的布局资源。</p></li><li><p>在使用点击事件时要注意：回调函数的 <code>position</code> 参数是相对于数据列表的位置，而不是 UI 上的位置。因此，如果为 <code>Adapter</code> 添加了头布局，使用 <code>collpase(pos)</code> <code>expand(pos)</code> 等函数操作子列表时 <code>position</code> 参数必须加上头布局的数量。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">expand</span><span class="token punctuation">(</span>adapterPosition <span class="token operator">+</span> <span class="token function">getHeaderLayoutCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">collapse</span><span class="token punctuation">(</span>adapterPosition <span class="token operator">+</span> <span class="token function">getHeaderLayoutCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),g=p(`<h3 id="使用-adapter" tabindex="-1"><a class="header-anchor" href="#使用-adapter" aria-hidden="true">#</a> 使用 Adapter</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">MultiItemEntity</span><span class="token punctuation">&gt;</span></span> dataList <span class="token operator">=</span> <span class="token function">mockData</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LocationAdapter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MultiItemEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> dataList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mRecyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>mAdapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 模拟数据</span>
<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">MultiItemEntity</span><span class="token punctuation">&gt;</span></span> <span class="token function">mockData</span><span class="token punctuation">(</span><span class="token keyword">int</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Random</span> mRandom <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Province</span><span class="token punctuation">&gt;</span></span> provinceList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pageSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 省份</span>
        <span class="token class-name">Province</span> province <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Province</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Province %s&quot;</span><span class="token punctuation">,</span> pageSize <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        provinceList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>province<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> cityCount <span class="token operator">=</span> mRandom<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> cityCount<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 城市</span>
            <span class="token class-name">City</span> city <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">City</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;City %s-%s&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            province<span class="token punctuation">.</span><span class="token function">addSubItem</span><span class="token punctuation">(</span>city<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> townCount <span class="token operator">=</span> mRandom<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> townCount<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 乡镇</span>
                city<span class="token punctuation">.</span><span class="token function">addSubItem</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Town</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Town %s-%s-%s&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> provinceList<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="复杂用法" tabindex="-1"><a class="header-anchor" href="#复杂用法" aria-hidden="true">#</a> 复杂用法</h2><h3 id="展开所有直接和间接子列表" tabindex="-1"><a class="header-anchor" href="#展开所有直接和间接子列表" aria-hidden="true">#</a> 展开所有直接和间接子列表</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>adapter<span class="token punctuation">.</span><span class="token function">expandAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="默认展开某一个列表" tabindex="-1"><a class="header-anchor" href="#默认展开某一个列表" aria-hidden="true">#</a> 默认展开某一个列表</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>mRecyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>mAdapter<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 展开指定 position 的 Item 的直接子列表。</span>
mAdapter<span class="token punctuation">.</span><span class="token function">expand</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// 展开指定 position 的 Item 的所有直接和间接子列表。</span>
mAdapter<span class="token punctuation">.</span><span class="token function">expandAll</span><span class="token punctuation">(</span>position<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="最多同时展开一个子列表" tabindex="-1"><a class="header-anchor" href="#最多同时展开一个子列表" aria-hidden="true">#</a> 最多同时展开一个子列表</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span> data <span class="token operator">=</span> adapter<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 记录要展开子列表的 Item</span>
<span class="token class-name">IExpandable</span> willExpandItem <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">IExpandable</span><span class="token punctuation">)</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 遍历关闭已经展开的子列表</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">getHeaderLayoutCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">IExpandable</span> expandable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">IExpandable</span><span class="token punctuation">)</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>expandable<span class="token punctuation">.</span><span class="token function">isExpanded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        adapter<span class="token punctuation">.</span><span class="token function">collapse</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 展开被点击的 Item 的子列表</span>
adapter<span class="token punctuation">.</span><span class="token function">expand</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>willExpandItem<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getHeaderLayoutCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于在收起子列表会导致数据源发生变化，所以:</p><ol><li>每次循环都要重新获取 <code>data.size()</code> 。</li><li>收起列表后，原本的 <code>position</code> 不能直接使用，需要重新获取 <code>position</code> 。</li></ol><h3 id="添加数据" tabindex="-1"><a class="header-anchor" href="#添加数据" aria-hidden="true">#</a> 添加数据</h3><h4 id="添加到一级列表" tabindex="-1"><a class="header-anchor" href="#添加到一级列表" aria-hidden="true">#</a> 添加到一级列表</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Province</span> province <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Province</span><span class="token punctuation">(</span><span class="token string">&quot;Province new&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mAdapter<span class="token punctuation">.</span><span class="token function">addData</span><span class="token punctuation">(</span>province<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="添加到子列表" tabindex="-1"><a class="header-anchor" href="#添加到子列表" aria-hidden="true">#</a> 添加到子列表</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 添加新的 Town 到某个 City</span>
<span class="token class-name">Town</span> town <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Town</span><span class="token punctuation">(</span><span class="token string">&quot;Town new&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
city<span class="token punctuation">.</span><span class="token function">addSubItem</span><span class="token punctuation">(</span>town<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 如果该 City 的子列表已经展开，渲染新数据到 UI</span>
<span class="token keyword">int</span> cityIndex <span class="token operator">=</span> mAdapter<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>city<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>cityIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> city<span class="token punctuation">.</span><span class="token function">isExpanded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mAdapter<span class="token punctuation">.</span><span class="token function">addData</span><span class="token punctuation">(</span>cityIndex <span class="token operator">+</span> city<span class="token punctuation">.</span><span class="token function">getSubItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> town<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据" aria-hidden="true">#</a> 删除数据</h3><h4 id="删除一级列表数据" tabindex="-1"><a class="header-anchor" href="#删除一级列表数据" aria-hidden="true">#</a> 删除一级列表数据</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> provinceIndex <span class="token operator">=</span> mAdapter<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>province<span class="token punctuation">)</span><span class="token punctuation">;</span>
mAdapter<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>provinceIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="删除子列表数据" tabindex="-1"><a class="header-anchor" href="#删除子列表数据" aria-hidden="true">#</a> 删除子列表数据</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token class-name">MultiItemEntity</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> mAdapter<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 已经加载到 Adapter 中的直接删除</span>
        mAdapter<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 未加载到 Adapter 中的，通过父级删除</span>
        <span class="token function">removeFromParent</span><span class="token punctuation">(</span>mAdapter<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 从数据列表或子列表中查找指定 Item 的父级并删除 Item</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeFromParent</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MultiItemEntity</span><span class="token punctuation">&gt;</span></span> dataList<span class="token punctuation">,</span> <span class="token class-name">MultiItemEntity</span> removeItem<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dataList <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> dataList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dataList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>removeItem<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dataList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>removeItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MultiItemEntity</span> entity <span class="token operator">:</span> dataList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>entity <span class="token keyword">instanceof</span> <span class="token class-name">IExpandable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">removeFromParent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">IExpandable</span><span class="token punctuation">)</span> entity<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSubItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> removeItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="加载更多" tabindex="-1"><a class="header-anchor" href="#加载更多" aria-hidden="true">#</a> 加载更多</h3><p>上拉加载到更多数据后，自行将新的数据拼到 <code>Adapter</code> 的数据源（<code>mAdapter.getData()</code>）的后面即可。</p><p>如果可以确定每次加载到的都是完整的一级列表，那么直接添加即可。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 模拟加载更多</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MultiItemEntity</span><span class="token punctuation">&gt;</span></span> newList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Province</span><span class="token punctuation">(</span><span class="token string">&quot;province new&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 添加数据到列表</span>
mAdapter<span class="token punctuation">.</span><span class="token function">addData</span><span class="token punctuation">(</span>newList<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果每次加载时数据可能中断，如某个子列表分多次加载完毕，那么用树形列表不太合适，需求/设计可能存在缺陷。如果非要这么做，请自行拼接加载到的新数据和原数据并刷新 UI。</p><h3 id="展开最底部的-item" tabindex="-1"><a class="header-anchor" href="#展开最底部的-item" aria-hidden="true">#</a> 展开最底部的 Item</h3><p>展开最底部的 Item 子列表时，用户可能需要滑动才能看到展开的数据，因此要处理一下：自动向上滚动一段距离以展示新的数据。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 展开</span>
mAdapter<span class="token punctuation">.</span><span class="token function">expand</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 滚动到下一个 Item，如果已经显示，则不会发生滚动</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">smoothScrollToPosition</span><span class="token punctuation">(</span>position <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多布局用法" tabindex="-1"><a class="header-anchor" href="#多布局用法" aria-hidden="true">#</a> 多布局用法</h3><p>树形多布局与普通多布局用法相同，比如添加直辖市类型的 Item（直辖市与省份同级）。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 直辖市（一级列表）
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Municipality</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractExpandableItem</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Town</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">MultiItemEntity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_municipality<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token comment">// 在 Adapter 中添加新的 Type 并处理数据。</span>
<span class="token function">addItemType</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_municipality<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_municipality<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="易错点" tabindex="-1"><a class="header-anchor" href="#易错点" aria-hidden="true">#</a> 易错点</h2><h3 id="关于-position" tabindex="-1"><a class="header-anchor" href="#关于-position" aria-hidden="true">#</a> 关于 position</h3><p><code>expand(position)</code> <code>collapse(position)</code> 等相关函数的 <code>position</code> 参数的值必须加上头布局的数量。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">expand</span><span class="token punctuation">(</span>position <span class="token operator">+</span> <span class="token function">getHeaderLayoutCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">collapse</span><span class="token punctuation">(</span>position <span class="token operator">+</span> <span class="token function">getHeaderLayoutCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关于-item-实体类" tabindex="-1"><a class="header-anchor" href="#关于-item-实体类" aria-hidden="true">#</a> 关于 Item 实体类</h3><p>实现 <code>AbstractExpandableItem#getLevel()</code> 函数，函数返回值必须从 0 开始，子列表的 <code>level</code> 值必须大于父列表的 <code>level</code> 值。</p><h2 id="brvah-demo" tabindex="-1"><a class="header-anchor" href="#brvah-demo" aria-hidden="true">#</a> BRVAH Demo</h2><p><code>BRVAH</code> 项目中的 Demo。</p>`,40),f={href:"https://github.com/CymChad/BaseRecyclerViewAdapterHelper/blob/master/app/src/main/java/com/chad/baserecyclerviewadapterhelper/MultipleItemUseActivity.java",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/CymChad/BaseRecyclerViewAdapterHelper/blob/master/app/src/main/java/com/chad/baserecyclerviewadapterhelper/ExpandableUseActivity.java",target:"_blank",rel:"noopener noreferrer"};function I(_,j){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",k,[s("BaseRecyclerViewAdapterHelper"),t(a)])]),d,n("ul",null,[n("li",null,[s("所有带子列表的 Item 都要实现接口 "),n("a",r,[s("IExpandable<T>"),t(a)]),s(" 。抽象类 "),n("a",m,[s("AbstractExpandableItem<T>"),t(a)]),s(" 已经实现了该接口并做了常用接口封装，推荐直接继承它。")]),v,n("li",null,[s("为了使不同 Item 使用不同布局，需要实现接口 "),n("a",b,[s("MultiItemEntity"),t(a)]),s(" 。")])]),y,n("ul",null,[n("li",null,[n("p",null,[s("继承 "),n("a",h,[s("BaseMultiItemQuickAdapter<T, VH>"),t(a)]),s(" 。")])]),w]),g,n("ul",null,[n("li",null,[n("p",null,[s("普通多布局："),n("a",f,[s("MultipleItemUseActivity"),t(a)])])]),n("li",null,[n("p",null,[s("树形列表： "),n("a",x,[s("ExpandableUseActivity"),t(a)])])])])])}const q=e(l,[["render",I],["__file","BRVAH shuxingliebiaoxiangjieのshiyongpian.html.vue"]]);export{q as default};
