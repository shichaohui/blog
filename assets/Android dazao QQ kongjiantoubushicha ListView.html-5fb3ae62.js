import{_ as p,p as o,q as c,s as n,R as s,t,Y as e,n as i}from"./framework-a25df3d5.js";const l={},u={href:"https://shichaohui.github.io/",target:"_blank",rel:"noopener noreferrer"},k=n("p",null,"QQ 空间相信大家都用过，是否觉得它的下拉刷新很酷呢？今天就来自己实现这个控件。",-1),d={href:"http://blog.csdn.net/u014165119/article/details/47321943",target:"_blank",rel:"noopener noreferrer"},r=e(`<h3 id="效果图" tabindex="-1"><a class="header-anchor" href="#效果图" aria-hidden="true">#</a> 效果图</h3><p><img src="https://img-blog.csdn.net/20150731131924079" alt="效果图"></p><p>对实现过程不感兴趣的童鞋可以直接到文章底部粘帖代码，代码中有详细注释。</p><p>要实现这样的效果，需要重写 <code>ListView</code> 控件，并在 <code>ListView</code> 中处理下拉事件。</p><p>首先我们进行 <code>ListView</code> 最基础的操作，就是设置适配器显示头部布局和一个列表出来，这些操作相信大家都会写，直接贴出代码：</p><h3 id="activity-main-xml" tabindex="-1"><a class="header-anchor" href="#activity-main-xml" aria-hidden="true">#</a> activity_main.xml</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/tools<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.MainActivity<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.example.sch.headzoomlistviewdemo.HeadZoomListView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/list_view<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面这个是 <code>Activity</code> 的内容布局，其中包含一个自定义的 <code>ListView</code> 控件 <code>com.example.sch.headzoomlistviewdemo.HeadZoomListView</code>。</p><h3 id="list-view-header-xml" tabindex="-1"><a class="header-anchor" href="#list-view-header-xml" aria-hidden="true">#</a> list_view_header.xml</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/iv_hander<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>scaleType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>centerCrop<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>162dp<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@mipmap/banner1<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此布局做为 <code>ListView</code> 的头部，里面只包含一个 <code>ImageView</code>，可以看到给 <code>ImageView</code> 设置了 <code>android:scaleType=&quot;centerCrop&quot;</code> 属性，表示按比例扩大此 <code>ImageView</code> 的图片资源的 size 并居中显示，使得图片长(宽)等于或大于 <code>View</code> 的长(宽) ，但是此属性只有在 <code>ImageView</code> 使用 <code>android:src=&quot;&quot;</code> 属性或者 <code>setImageBitmap()</code> 或者 <code>setImageResource()</code> 方法设置图片时才有效，使用 <code>background</code> 设置背景是无效的。</p>`,11),m=n("code",null,"android:scaleType",-1),v={href:"http://blog.csdn.net/larryl2003/article/details/6919513",target:"_blank",rel:"noopener noreferrer"},b=e(`<h3 id="mainactivity-java" tabindex="-1"><a class="header-anchor" href="#mainactivity-java" aria-hidden="true">#</a> MainActivity.java</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>sch<span class="token punctuation">.</span>headzoomlistviewdemo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ArrayAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ListView</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Created by shichaohui on 2015/7/31 0031.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">HeadZoomListView</span> mListView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">View</span> headerView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> datas<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        mListView <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HeadZoomListView</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>list_view<span class="token punctuation">)</span><span class="token punctuation">;</span>
        headerView <span class="token operator">=</span> <span class="token class-name">LayoutInflater</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>list_view_header<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        mListView<span class="token punctuation">.</span><span class="token function">addHeaderView</span><span class="token punctuation">(</span>headerView<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mListView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayAdapter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>
                <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>simple_expandable_list_item_1<span class="token punctuation">,</span> datas<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 初始化数据
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        datas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            datas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;条目  &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着就是我们的重头戏 <strong>自定义ListView</strong> 了，首先回顾我们需要实现的效果：</p><ul><li>在顶部继续下拉时头部拉伸；</li><li>拉伸之后手指上推减小拉伸高度；</li><li>拉伸时即时更改背景图的透明度；</li><li>松手后自动弹回原位置。</li></ul><p>根据要实现的效果，我们可以推出需要的参数如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">ImageView</span> headerImage<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> headerImageHeight <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 默认高度</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> headerImageMaxHeight <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 最大高度</span>
<span class="token keyword">private</span> <span class="token keyword">float</span> scaleRatio <span class="token operator">=</span> <span class="token number">1.5f</span><span class="token punctuation">;</span> <span class="token comment">// 最大拉伸比例</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> headerImageScaleHeight <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 被拉伸的高度</span>
<span class="token keyword">private</span> <span class="token keyword">float</span> headerImageMinAlpha <span class="token operator">=</span> <span class="token number">0.5f</span><span class="token punctuation">;</span> <span class="token comment">// 拉伸到最高时头部的透明度</span>
<span class="token keyword">private</span> <span class="token keyword">long</span> durationMillis <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">// 头部恢复动画的执行时间</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于 <code>ListView</code> 中并不能直接获取 <code>Header</code>，所以我们需要定义一个函数，由调用者传入头部的背景 <code>ImageView</code>，并计算相关属性：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 设置头部图片
 *
 * <span class="token keyword">@param</span> <span class="token parameter">headerImage</span> 头部中的背景ImageView
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHeaderImage</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span> headerImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>headerImage <span class="token operator">=</span> headerImage<span class="token punctuation">;</span>
    headerImageHeight <span class="token operator">=</span> headerImage<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    headerImageMaxHeight <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>headerImageHeight <span class="token operator">*</span> scaleRatio<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 防止第一次拉伸的时候headerImage.getLayoutParams().height = 0</span>
    headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">=</span> headerImageHeight<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了计算的准确性，我们需要在 <code>View</code> 显示出来后才调用 <code>setHeaderImage()</code>，因此需要重写 <code>MainActivity</code> 的 <code>onWindowFocusChanged()</code> 方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onWindowFocusChanged</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> hasFocus<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onWindowFocusChanged</span><span class="token punctuation">(</span>hasFocus<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mListView<span class="token punctuation">.</span><span class="token function">setHeaderImage</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span> headerView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>iv_hander<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了增加扩展性，还增加以下几个方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 设置头部的最大拉伸倍率，默认1.5f
 *
 * <span class="token keyword">@param</span> <span class="token parameter">scaleRatio</span> 头部的最大拉伸倍率，必须大于1，小于1则默认为1.5f
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setScaleRatio</span><span class="token punctuation">(</span><span class="token keyword">float</span> scaleRatio<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>scaleRatio <span class="token operator">=</span> scaleRatio<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 设置拉伸到最高时头部的透明度，默认0.5f
 *
 * <span class="token keyword">@param</span> <span class="token parameter">headerImageMinAlpha</span> 拉伸到最高时头部的透明度，0.0~1.0
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHeaderImageMinAlpha</span><span class="token punctuation">(</span><span class="token keyword">float</span> headerImageMinAlpha<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>headerImageMinAlpha <span class="token operator">=</span> headerImageMinAlpha<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 设置头部恢复动画的执行时间，默认1000毫秒
 *
 * <span class="token keyword">@param</span> <span class="token parameter">durationMillis</span> 头部恢复动画的执行时间，单位：毫秒
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHeaderImageDurationMillis</span><span class="token punctuation">(</span><span class="token keyword">long</span> durationMillis<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>durationMillis <span class="token operator">=</span> durationMillis<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来重写 <code>ListView</code> 的 <code>overScrollBy()</code> 方法处理下拉/上拉过度事件：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">overScrollBy</span><span class="token punctuation">(</span><span class="token keyword">int</span> deltaX<span class="token punctuation">,</span> <span class="token keyword">int</span> deltaY<span class="token punctuation">,</span> <span class="token keyword">int</span> scrollX<span class="token punctuation">,</span> <span class="token keyword">int</span> scrollY<span class="token punctuation">,</span>
                                   <span class="token keyword">int</span> scrollRangeX<span class="token punctuation">,</span> <span class="token keyword">int</span> scrollRangeY<span class="token punctuation">,</span> <span class="token keyword">int</span> maxOverScrollX<span class="token punctuation">,</span>
                                   <span class="token keyword">int</span> maxOverScrollY<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isTouchEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// deltaY为拉伸过度时每毫秒拉伸的距离，正数表示向上拉伸多度，负数表示向下拉伸过度</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>deltaY <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">&lt;</span> headerImageMaxHeight
            <span class="token operator">||</span> deltaY <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">&gt;</span> headerImageHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 修改宽高</span>
        headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">-=</span> deltaY<span class="token punctuation">;</span>
        <span class="token comment">// 重新设置View的宽高</span>
        headerImage<span class="token punctuation">.</span><span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当 <code>ListView</code> 到达边界并继续拉的时候（这里称为&quot;下拉/上拉过度&quot;）就会触发此方法，其中参数 <code>deltaY</code> 表示每毫秒拉动的距离，下拉时此参数是负数，上拉过度时是正数。</p><p>因此，满足条件 <code>deltaY &lt; 0 &amp;&amp; headerImage.getLayoutParams().height &lt; headerImageMaxHeight</code> （下拉且没有到达最大高度）的时候，需要增大 <code>headerImage</code> 的宽度，但是此时 <code>deltaY</code> 是负数，因此使用 <code>-=</code> 修改高度。条件 <code>deltaY &gt; 0 &amp;&amp; headerImage.getLayoutParams().height &gt; headerImageHeight</code> 表示上拉过度且已被拉伸的时候，需要减小 <code>headerImage</code> 的宽度，但是此时 <code>deltaY</code> 是正数，因此也使用 <code>-=</code> 修改高度。</p><p><code>headerImage.requestLayout();</code> 会重新测量 <code>View</code> 的宽高，不调用此方法上面的修改也就不会更新到界面上。</p><p>实现下拉一段高度后上推减小 <code>headerImage</code> 的拉伸高度效果，需要重写 <code>onScrollChanged()</code> 方法，重写 <code>onTouchEvent()</code> 也可以，只是太难控制，且效果不太好：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onScrollChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> t<span class="token punctuation">,</span> <span class="token keyword">int</span> oldl<span class="token punctuation">,</span> <span class="token keyword">int</span> oldt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onScrollChanged</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> oldl<span class="token punctuation">,</span> oldt<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>headerImage <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">View</span> view <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">)</span> headerImage<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 上推的时候减小高度至默认高度</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">&gt;</span> headerImageHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">+=</span> view<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 重新计算尺寸布局</span>
        view<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> view<span class="token punctuation">.</span><span class="token function">getRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> view<span class="token punctuation">.</span><span class="token function">getBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        headerImage<span class="token punctuation">.</span><span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>view.layout(view.getLeft(), 0, view.getRight(), view.getBottom());</code> 遍历视图树，重新测量并设置头部的高度和子布局的位置。</p><p>重新测量的时候，<code>View</code> 使用 <code>requestLayout()</code> 方法，<code>ViewGroup</code> 使用 <code>layout()</code> 方法，<code>layout()</code> 方法中的四个参数前两个表示 <code>ViewGroup</code> 左上角坐标和右下角坐标。</p><p>接着实现松手时的动画：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">switch</span> <span class="token punctuation">(</span>ev<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_UP</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_CANCEL</span><span class="token operator">:</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">&gt;</span> headerImageHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
			    <span class="token comment">// 使用动画恢复默认高度  </span>
			    headerImage<span class="token punctuation">.</span><span class="token function">clearAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
			    headerImage<span class="token punctuation">.</span><span class="token function">startAnimation</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResetAnimaton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
			    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  
			<span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
 * 自定义恢复时的动画
 */</span>
<span class="token keyword">class</span> <span class="token class-name">ResetAnimaton</span> <span class="token keyword">extends</span> <span class="token class-name">Animation</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">ResetAnimaton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setDuration</span><span class="token punctuation">(</span>durationMillis<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 计算开始动画时的拉伸高度</span>
        headerImageScaleHeight <span class="token operator">=</span> headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">-</span> headerImageHeight<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">applyTransformation</span><span class="token punctuation">(</span><span class="token keyword">float</span> interpolatedTime<span class="token punctuation">,</span> <span class="token class-name">Transformation</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// interpolatedTime从动画开始到结束，由0.0~1.0</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">-</span> headerImageHeight <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 计算新高度</span>
            headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">-=</span> headerImageScaleHeight <span class="token operator">*</span> interpolatedTime<span class="token punctuation">;</span>
            <span class="token comment">// 计算新拉伸高度</span>
            headerImageScaleHeight <span class="token operator">-=</span> headerImageScaleHeight <span class="token operator">*</span> interpolatedTime<span class="token punctuation">;</span>
            <span class="token comment">// 重新布局</span>
            headerImage<span class="token punctuation">.</span><span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后加入拉伸时透明度的变化：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onScrollChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> t<span class="token punctuation">,</span> <span class="token keyword">int</span> oldl<span class="token punctuation">,</span> <span class="token keyword">int</span> oldt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onScrollChanged</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> oldl<span class="token punctuation">,</span> oldt<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    
    <span class="token function">updateHeaderAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 更新头部的透明度
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">updateHeaderAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 当前拉伸高度</span>
    <span class="token keyword">int</span> scallHeight <span class="token operator">=</span> headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">-</span> headerImageHeight<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>scallHeight <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 新的透明度(1 - 当前拉伸高度 / 最大拉伸高度 * (1 - 目标透明度))</span>
        headerImage<span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> scallHeight
                <span class="token operator">/</span> <span class="token punctuation">(</span>headerImageMaxHeight <span class="token operator">-</span> headerImageHeight<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> headerImageMinAlpha<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="贴完整代码" tabindex="-1"><a class="header-anchor" href="#贴完整代码" aria-hidden="true">#</a> 贴完整代码</h3><h4 id="mainactivity-java-1" tabindex="-1"><a class="header-anchor" href="#mainactivity-java-1" aria-hidden="true">#</a> MainActivity.java</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>sch<span class="token punctuation">.</span>headzoomlistviewdemo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ArrayAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ListView</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Created by shichaohui on 2015/7/31 0031.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">HeadZoomListView</span> mListView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">View</span> headerView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> datas<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        mListView <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HeadZoomListView</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>list_view<span class="token punctuation">)</span><span class="token punctuation">;</span>
        headerView <span class="token operator">=</span> <span class="token class-name">LayoutInflater</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>list_view_header<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        mListView<span class="token punctuation">.</span><span class="token function">addHeaderView</span><span class="token punctuation">(</span>headerView<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mListView<span class="token punctuation">.</span><span class="token function">setScaleRatio</span><span class="token punctuation">(</span><span class="token number">2.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mListView<span class="token punctuation">.</span><span class="token function">setHeaderImageDurationMillis</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mListView<span class="token punctuation">.</span><span class="token function">setHeaderImageMinAlpha</span><span class="token punctuation">(</span><span class="token number">0.3f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mListView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayAdapter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>
                <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>simple_expandable_list_item_1<span class="token punctuation">,</span> datas<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onWindowFocusChanged</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> hasFocus<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onWindowFocusChanged</span><span class="token punctuation">(</span>hasFocus<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mListView<span class="token punctuation">.</span><span class="token function">setHeaderImage</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span> headerView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>iv_hander<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 初始化数据
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        datas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            datas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;条目  &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="headzoomlistview-java" tabindex="-1"><a class="header-anchor" href="#headzoomlistview-java" aria-hidden="true">#</a> HeadZoomListView.java</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>sch<span class="token punctuation">.</span>headzoomlistviewdemo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">AttributeSet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">MotionEvent</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>animation<span class="token punctuation">.</span></span><span class="token class-name">Animation</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>animation<span class="token punctuation">.</span></span><span class="token class-name">Transformation</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ListView</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 下拉头部缩放ListView
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>
 * Created by shichaohui on 2015/7/31 0031.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HeadZoomListView</span> <span class="token keyword">extends</span> <span class="token class-name">ListView</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">ImageView</span> headerImage<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> headerImageHeight <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 默认高度</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> headerImageMaxHeight <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 最大高度</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> headerImageScaleHeight <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 被拉伸的高度</span>
    <span class="token keyword">private</span> <span class="token keyword">float</span> scaleRatio <span class="token operator">=</span> <span class="token number">1.5f</span><span class="token punctuation">;</span> <span class="token comment">// 最大拉伸比例</span>
    <span class="token keyword">private</span> <span class="token keyword">float</span> headerImageMinAlpha <span class="token operator">=</span> <span class="token number">0.5f</span><span class="token punctuation">;</span> <span class="token comment">// 拉伸到最高时头部的透明度</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> durationMillis <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">// 头部恢复动画的执行时间</span>

    <span class="token keyword">public</span> <span class="token class-name">HeadZoomListView</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">HeadZoomListView</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">AttributeSet</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">HeadZoomListView</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">AttributeSet</span> attrs<span class="token punctuation">,</span> <span class="token keyword">int</span> defStyleAttr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> defStyleAttr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 设置头部图片
     *
     * <span class="token keyword">@param</span> <span class="token parameter">headerImage</span> 头部中的背景ImageView
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHeaderImage</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span> headerImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>headerImage <span class="token operator">=</span> headerImage<span class="token punctuation">;</span>
        headerImageHeight <span class="token operator">=</span> headerImage<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        headerImageMaxHeight <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>headerImageHeight <span class="token operator">*</span> scaleRatio<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 防止第一次拉伸的时候headerImage.getLayoutParams().height = 0</span>
        headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">=</span> headerImageHeight<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 设置头部的最大拉伸倍率，默认1.5f
     *
     * <span class="token keyword">@param</span> <span class="token parameter">scaleRatio</span> 头部的最大拉伸倍率，必须大于1，小于1则默认为1.5f
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setScaleRatio</span><span class="token punctuation">(</span><span class="token keyword">float</span> scaleRatio<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>scaleRatio <span class="token operator">=</span> scaleRatio<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 设置拉伸到最高时头部的透明度，默认0.5f
     *
     * <span class="token keyword">@param</span> <span class="token parameter">headerImageMinAlpha</span> 拉伸到最高时头部的透明度，0.0~1.0
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHeaderImageMinAlpha</span><span class="token punctuation">(</span><span class="token keyword">float</span> headerImageMinAlpha<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>headerImageMinAlpha <span class="token operator">=</span> headerImageMinAlpha<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 设置头部恢复动画的执行时间，默认1000毫秒
     *
     * <span class="token keyword">@param</span> <span class="token parameter">durationMillis</span> 头部恢复动画的执行时间，单位：毫秒
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHeaderImageDurationMillis</span><span class="token punctuation">(</span><span class="token keyword">long</span> durationMillis<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>durationMillis <span class="token operator">=</span> durationMillis<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">overScrollBy</span><span class="token punctuation">(</span><span class="token keyword">int</span> deltaX<span class="token punctuation">,</span> <span class="token keyword">int</span> deltaY<span class="token punctuation">,</span> <span class="token keyword">int</span> scrollX<span class="token punctuation">,</span> <span class="token keyword">int</span> scrollY<span class="token punctuation">,</span>
                                   <span class="token keyword">int</span> scrollRangeX<span class="token punctuation">,</span> <span class="token keyword">int</span> scrollRangeY<span class="token punctuation">,</span> <span class="token keyword">int</span> maxOverScrollX<span class="token punctuation">,</span>
                                   <span class="token keyword">int</span> maxOverScrollY<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isTouchEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// deltaY为拉伸过度时每毫秒拉伸的距离，正数表示向上拉伸多度，负数表示向下拉伸过度</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>deltaY <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">&lt;</span> headerImageMaxHeight
                <span class="token operator">||</span> deltaY <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">&gt;</span> headerImageHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 修改宽高</span>
            headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">-=</span> deltaY<span class="token punctuation">;</span>
            <span class="token comment">// 重新设置View的宽高</span>
            headerImage<span class="token punctuation">.</span><span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onScrollChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> t<span class="token punctuation">,</span> <span class="token keyword">int</span> oldl<span class="token punctuation">,</span> <span class="token keyword">int</span> oldt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onScrollChanged</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> oldl<span class="token punctuation">,</span> oldt<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>headerImage <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">View</span> view <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">)</span> headerImage<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 上推的时候减小高度至默认高度</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">&gt;</span> headerImageHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">+=</span> view<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 重新计算尺寸布局</span>
            view<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> view<span class="token punctuation">.</span><span class="token function">getRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> view<span class="token punctuation">.</span><span class="token function">getBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            headerImage<span class="token punctuation">.</span><span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">updateHeaderAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">switch</span> <span class="token punctuation">(</span>ev<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_UP</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_CANCEL</span><span class="token operator">:</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">&gt;</span> headerImageHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
				    <span class="token comment">// 使用动画恢复默认高度  </span>
				    headerImage<span class="token punctuation">.</span><span class="token function">clearAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
				    headerImage<span class="token punctuation">.</span><span class="token function">startAnimation</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResetAnimaton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
				    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  
				<span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 更新头部的透明度
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">updateHeaderAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 当前拉伸高度</span>
        <span class="token keyword">int</span> scallHeight <span class="token operator">=</span> headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">-</span> headerImageHeight<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>scallHeight <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 新的透明度(1 - 当前拉伸高度 / 最大拉伸高度 * (1 - 目标透明度))</span>
            headerImage<span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> scallHeight
                    <span class="token operator">/</span> <span class="token punctuation">(</span>headerImageMaxHeight <span class="token operator">-</span> headerImageHeight<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> headerImageMinAlpha<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 自定义恢复时的动画
     */</span>
    <span class="token keyword">class</span> <span class="token class-name">ResetAnimaton</span> <span class="token keyword">extends</span> <span class="token class-name">Animation</span> <span class="token punctuation">{</span>

        <span class="token keyword">public</span> <span class="token class-name">ResetAnimaton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">setDuration</span><span class="token punctuation">(</span>durationMillis<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 计算开始动画时的拉伸高度</span>
            headerImageScaleHeight <span class="token operator">=</span> headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">-</span> headerImageHeight<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">applyTransformation</span><span class="token punctuation">(</span><span class="token keyword">float</span> interpolatedTime<span class="token punctuation">,</span> <span class="token class-name">Transformation</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// interpolatedTime从动画开始到结束，由0.0~1.0</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">-</span> headerImageHeight <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 计算新高度</span>
                headerImage<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">-=</span> headerImageScaleHeight <span class="token operator">*</span> interpolatedTime<span class="token punctuation">;</span>
                <span class="token comment">// 计算新拉伸高度</span>
                headerImageScaleHeight <span class="token operator">-=</span> headerImageScaleHeight <span class="token operator">*</span> interpolatedTime<span class="token punctuation">;</span>
                <span class="token comment">// 重新布局</span>
                headerImage<span class="token punctuation">.</span><span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>布局文件在文章开头有贴出，这里就不重复了。</p>`,31);function g(h,w){const a=i("ExternalLinkIcon");return o(),c("div",null,[n("blockquote",null,[n("p",null,[n("small",null,[s("转载请注明出处，"),n("a",u,[s("点击此处"),t(a)]),s(" 查看更多精彩内容")])])]),k,n("p",null,[s("本文主要是讲思想和一些 api，想要使用此效果到项目中的同学请点击这里 "),n("a",d,[s("带动画的下拉刷新RecyclerView"),t(a)])]),r,n("p",null,[m,s(" 的各种值的含义可以参考 "),n("a",v,[s("ImageView.ScaleType设置图解"),t(a)])]),b])}const f=p(l,[["render",g],["__file","Android dazao QQ kongjiantoubushicha ListView.html.vue"]]);export{f as default};
