import{_ as e,p,q as c,s as n,R as a,t,Y as o,n as l}from"./framework-a25df3d5.js";const u={},i={href:"https://shichaohui.github.io/",target:"_blank",rel:"noopener noreferrer"},r={href:"https://docs.cocos.com/creator/manual/zh/advanced-topics/data-storage.html",target:"_blank",rel:"noopener noreferrer"},k=o(`<h2 id="存取方式" tabindex="-1"><a class="header-anchor" href="#存取方式" aria-hidden="true">#</a> 存取方式</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 存储数据</span>
cc<span class="token punctuation">.</span>sys<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 读取数据</span>
<span class="token keyword">var</span> value <span class="token operator">=</span> cc<span class="token punctuation">.</span>sys<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="array-存取的坑" tabindex="-1"><a class="header-anchor" href="#array-存取的坑" aria-hidden="true">#</a> Array 存取的坑</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// 保存</span>
cc<span class="token punctuation">.</span>sys<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 读取</span>
<span class="token keyword">var</span> value <span class="token operator">=</span> cc<span class="token punctuation">.</span>sys<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>问题来了。</p><p>H5 中读出来是一个字符串 <code>1,2,3</code>，但小游戏中读出来却是一个 <code>Array</code> 对象。</p><h3 id="使用-json-解决兼容问题" tabindex="-1"><a class="header-anchor" href="#使用-json-解决兼容问题" aria-hidden="true">#</a> 使用 JSON 解决兼容问题</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// 保存，JSON.stringify(arr) 将 arr 转成字符串 &quot;[1,2,3]&quot;</span>
cc<span class="token punctuation">.</span>sys<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 读取，通过 JSON.parse(value) 将 value 转成 Array 对象。</span>
<span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>cc<span class="token punctuation">.</span>sys<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function d(v,m){const s=l("ExternalLinkIcon");return p(),c("div",null,[n("blockquote",null,[n("p",null,[n("small",null,[a("转载请注明出处，"),n("a",i,[a("点击此处"),t(s)]),a(" 查看更多精彩内容。")])])]),n("p",null,[n("a",r,[a("Cocos Creator 文档 -- 存储和读取用户数据"),t(s)])]),k])}const b=e(u,[["render",d],["__file","Cocos Creator shujucunchuzhi Array.html.vue"]]);export{b as default};
