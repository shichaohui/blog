import{_ as p,r as o,o as c,c as l,b as n,d as e,e as s,a as t}from"./app.5e319a5d.js";const i={},r=n("h1",{id:"rxjava-\u64CD\u4F5C\u7B26",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rxjava-\u64CD\u4F5C\u7B26","aria-hidden":"true"},"#"),s(" RxJava \u64CD\u4F5C\u7B26")],-1),u=s("\u672C\u6587\u57FA\u4E8E "),k=n("code",null,"RxJava1.x",-1),d=s(" \u7248\u672C\uFF0C\u9605\u8BFB\u672C\u6587\u524D\u8BF7\u5148\u4E86\u89E3 "),v={href:"https://github.com/ReactiveX/RxJava",target:"_blank",rel:"noopener noreferrer"},b=s("RxJava"),m=s("\xA0 \u7684\u57FA\u672C\u4F7F\u7528\u3002"),h=n("code",null,"RxJava",-1),_=s(" \u7248\u672C\u5DF2\u5347\u7EA7\u5230 "),g={href:"https://github.com/ReactiveX/RxJava",target:"_blank",rel:"noopener noreferrer"},f=s("RxJava2.x"),x=s("\xA0\uFF0C\u5404\u4E2A "),O={href:"http://reactivex.io/RxJava/2.x/javadoc/",target:"_blank",rel:"noopener noreferrer"},T=s("API"),j=s(" \u5747\u6709\u4E0D\u540C\u7A0B\u5EA6\u7684\u53D8\u5316\uFF0C\u5177\u4F53\u8BF7\u67E5\u770B"),w={href:"https://github.com/ReactiveX/RxJava",target:"_blank",rel:"noopener noreferrer"},R=s("\u5B98\u65B9\u6587\u6863"),y=s("\u3002"),J=n("p",null,"\u53C2\u8003\u6587\u6863\uFF1A",-1),S={href:"http://reactivex.io/RxJava/javadoc",target:"_blank",rel:"noopener noreferrer"},F=s("RxJava JavaDoc"),I={href:"https://www.gitbook.com/book/mcxiaoke/rxdocs/details",target:"_blank",rel:"noopener noreferrer"},U=s("ReactiveX \u6587\u6863\u4E2D\u6587\u7FFB\u8BD1"),L=n("hr",null,null,-1),q={id:"_1-observable-\u7684\u521B\u5EFA",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#_1-observable-\u7684\u521B\u5EFA","aria-hidden":"true"},"#",-1),A=s(" 1 "),X={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},N=s("Observable"),C=s("\xA0\u7684\u521B\u5EFA"),B=n("h3",{id:"_1-1-from",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-from","aria-hidden":"true"},"#"),s(" 1.1\xA0from()")],-1),D={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(java.lang.Iterable)",target:"_blank",rel:"noopener noreferrer"},M=s("public static\xA0<T>\xA0Observable<T>\xA0from(Iterable<? extends T>\xA0iterable);"),W=s("\u8F6C\u6362\u96C6\u5408\u4E3A\u4E00\u4E2A\u6BCF\u6B21\u53D1\u5C04\u96C6\u5408\u4E2D\u4E00\u4E2A\u5143\u7D20\u7684\xA0"),P={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},V=s("Observable"),H=s("\xA0\u5BF9\u8C61\u3002"),z=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u5BF9\u96C6\u5408\uFF08\u6570\u7EC4\u3001List \u7B49\uFF09\u8FDB\u884C\u904D\u5386\u3002",-1),G=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/from.png",alt:"form()"})],-1),K=n("p",null,[n("strong",null,"\u5176\u4ED6 form() API\uFF1A")],-1),Q={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(java.util.concurrent.Future)",target:"_blank",rel:"noopener noreferrer"},Y=s("public static\xA0<T>\xA0Observable<T>\xA0from(Future<? extends T>\xA0future);"),Z={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(java.util.concurrent.Future,%20long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},$=s("public static\xA0<T>\xA0Observable<T>\xA0from(Future<? extends T>\xA0future, long timeout, TimeUnit unit);"),nn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(java.util.concurrent.Future,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},sn=s("public static\xA0<T>\xA0Observable<T>\xA0from(Future<? extends T>\xA0future, Scheduler scheduler);"),an={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(T%5B%5D)",target:"_blank",rel:"noopener noreferrer"},en=s("public static\xA0<T>\xA0Observable<T>\xA0from(T[] array);"),tn=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 1. \u904D\u5386\u96C6\u5408</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 2. \u4F7F\u7528 Future \u521B\u5EFA Observable\uFF0CFuture \u8868\u793A\u4E00\u4E2A\u5F02\u6B65\u8BA1\u7B97\u7684\u7ED3\u679C\u3002</span>
<span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> futureTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO \u6267\u884C\u5F02\u6B65\u64CD\u4F5C\u5E76\u8FD4\u56DE\u6570\u636E</span>
        <span class="token keyword">return</span> <span class="token string">&quot;hihi&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Scheduler<span class="token punctuation">.</span>Worker</span> worker <span class="token operator">=</span> <span class="token class-name">Schedulers</span><span class="token punctuation">.</span><span class="token function">io</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
worker<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        futureTask<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-just" tabindex="-1"><a class="header-anchor" href="#_1-2-just" aria-hidden="true">#</a> 1.2\xA0just()</h3>`,4),pn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T)",target:"_blank",rel:"noopener noreferrer"},on=s("public static\xA0<T>\xA0Observable<T>\xA0just(final T value);"),cn=s("\u8F6C\u6362\u4E00\u4E2A\u6216\u591A\u4E2A Object \u4E3A\u4F9D\u6B21\u53D1\u5C04\u8FD9\u4E9B Object \u7684\xA0"),ln={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},rn=s("Observable"),un=s("\xA0\u5BF9\u8C61\u3002"),kn=s("**\u4F7F\u7528\u573A\u666F\uFF1A**\u8F6C\u6362\u4E00\u4E2A\u6216\u591A\u4E2A\u666E\u901A Object \u4E3A "),dn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},vn=s("Observable"),bn=s(" \u5BF9\u8C61\uFF0C\u5982\u8F6C\u6362\u6570\u636E\u5E93\u67E5\u8BE2\u7ED3\u679C\u3001\u7F51\u7EDC\u67E5\u8BE2\u7ED3\u679C\u7B49\u3002"),mn=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/just.m.png",alt:"just()"})],-1),hn=n("p",null,"** \u5176\u4ED6 just() API\uFF1A**",-1),_n={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T)",target:"_blank",rel:"noopener noreferrer"},gn=s("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2);"),fn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},xn=s("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3);"),On={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},Tn=s("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4);"),jn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},wn=s("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4, T t5);"),Rn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},yn=s("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4, T t5, T t6);"),Jn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},Sn=s("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4, T t5, T t6, T t7);"),Fn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},In=s("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4, T t5, T t6, T t7, T t8);"),Un={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},Ln=s("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4, T t5, T t6, T t7, T t8, T t9);"),qn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},En=s("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4, T t5, T t6, T t7, T t8, T t9, T t10);"),An=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528 just() \u904D\u5386\u51E0\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       
<span class="token comment">// \u4F7F\u7528 from() \u65B9\u6CD5\u904D\u5386\uFF0C\u6548\u679C\u548C just() \u4E00\u6837\u3002</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringArrs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>stringArrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>just()</code> \u65B9\u6CD5\u53EF\u4F20\u5165 1~10 \u4E2A\u53C2\u6570\uFF0C\u4E5F\u5C31\u8BF4\u5F53\u5143\u7D20\u4E2A\u6570\u5C0F\u4E8E\u7B49\u4E8E 10 \u7684\u65F6\u5019\u65E2\u53EF\u4EE5\u4F7F\u7528 \xA0<code>just() </code> \u4E5F\u53EF\u4EE5\u4F7F\u7528 <code>from()</code>\uFF0C\u5426\u5219\u53EA\u80FD\u7528 <code>from()</code> \u65B9\u6CD5\u3002</p><h3 id="_1-3-create" tabindex="-1"><a class="header-anchor" href="#_1-3-create" aria-hidden="true">#</a> 1.3\xA0create()</h3>`,4),Xn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#create(rx.Observable.OnSubscribe)",target:"_blank",rel:"noopener noreferrer"},Nn=s("public static\xA0<T>\xA0Observabl<T>\xA0create(OnSubscribe<T>\xA0f);"),Cn=s("\u8FD4\u56DE\u4E00\u4E2A\u5728\u88AB OnSubscribe \u8BA2\u9605\u65F6\u6267\u884C\u7279\u5B9A\u65B9\u6CD5\u7684\xA0"),Bn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Dn=s("Observable"),Mn=s("\xA0\u5BF9\u8C61\u3002"),Wn=n("p",null,[s("**\u4F7F\u7528\u573A\u666F\uFF1A**\u4E0D\u63A8\u8350\u4F7F\u7528\uFF0C\u53EF\u4F7F\u7528\u5176\u4ED6\u64CD\u4F5C\u7B26\u66FF\u4EE3\uFF0C\u5982\u4F7F\u7528 "),n("code",null,"from()"),s("\u64CD\u4F5C\u7B26\u5B8C\u6210\u904D\u5386\u3002")],-1),Pn=n("p",null,"** \u5176\u4ED6 create() API\uFF1A**",-1),Vn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#create(rx.observables.SyncOnSubscribe)",target:"_blank",rel:"noopener noreferrer"},Hn=s("@Beta\xA0public static\xA0<S, T>\xA0Observable<T> create(SyncOnSubscribe<S, T>\xA0syncOnSubscribe);"),zn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#create(rx.observables.AsyncOnSubscribe)",target:"_blank",rel:"noopener noreferrer"},Gn=s("@Experimental\xA0public static\xA0<S, T>\xA0Observable<T>\xA0create(AsyncOnSubscribe<S, T>\xA0asyncOnSubscribe);"),Kn=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> onSubscribe <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span> <span class="token class-name">String</span> <span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">String</span> <span class="token punctuation">&gt;</span></span> subscriber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// onNext() \u65B9\u6CD5\u53EF\u6267\u884C\u591A\u6B21</span>
        subscribe<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        subscribe<span class="token punctuation">.</span><span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>onSubscribe<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65B9\u6CD5\u4E0D\u5E38\u7528\uFF0C\u5927\u591A\u6570\u65F6\u5019\u90FD\u662F\u4F7F\u7528 <code>just()</code>\u3001<code>form()</code> \u7B49\u65B9\u6CD5\uFF0C\u5982\u4E0A\u9762\u90A3\u4E32\u4EE3\u7801\u5C31\u53EF\u4EE5\u5199\u6210\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-4-interval" tabindex="-1"><a class="header-anchor" href="#_1-4-interval" aria-hidden="true">#</a> 1.4\xA0interval()</h3>`,5),Qn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#interval(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Yn=s("public static Observable<Long>\xA0interval(long interval, TimeUnit unit);"),Zn=s("\u8FD4\u56DE\u4E00\u4E2A\u6BCF\u9694\u6307\u5B9A\u7684\u65F6\u95F4\u95F4\u9694\u5C31\u53D1\u5C04\u4E00\u4E2A\u5E8F\u5217\u53F7\u7684\xA0"),$n={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ns=s("Observable"),ss=s("\xA0\u5BF9\u8C61\u3002"),as=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u4F7F\u7528\u8BE5\u64CD\u4F5C\u7B26\u5B8C\u6210\u5B9A\u65F6\u3001\u5012\u8BA1\u65F6\u7B49\u529F\u80FD\u3002",-1),es=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/interval.png",alt:"interval()"})],-1),ts=n("p",null,"** \u5176\u4ED6 interval() API\uFF1A**",-1),ps={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#interval(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},os=s("public static Observable<Long>\xA0interval(long interval, TimeUnit unit, Scheduler scheduler);"),cs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#interval(long,%20long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},ls=s("public static Observable<Long>\xA0interval(long initialDelay, long period, TimeUnit unit);"),is={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#interval(long,%20long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},rs=s("public static Observable<Long>\xA0interval(long initialDelay, long period, TimeUnit unit, Scheduler scheduler);"),us=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6BCF\u9694 1 s \u53D1\u9001\u4E00\u4E2A\u5E8F\u5217\u53F7\uFF0C\u5E8F\u5217\u53F7\u4ECE 0 \u5F00\u59CB\uFF0C\u6BCF\u6B21\u7D2F\u52A0 1\u3002</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-timer" tabindex="-1"><a class="header-anchor" href="#_1-5-timer" aria-hidden="true">#</a> 1.5\xA0timer()</h3>`,3),ks={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#timer(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},ds=s("public static Observable<Long>\xA0timer(long delay, TimeUnit unit);"),vs=s("\u521B\u5EFA\u4E00\u4E2A\u5728\u6307\u5B9A\u5EF6\u8FDF\u65F6\u95F4\u540E\u53D1\u5C04\u4E00\u6761\u6570\u636E\uFF08\u56FA\u5B9A\u503C\uFF1A0\uFF09\u7684\xA0"),bs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ms=s("Observable"),hs=s("\xA0\u5BF9\u8C61\u3002"),_s=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u7528\u6765\u5B8C\u6210\u5B9A\u65F6\u529F\u80FD\u3002",-1),gs=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/timer.png",alt:"timer()"})],-1),fs=n("p",null,[n("strong",null,"\u5176\u4ED6 timer() API\uFF1A")],-1),xs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#timer(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Os=s("public static Observable<Long>\xA0timer(long delay, TimeUnit unit, Scheduler scheduler);"),Ts=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5B9A\u65F6 3 s</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-6-range" tabindex="-1"><a class="header-anchor" href="#_1-6-range" aria-hidden="true">#</a> 1.6\xA0range()</h3>`,3),js={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#range(int,%20int)",target:"_blank",rel:"noopener noreferrer"},ws=s("public static Observable<Integer>\xA0range(int start, int count);"),Rs=s("\u521B\u5EFA\u4E00\u4E2A\u53D1\u5C04\u6307\u5B9A\u8303\u56F4\u5185\u7684\u8FDE\u7EED\u6574\u6570\u7684\xA0"),ys={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Js=s("Observable"),Ss=s("\xA0\u5BF9\u8C61\u3002"),Fs=n("p",null,[s("**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u4F7F\u7528\u8BE5\u64CD\u4F5C\u7B26\u5B8C\u6210\u4E00\u4E2A "),n("code",null,"fori"),s(" \u7684\u5FAA\u73AF\uFF0C\u5982 "),n("code",null,"for(int i=5;i<=7;i++)"),s(" --> "),n("code",null,"Observable.range(5, 3)"),s("\u3002")],-1),Is=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/range.png",alt:"range()"})],-1),Us=n("p",null,"** \u5176\u4ED6 range() API\uFF1A**",-1),Ls={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#range(int,%20int,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},qs=s("public static Observable<Integer>\xA0range(int start, int count, Scheduler scheduler);"),Es=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4F9D\u6B21\u53D1\u5C04 5\u30016\u30017</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-7-empty" tabindex="-1"><a class="header-anchor" href="#_1-7-empty" aria-hidden="true">#</a> 1.7\xA0empty()</h3>`,3),As={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#empty()",target:"_blank",rel:"noopener noreferrer"},Xs=s("public static\xA0<T>\xA0Observable<T>\xA0empty();"),Ns=s("\u521B\u5EFA\u4E00\u4E2A\u4E0D\u53D1\u5C04\u4EFB\u4F55\u6570\u636E\u5C31\u53D1\u51FA "),Cs=n("code",null,"onCompleted()",-1),Bs=s(" \u901A\u77E5\u7684\xA0"),Ds={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Ms=s("Observable"),Ws=s("\xA0\u5BF9\u8C61\u3002"),Ps=t(`<p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/empty.png" alt="empty()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D1\u51FA\u4E00\u4E2A onCompleted() \u901A\u77E5</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-8-error" tabindex="-1"><a class="header-anchor" href="#_1-8-error" aria-hidden="true">#</a> 1.8\xA0error()</h3>`,4),Vs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#error(java.lang.Throwable)",target:"_blank",rel:"noopener noreferrer"},Hs=s("public static\xA0<T>\xA0Observable<T>\xA0error(Throwable exception);"),zs=s("\u521B\u5EFA\u4E0D\u53D1\u5C04\u4EFB\u4F55\u6570\u636E\u5C31\u53D1\u51FA "),Gs=n("code",null,"onError",-1),Ks=s(" \u901A\u77E5\u7684\xA0"),Qs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Ys=s("Observable"),Zs=s("\xA0\u5BF9\u8C61\u3002"),$s=t(`<p>**\u4F7F\u7528\u573A\u666F\uFF1A**\u7A0B\u5E8F\u4E2D\u6355\u83B7\u5F02\u5E38\u540E\uFF0C\u53EF\u4F7F\u7528\u8BE5\u64CD\u4F5C\u7B26\u628A\u6355\u83B7\u7684\u5F02\u5E38\u4F20\u9012\u5230\u540E\u9762\u7684\u903B\u8F91\u4E2D\u5904\u7406\u3002</p><p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/error.png" alt="error()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D1\u51FA\u4E00\u4E2A onError() \u901A\u77E5</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Throwable</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-9-never" tabindex="-1"><a class="header-anchor" href="#_1-9-never" aria-hidden="true">#</a> 1.9 never()</h3>`,5),na={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#never()",target:"_blank",rel:"noopener noreferrer"},sa=s("public static\xA0<T>\xA0Observable<T>\xA0never();"),aa=s("\u521B\u5EFA\u4E00\u4E2A\u4E0D\u53D1\u5C04\u4EFB\u4F55\u6570\u636E\u548C\u901A\u77E5\u7684\xA0"),ea={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ta=s("Observable"),pa=s("\xA0\u5BF9\u8C61\u3002"),oa=t(`<p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/never.png" alt="never()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">never</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-10-defer" tabindex="-1"><a class="header-anchor" href="#_1-10-defer" aria-hidden="true">#</a> 1.10 defer()</h3>`,4),ca={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#defer(rx.functions.Func0)",target:"_blank",rel:"noopener noreferrer"},la=s("public static\xA0<T>\xA0Observable<T>\xA0defer(Func0<Observable<T>>\xA0observableFactory);"),ia=s("\u5728\u8BA2\u9605\u7684\u65F6\u5019\u624D\u4F1A\u521B\u5EFA Observable \u5BF9\u8C61\uFF1B\u6BCF\u4E00\u6B21\u8BA2\u9605\u90FD\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\xA0"),ra={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ua=s("Observable"),ka=s("\xA0\u5BF9\u8C61\u3002"),da=t(`<p>**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u4EE5\u4F7F\u7528\u8BE5\u64CD\u4F5C\u7B26\u5C01\u88C5\u9700\u8981\u88AB\u591A\u6B21\u6267\u884C\u7684\u51FD\u6570\u3002</p><p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/defer.png" alt="defer()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">defer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func0</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u91CD\u505A" tabindex="-1"><a class="header-anchor" href="#_2-\u91CD\u505A" aria-hidden="true">#</a> 2 \u91CD\u505A</h2><h3 id="_2-1-repeat" tabindex="-1"><a class="header-anchor" href="#_2-1-repeat" aria-hidden="true">#</a> 2.1 repeat()</h3>`,6),va={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeat()",target:"_blank",rel:"noopener noreferrer"},ba=s("public final Observable<T>\xA0repeat();"),ma=n("p",null,[s("\u4F7FObservable \u5BF9\u8C61\u5728\u53D1\u51FA "),n("code",null,"onNext()"),s(" \u901A\u77E5\u4E4B\u540E\u91CD\u590D\u53D1\u5C04\u6570\u636E\u3002\u91CD\u505A\u7ED3\u675F\u624D\u4F1A\u53D1\u51FA "),n("code",null,"onComplete()"),s(" \u901A\u77E5\uFF0C\u82E5\u91CD\u505A\u8FC7\u7A0B\u4E2D\u51FA\u73B0\u5F02\u5E38\u5219\u4F1A\u4E2D\u65AD\u5E76\u53D1\u51FA "),n("code",null,"onError()"),s(" \u901A\u77E5\u3002")],-1),ha=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u4F7F\u7528\u8BE5\u64CD\u4F5C\u7B26\u6307\u5B9A\u4E00\u6B21\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u540E\u7ACB\u5373\u91CD\u590D\u6267\u884C\u4E0A\u4E00\u6B21\u7684\u4EFB\u52A1\uFF0C\u5982\u53D1\u9001\u591A\u6B21\u7F51\u7EDC\u8BF7\u6C42\u7B49\u3002",-1),_a=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/repeat.o.png",alt:"repeat()"})],-1),ga=n("p",null,[n("strong",null,"\u5176\u4ED6 repeat() API\uFF1A")],-1),fa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeat(long)",target:"_blank",rel:"noopener noreferrer"},xa=s("public final Observable<T>\xA0repeat(final long count);\xA0"),Oa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeat(rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Ta=s("public final Observable<T>\xA0repeat(Scheduler scheduler); "),ja={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeat(long,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},wa=s("public final Observable<T>\xA0repeat(final long count, Scheduler scheduler);"),Ra=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u65E0\u9650\u91CD\u590D\u6267\u884C</span>
observable<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u91CD\u590D\u6267\u884C 5 \u6B21</span>
observable<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-repeatwhen" tabindex="-1"><a class="header-anchor" href="#_2-2-repeatwhen" aria-hidden="true">#</a> 2.2 repeatWhen()</h3>`,3),ya={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeatWhen(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},Ja=s("public final Observable<T>\xA0repeatWhen(final Func1<? super Observable<? extends Void>, ? extends Observable<?>>\xA0notificationHandler)"),Sa=n("p",null,[s("\u4F7FObservable \u5BF9\u8C61\u5728\u53D1\u51FA "),n("code",null,"onNext()"),s(" \u901A\u77E5\u4E4B\u540E\u6709\u6761\u4EF6\u7684\u91CD\u590D\u53D1\u5C04\u6570\u636E\u3002\u91CD\u505A\u7ED3\u675F\u624D\u4F1A\u53D1\u51FA "),n("code",null,"onCompleted()"),s(" \u901A\u77E5\uFF0C\u82E5\u91CD\u505A\u8FC7\u7A0B\u4E2D\u51FA\u73B0\u5F02\u5E38\u5219\u4F1A\u4E2D\u65AD\u5E76\u53D1\u51FA "),n("code",null,"onError()"),s(" \u901A\u77E5\u3002")],-1),Fa=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u4F7F\u7528\u8BE5\u64CD\u4F5C\u7B26\u6307\u5B9A\u6EE1\u8DB3\u4E00\u5B9A\u6761\u4EF6\u65F6\u91CD\u590D\u6267\u884C\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u5982\u53D1\u9001\u591A\u6B21\u7F51\u7EDC\u8BF7\u6C42\u7B49\u3002",-1),Ia=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/repeatWhen.f.png",alt:"repeatWhen()"})],-1),Ua=n("p",null,[n("strong",null,"\u5176\u4ED6 repeatWhen() API\uFF1A")],-1),La={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeatWhen(rx.functions.Func1,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},qa=s("public final Observable<T>\xA0repeatWhen(final Func1<? super Observable<? extends Void>, ? extends Observable>?>\xA0notificationHandler, Scheduler scheduler);"),Ea=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>observable<span class="token punctuation">.</span><span class="token function">repeatWhen</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Void</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> observable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u91CD\u590D 3 \u6B21, \u6BCF\u6B21\u95F4\u9694 1 s</span>
        <span class="token keyword">return</span> observable<span class="token punctuation">.</span><span class="token function">zipWith</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Void</span> aVoid<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer<span class="token punctuation">;</span>
             <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>integer <span class="token operator">-&gt;</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u91CD\u8BD5" tabindex="-1"><a class="header-anchor" href="#_3-\u91CD\u8BD5" aria-hidden="true">#</a> 3 \u91CD\u8BD5</h2><h3 id="_3-1-retry" tabindex="-1"><a class="header-anchor" href="#_3-1-retry" aria-hidden="true">#</a> 3.1 retry()</h3>`,4),Aa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retry()",target:"_blank",rel:"noopener noreferrer"},Xa=s("public final Observable<T>\xA0retry();"),Na=s("\u5728\u6267\u884C\xA0"),Ca={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Ba=s("Observable"),Da=s("\u5BF9\u8C61\u7684\u5E8F\u5217\u51FA\u73B0\u5F02\u5E38\u65F6\uFF0C\u4E0D\u76F4\u63A5\u53D1\u51FA "),Ma=n("code",null,"onError()",-1),Wa=s(" \u901A\u77E5\uFF0C\u800C\u662F\u91CD\u65B0\u8BA2\u9605\u8BE5\xA0"),Pa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Va=s("Observable"),Ha=s("\u5BF9\u8C61\uFF0C\u76F4\u5230\u91CD\u505A\u8FC7\u7A0B\u4E2D\u672A\u51FA\u73B0\u5F02\u5E38\uFF0C\u5219\u4F1A\u53D1\u51FA "),za=n("code",null,"onNext()",-1),Ga=s(" \u548C "),Ka=n("code",null,"onCompleted()",-1),Qa=s(" \u901A\u77E5\uFF1B\u82E5\u91CD\u505A\u8FC7\u7A0B\u4E2D\u4E5F\u51FA\u73B0\u5F02\u5E38\uFF0C\u5219\u4F1A\u7EE7\u7EED\u91CD\u8BD5\uFF0C\u76F4\u5230\u8FBE\u5230\u91CD\u8BD5\u6B21\u6570\u4E0A\u9650\uFF0C\u8D85\u51FA\u6B21\u6570\u540E\u53D1\u51FA\u6700\u65B0\u7684 "),Ya=n("code",null,"onError()",-1),Za=s(" \u901A\u77E5\u3002"),$a=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u7F51\u7EDC\u7B49\u8BF7\u6C42\u5F02\u5E38\u51FA\u9519\u540E\uFF0C\u53EF\u91CD\u65B0\u53D1\u8D77\u8BF7\u6C42\u3002",-1),ne=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/retry.png",alt:"retry()"})],-1),se=n("p",null,[n("strong",null,"\u5176\u4ED6 retry() API\uFF1A")],-1),ae={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retry(long)",target:"_blank",rel:"noopener noreferrer"},ee=s("public final Observable<T>\xA0retry(final long count);"),te={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retry(rx.functions.Func2)",target:"_blank",rel:"noopener noreferrer"},pe=s("public final Observable<T>\xA0retry(Func2<Integer, Throwable, Boolean>\xA0predicate);"),oe=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> subscriber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;.......&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
        subscriber<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        subscriber<span class="token punctuation">.</span><span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u65E0\u9650\u6B21\u7684\u91CD\u8BD5</span>
observable<span class="token punctuation">.</span><span class="token function">retry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u91CD\u8BD5 3 \u6B21</span>
observable<span class="token punctuation">.</span><span class="token function">retry</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528\u8C13\u8BED\u51FD\u6570\u51B3\u5B9A\u662F\u5426\u91CD\u8BD5</span>
observable<span class="token punctuation">.</span><span class="token function">retry</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53C2\u6570 integer \u662F\u8BA2\u9605\u7684\u6B21\u6570; \u53C2\u6570 throwable \u662F\u629B\u51FA\u7684\u5F02\u5E38</span>
        <span class="token comment">// \u8FD4\u56DE\u503C\u4E3A true \u8868\u793A\u91CD\u8BD5, \u8FD4\u56DE\u503C\u4E3A false \u8868\u793A\u4E0D\u91CD\u8BD5</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-retrywhen" tabindex="-1"><a class="header-anchor" href="#_3-2-retrywhen" aria-hidden="true">#</a> 3.2 retryWhen()</h3>`,3),ce={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retryWhen(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},le=s("public final Observable<T>\xA0retryWhen(final Func1<? super Observable<? extends Throwable>, ? extends Observable<?>>\xA0notificationHandler);"),ie=n("p",null,"\u6709\u6761\u4EF6\u7684\u6267\u884C\u91CD\u8BD5\u3002",-1),re=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u7F51\u7EDC\u7B49\u8BF7\u6C42\u5F02\u5E38\u51FA\u9519\u540E\uFF0C\u82E5\u6EE1\u8DB3\u4E00\u5B9A\u6761\u4EF6\uFF0C\u5219\u91CD\u65B0\u53D1\u8D77\u8BF7\u6C42\u3002",-1),ue=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/retryWhen.f.png",alt:"retryWhen()"})],-1),ke=n("p",null,[n("strong",null,"\u5176\u4ED6 retryWhen() API\uFF1A")],-1),de={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retryWhen(rx.functions.Func1,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},ve=s("public final Observable<T>\xA0retryWhen(final Func1<? super Observable<? extends Throwable>, ? extends Observable<?>>notificationHandler, Scheduler scheduler);"),be=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u91CD\u8BD5 3 \u6B21\uFF0C\u6BCF\u6B21\u95F4\u9694 1 s</span>
observable<span class="token punctuation">.</span><span class="token function">retryWhen</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span></span> observable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> observable<span class="token punctuation">.</span><span class="token function">zipWith</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u53D8\u6362" tabindex="-1"><a class="header-anchor" href="#_4-\u53D8\u6362" aria-hidden="true">#</a> 4 \u53D8\u6362</h2><h3 id="_4-1-map" tabindex="-1"><a class="header-anchor" href="#_4-1-map" aria-hidden="true">#</a> 4.1 map()</h3>`,4),me={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#map(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},he=s("public final\xA0<R>\xA0Observable<R>\xA0map(Func1<? super T, ? extends R>\xA0func);"),_e=s("\u628A\u6E90\xA0"),ge={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},fe=s("Observable"),xe=s("\xA0\u53D1\u5C04\u7684\u5143\u7D20\u5E94\u7528\u4E8E\u6307\u5B9A\u7684\u51FD\u6570\uFF0C\u5E76\u53D1\u9001\u8BE5\u51FD\u6570\u7684\u7ED3\u679C\u3002"),Oe=s("**\u4F7F\u7528\u573A\u666F\uFF1A**\u5C06\u4ECE\u7F51\u7EDC\u83B7\u53D6\u7684\u6570\u636E\uFF08NetData \u5BF9\u8C61\uFF09\u8F6C\u6362\u4E3A\u6570\u636E\u5E93\u76F8\u5173\u5BF9\u8C61\uFF08DBData\u5BF9\u8C61\uFF09\u5E76\u4F7F\u7528 "),Te={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},je=s("Observable"),we=s(" \u53D1\u9001\u3002"),Re=t(`<p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/map.png" alt="map()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;\u539F\u59CB\u6570\u636E\u7684\u4E24\u500D\u4E3A: %s&quot;</span><span class="token punctuation">,</span> integer <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-flatmap" tabindex="-1"><a class="header-anchor" href="#_4-2-flatmap" aria-hidden="true">#</a> 4.2 flatMap()</h3>`,4),ye={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},Je=s("public final\xA0<R>\xA0Observable<R>\xA0flatMap(Func1<? super T, ? extends Observable<? extends R>>\xA0func);"),Se=s("\u8F6C\u6362\u6E90\xA0"),Fe={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Ie=s("Observable"),Ue=s("\xA0\u5BF9\u8C61\u4E3A\u53E6\u4E00\u4E2A\xA0"),Le={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},qe=s("Observable"),Ee=s("\xA0\u5BF9\u8C61\u3002"),Ae=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u4ECE\u7F51\u7EDC\u83B7\u53D6\u6570\u636E\u5E76\u4F7F\u7528 obsA \u5BF9\u8C61\u53D1\u5C04\uFF0CflatMap() \u64CD\u4F5C\u7B26\u4E2D\u53EF\u5C06\u6570\u636E\u5B58\u8FDB\u6570\u636E\u5E93\u5E76\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61 obsB\u3002",-1),Xe=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/flatMap.png",alt:"flatMap()"})],-1),Ne=n("p",null,[n("strong",null,"\u5176\u4ED6 flatMap() API\uFF1A")],-1),Ce={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20int)",target:"_blank",rel:"noopener noreferrer"},Be=s("@Beta\xA0public final\xA0<R>\xA0Observable<R>\xA0flatMap(Func1<? super T, ? extends Observable<? extends R>>\xA0func, int maxConcurrent);"),De={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20rx.functions.Func1,%20rx.functions.Func0)",target:"_blank",rel:"noopener noreferrer"},Me=s("public final\xA0<R>\xA0Observable<R>\xA0flatMap(Func1<? super T, ? extends Observable<? extends R>>\xA0onNext,\xA0Func1<? super Throwable, ? extends Observable<? extends R>>\xA0onError,\xA0Func0<? extends Observable<? extends R>>\xA0onCompleted);"),We={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20rx.functions.Func1,%20rx.functions.Func0,%20int)",target:"_blank",rel:"noopener noreferrer"},Pe=s("@Beta\xA0public final\xA0<R>\xA0Observable<R>\xA0flatMap(Func1<? super T, ? extends Observable<? extends R>>\xA0onNext,\xA0Func1<? super Throwable, ? extends Observable<? extends R>>\xA0onError,\xA0Func0<? extends Observable<? extends R>>\xA0onCompleted, int maxConcurrent);"),Ve={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20rx.functions.Func2)",target:"_blank",rel:"noopener noreferrer"},He=s("public final <U, R>\xA0Observable<R>\xA0flatMap(final Func1<? super T, ? extends Observable<? extends U>>\xA0collectionSelector,\xA0final Func2<? super T, ? super U, ? extends R>\xA0resultSelector);"),ze={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20rx.functions.Func2,%20int)",target:"_blank",rel:"noopener noreferrer"},Ge=s("@Beta\xA0public final\xA0<U, R>\xA0Observable<R>\xA0flatMap(final Func1<? super T, ? extends Observable<? extends U>>\xA0collectionSelector,\xA0final Func2<? super T, ? super U, ? extends R>\xA0resultSelector, int maxConcurrent);"),Ke=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u8F6C\u6362\u4E3A\u4E00\u4E2A\u5B9A\u65F6 integer \u79D2\u7684 Observable \u5BF9\u8C61</span>
                <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span>integer<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u8FC7\u6EE4" tabindex="-1"><a class="header-anchor" href="#_5-\u8FC7\u6EE4" aria-hidden="true">#</a> 5 \u8FC7\u6EE4</h2><h3 id="_5-1-filter" tabindex="-1"><a class="header-anchor" href="#_5-1-filter" aria-hidden="true">#</a> 5.1 filter()</h3>`,4),Qe={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#filter(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},Ye=s("public final Observable<T>\xA0filter(Func1<? super T, Boolean>\xA0predicate);"),Ze=t(`<p>\u53EA\u53D1\u5C04\u6EE1\u8DB3\u6307\u5B9A\u8C13\u8BCD\u7684\u5143\u7D20\u3002</p><p>**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u4F7F\u7528 filter \u4EE3\u66FF if \u8BED\u53E5\u3002</p><p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/filter.png" alt="filter()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-first" tabindex="-1"><a class="header-anchor" href="#_5-2-first" aria-hidden="true">#</a> 5.2 first()</h3>`,6),$e={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#first()",target:"_blank",rel:"noopener noreferrer"},nt=s("public final Observable<T>\xA0first();"),st=s("\u8FD4\u56DE\u4E00\u4E2A\u4EC5\u4EC5\u53D1\u5C04\u6E90\xA0"),at={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},et=s("Observable"),tt=s("\xA0\u53D1\u5C04\u7684\u7B2C\u4E00\u4E2A\uFF3B\u6EE1\u8DB3\u6307\u5B9A\u8C13\u8BCD\u7684\uFF3D\u5143\u7D20\u7684\xA0"),pt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ot=s("Observable"),ct=s("\uFF0C\u5982\u679C\u6E90\xA0"),lt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},it=s("Observable"),rt=s("\xA0\u4E3A\u7A7A\uFF0C\u5219\u4F1A\u629B\u51FA\u4E00\u4E2A "),ut=n("code",null,"NoSuchElementException",-1),kt=s("\u3002"),dt=n("p",null,[n("strong",null,"\u4F7F\u7528\u573A\u666F\uFF1A"),s(" \u987A\u5E8F\u53D1\u51FA\u591A\u6761\u6570\u636E\uFF0C\u53EA\u63A5\u6536\u7B2C\u4E00\u6761\u3002")],-1),vt=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/first.png",alt:"first()"})],-1),bt=n("p",null,[n("strong",null,"\u5176\u4ED6 first() API\uFF1A")],-1),mt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#first(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},ht=s("public final Observable<T>\xA0first(Func1<? super T, Boolean>\xA0predicate)"),_t=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D1\u5C04\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u53D1\u5C04\u6EE1\u8DB3\u6761\u4EF6\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F1A\u629B\u51FA NoSuchElementException \u5F02\u5E38</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-last" tabindex="-1"><a class="header-anchor" href="#_5-3-last" aria-hidden="true">#</a> 5.3 last()</h3>`,3),gt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#last()",target:"_blank",rel:"noopener noreferrer"},ft=s("public final Observable<T>\xA0last();"),xt=s("\u8FD4\u56DE\u4E00\u4E2A\u4EC5\u4EC5\u53D1\u5C04\u6E90\xA0"),Ot={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Tt=s("Observable"),jt=s("\xA0\u53D1\u5C04\u7684\u5012\u6570\u7B2C\u4E00\u4E2A\uFF3B\u6EE1\u8DB3\u6307\u5B9A\u8C13\u8BCD\u7684\uFF3D\u5143\u7D20\u7684\xA0"),wt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Rt=s("Observable"),yt=s("\uFF0C\u5982\u679C\u6E90\xA0"),Jt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},St=s("Observable"),Ft=s("\xA0\u4E3A\u7A7A\uFF0C\u5219\u4F1A\u629B\u51FA\u4E00\u4E2A "),It=n("code",null,"NoSuchElementException",-1),Ut=s("\u3002"),Lt=n("p",null,[n("strong",null,"\u4F7F\u7528\u573A\u666F\uFF1A"),s(" \u987A\u5E8F\u53D1\u51FA\u591A\u6761\u6570\u636E\uFF0C\u53EA\u63A5\u6536\u6700\u540E\u4E00\u6761\u3002")],-1),qt=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/last.png",alt:"last()"})],-1),Et=n("p",null,[n("strong",null,"\u5176\u4ED6 last() API\uFF1A")],-1),At={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#last(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},Xt=s("public final Observable<T>\xA0last(Func1<? super T, Boolean>\xA0predicate)"),Nt=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D1\u5C04\u5012\u6570\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u53D1\u5C04\u6EE1\u8DB3\u6761\u4EF6\u7684\u5012\u6570\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F1A\u629B\u51FA NoSuchElementException \u5F02\u5E38</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-4-skip" tabindex="-1"><a class="header-anchor" href="#_5-4-skip" aria-hidden="true">#</a> 5.4 skip()</h3>`,3),Ct={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skip(int)",target:"_blank",rel:"noopener noreferrer"},Bt=s("public final Observable<T>\xA0skip(int count);"),Dt=n("p",null,"\u8DF3\u8FC7\u524D\u9762\u6307\u5B9A\u6570\u91CF\u6216\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u5143\u7D20\uFF0C\u53EA\u53D1\u5C04\u540E\u9762\u7684\u5143\u7D20\u3002",-1),Mt=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/skip.png",alt:"skip()"})],-1),Wt=n("p",null,[n("strong",null,"\u5176\u4ED6 skip() API\uFF1A")],-1),Pt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skip(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Vt=s("public final Observable<T>\xA0skip(long time, TimeUnit unit);"),Ht={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skip(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},zt=s("public final Observable<T>\xA0skip(long time, TimeUnit unit, Scheduler scheduler);"),Gt=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// \u8DF3\u8FC7\u524D\u4E24\u6761\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-5-skiplast" tabindex="-1"><a class="header-anchor" href="#_5-5-skiplast" aria-hidden="true">#</a> 5.5 skipLast()</h3>`,3),Kt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skipLast(int)",target:"_blank",rel:"noopener noreferrer"},Qt=s("public final Observable<T>\xA0skipLast(int count);"),Yt=s("\u8DF3\u8FC7\u524D\u9762\u6307\u5B9A\u6570\u91CF\u6216\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u5143\u7D20\uFF0C\u53EA\u53D1\u5C04\u540E\u9762\u7684\u5143\u7D20\u3002\u6307\u5B9A\u65F6\u95F4\u65F6\u4F1A\u5EF6\u8FDF\u6E90\xA0"),Zt={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},$t=s("Observable"),np=s("\xA0\u53D1\u5C04\u7684\u4EFB\u4F55\u6570\u636E\u3002"),sp=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/skipLast.png",alt:"skipLast()"})],-1),ap=n("p",null,[n("strong",null,"\u5176\u4ED6 skipLast() API\uFF1A")],-1),ep={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skipLast(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},tp=s("public final Observable<T>\xA0skipLast(long time, TimeUnit unit);"),pp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skipLast(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},op=s("public final Observable<T>\xA0skipLast(long time, TimeUnit unit, Scheduler scheduler);"),cp=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">skipLast</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// \u8DF3\u8FC7\u540E\u4E24\u6761\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-6-take" tabindex="-1"><a class="header-anchor" href="#_5-6-take" aria-hidden="true">#</a> 5.6 take()</h3>`,3),lp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#take(int)",target:"_blank",rel:"noopener noreferrer"},ip=s("public final Observable<T>\xA0take(final int count);"),rp=n("p",null,"\u53EA\u53D1\u5C04\u524D\u9762\u6307\u5B9A\u6570\u91CF\u6216\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u5143\u7D20\u3002",-1),up=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/take.png",alt:"take()"})],-1),kp=n("p",null,[n("strong",null,"\u5176\u4ED6 take() API\uFF1A")],-1),dp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#take(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},vp=s("public final Observable<T>\xA0take(long time, TimeUnit unit);"),bp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#take(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},mp=s("public final Observable<T>\xA0take(long time, TimeUnit unit, Scheduler scheduler);"),hp=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u53D1\u5C04\u524D\u4E09\u6761\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-7-takelast" tabindex="-1"><a class="header-anchor" href="#_5-7-takelast" aria-hidden="true">#</a> 5.7 takeLast()</h3>`,3),_p={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(int)",target:"_blank",rel:"noopener noreferrer"},gp=s("public final Observable<T>\xA0takeLast(final int count);"),fp=s("\u53EA\u53D1\u5C04\u540E\u9762\u6307\u5B9A\u6570\u91CF\u6216\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u5143\u7D20\u3002\u6307\u5B9A\u65F6\u95F4\u65F6\u4F1A\u5EF6\u8FDF\u6E90\xA0"),xp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Op=s("Observable"),Tp=s("\xA0\u53D1\u5C04\u7684\u4EFB\u4F55\u6570\u636E\u3002"),jp=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/takeLast.n.png",alt:"takeLast()"})],-1),wp=n("p",null,[n("strong",null,"\u5176\u4ED6 takeLast() API\uFF1A")],-1),Rp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(int,%20long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},yp=s("public final Observable<T>\xA0takeLast(int count, long time, TimeUnit unit);"),Jp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(int,%20long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Sp=s("public final Observable<T>\xA0takeLast(int count, long time, TimeUnit unit, Scheduler scheduler);"),Fp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Ip=s("public final Observable<T>\xA0takeLast(long time, TimeUnit unit);"),Up={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Lp=s("public final Observable<T>\xA0takeLast(long time, TimeUnit unit, Scheduler scheduler);"),qp=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">takeLast</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u53D1\u5C04\u540E\u4E09\u6761\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-8-sample" tabindex="-1"><a class="header-anchor" href="#_5-8-sample" aria-hidden="true">#</a> 5.8 sample()</h3>`,3),Ep={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#sample(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Ap=s("public final Observable<T>\xA0sample(long period, TimeUnit unit);"),Xp=s("\u5B9A\u671F\u53D1\u5C04\xA0"),Np={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Cp=s("Observable"),Bp=s("\xA0\u53D1\u5C04\u7684\u6700\u540E\u4E00\u6761\u6570\u636E\u3002"),Dp=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/sample.emitlast.1x.png",alt:"sample()"})],-1),Mp=n("p",null,[n("strong",null,"\u5176\u4ED6 sample() API\uFF1A")],-1),Wp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#sample(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Pp=s("public final Observable<T>\xA0sample(long period, TimeUnit unit, Scheduler scheduler);"),Vp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#sample(rx.Observable)",target:"_blank",rel:"noopener noreferrer"},Hp=s("public final\xA0<U>\xA0Observable<T>\xA0sample(Observable<U>\xA0sampler);"),zp=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">sample</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-9-elementat" tabindex="-1"><a class="header-anchor" href="#_5-9-elementat" aria-hidden="true">#</a> 5.9 elementAt()</h3>`,3),Gp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#elementAt(int)",target:"_blank",rel:"noopener noreferrer"},Kp=s("public final Observable<T>\xA0elementAt(int index);"),Qp=t(`<p>\u53EA\u53D1\u5C04\u6307\u5B9A\u7D22\u5F15\u7684\u5143\u7D20\u3002 <strong>\u4F7F\u7528\u573A\u666F\uFF1A</strong> \u6309\u7D22\u5F15\u53BB\u96C6\u5408\u4E2D\u7684\u5143\u7D20\u7B49\u3002</p><p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/elementAt.png" alt="elementAt()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">elementAt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D1\u5C04\u7D22\u5F15\u4E3A 2 \u7684\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-10-elementatordefault" tabindex="-1"><a class="header-anchor" href="#_5-10-elementatordefault" aria-hidden="true">#</a> 5.10\xA0elementAtOrDefault()</h3>`,5),Yp={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#elementAtOrDefault(int,%20T)",target:"_blank",rel:"noopener noreferrer"},Zp=s("public final Observable<T>\xA0elementAtOrDefault(int index, T defaultValue);"),$p=t(`<p>\u53EA\u53D1\u5C04\u6307\u5B9A\u7D22\u5F15\u7684\u5143\u7D20\uFF0C\u82E5\u8BE5\u7D22\u5F15\u5BF9\u5E94\u7684\u5143\u7D20\u4E0D\u5B58\u5728\uFF0C\u5219\u53D1\u5C04\u9ED8\u8BA4\u503C\u3002</p><p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/elementAtOrDefault.png" alt="elementAtOrDefault()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">elementAtOrDefault</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D1\u5C04\u7D22\u5F15\u4E3A 9\u7684\u6570\u636E\uFF0C\u82E5\u4E0D\u5B58\u5728\uFF0C\u5219\u53D1\u5C04 -5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-11-ignoreelements" tabindex="-1"><a class="header-anchor" href="#_5-11-ignoreelements" aria-hidden="true">#</a> 5.11 ignoreElements()</h3>`,5),no={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#ignoreElements()",target:"_blank",rel:"noopener noreferrer"},so=s("public final Observable<T>\xA0ignoreElements();"),ao=t(`<p>\u4E0D\u53D1\u5C04\u4EFB\u4F55\u6570\u636E\uFF0C\u76F4\u63A5\u53D1\u51FA <code>onCompleted()</code> \u901A\u77E5\u3002</p><p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/ignoreElements.png" alt="ignoreElements()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ignoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-12-distinct" tabindex="-1"><a class="header-anchor" href="#_5-12-distinct" aria-hidden="true">#</a> 5.12 distinct()</h3>`,5),eo={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#distinct()",target:"_blank",rel:"noopener noreferrer"},to=s("public final Observable<T>\xA0distinct();"),po=n("p",null,"\u8FC7\u6EE4\u91CD\u590D\u7684\u5143\u7D20\uFF0C\u8FC7\u6EE4\u89C4\u5219\u662F\uFF1A\u53EA\u5141\u8BB8\u8FD8\u6CA1\u6709\u53D1\u5C04\u8FC7\u7684\u5143\u7D20\u901A\u8FC7\u3002",-1),oo=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/distinct.png",alt:"distinct()"})],-1),co=n("p",null,[n("strong",null,"\u5176\u4ED6 distinct() API\uFF1A")],-1),lo={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#distinct(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},io=s("public final\xA0<U>\xA0Observable<T>\xA0distinct(Func1<? super T, ? extends U>\xA0keySelector)"),ro=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u76F4\u63A5\u8FC7\u6EE4</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u901A\u8FC7\u751F\u6210\u7684 key \u503C\u8FC7\u6EE4</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u968F\u673A\u751F\u6210 key</span>
        <span class="token keyword">return</span> integer <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-13-debounce" tabindex="-1"><a class="header-anchor" href="#_5-13-debounce" aria-hidden="true">#</a> 5.13 debounce()</h3>`,3),uo={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#debounce(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},ko=s("public final Observable<T>\xA0debounce(long timeout, TimeUnit unit)"),vo=s("\u6E90\xA0"),bo={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},mo=s("Observable"),ho=s("\xA0\u6BCF\u4EA7\u751F\u7ED3\u679C\u540E\uFF0C\u5982\u679C\u5728\u89C4\u5B9A\u7684\u95F4\u9694\u65F6\u95F4\u5185\u6CA1\u6709\u4EA7\u751F\u65B0\u7684\u7ED3\u679C\uFF0C\u5219\u53D1\u5C04\u8FD9\u4E2A\u7ED3\u679C\uFF0C\u5426\u5219\u4F1A\u5FFD\u7565\u8FD9\u4E2A\u7ED3\u679C\u3002\u8BE5\u64CD\u4F5C\u7B26\u4F1A\u8FC7\u6EE4\u6389\u53D1\u5C04\u901F\u7387\u8FC7\u5FEB\u7684\u6570\u636E\u9879\u3002"),_o=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/debounce.png",alt:"debounce()"})],-1),go=n("p",null,[n("strong",null,"\u5176\u4ED6 debounce() API\uFF1A")],-1),fo={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#debounce(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},xo=s("public final Observable<T>\xA0debounce(long timeout, TimeUnit unit, Scheduler scheduler)"),Oo={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#debounce(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},To=s("public final\xA0<U>\xA0Observable<T>\xA0debounce(Func1<? super T, ? extends Observable<U>>\xA0debounceSelector)"),jo=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> subscriber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u4EA7\u751F\u7ED3\u679C\u7684\u95F4\u9694\u65F6\u95F4\u5206\u522B\u4E3A100\u3001200\u3001300...900\u6BEB\u79D2</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                subscriber<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            subscriber<span class="token punctuation">.</span><span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            subscriber<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
observable<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span>  <span class="token comment">// \u8D85\u65F6\u65F6\u95F4\u4E3A400\u6BEB\u79D2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u4F8B\u5B50\u4EA7\u751F\u7ED3\u679C\u4E3A\uFF1A\u4F9D\u6B21\u6253\u53705\u30016\u30017\u30018\u3002</p><h2 id="\u9644-\u529F\u80FD\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u9644-\u529F\u80FD\u5B9E\u73B0" aria-hidden="true">#</a> \u9644\uFF1A\u529F\u80FD\u5B9E\u73B0</h2><h3 id="\u5EF6\u65F6\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5EF6\u65F6\u904D\u5386" aria-hidden="true">#</a> \u5EF6\u65F6\u904D\u5386</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u904D\u5386</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> traverseObservable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8BA1\u65F6</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> intervalObservable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
<span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> func2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> integer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

intervalObservable<span class="token punctuation">.</span><span class="token function">zipWith</span><span class="token punctuation">(</span>traverseObservable<span class="token punctuation">,</span> func2<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toBlocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;onCompleted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

           <span class="token annotation punctuation">@Override</span>
           <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5012\u8BA1\u65F6" tabindex="-1"><a class="header-anchor" href="#\u5012\u8BA1\u65F6" aria-hidden="true">#</a> \u5012\u8BA1\u65F6</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> startTime <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span>startTime <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// \u63A5\u6536 startTime + 1 \u6B21</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Long</span> time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 1 2 3...\u8F6C\u6362\u4E3A...3 2 1</span>
                <span class="token keyword">return</span> startTime <span class="token operator">-</span> time<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toBlocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5012\u8BA1\u65F6\u7ED3\u675F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5012\u8BA1\u65F6\u51FA\u73B0\u5F02\u5E38&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;\u5012\u8BA1\u65F6: %s s&quot;</span><span class="token punctuation">,</span> aLong<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function wo(Ro,yo){const a=o("ExternalLinkIcon");return c(),l("div",null,[r,n("blockquote",null,[n("p",null,[u,k,d,n("a",v,[b,e(a)]),m])]),n("p",null,[h,_,n("a",g,[f,e(a)]),x,n("a",O,[T,e(a)]),j,n("a",w,[R,e(a)]),y]),J,n("ul",null,[n("li",null,[n("a",S,[F,e(a)])]),n("li",null,[n("a",I,[U,e(a)])])]),L,n("h2",q,[E,A,n("a",X,[N,e(a)]),C]),B,n("p",null,[n("a",D,[M,e(a)])]),n("p",null,[W,n("a",P,[V,e(a)]),H]),z,G,K,n("ul",null,[n("li",null,[n("p",null,[n("a",Q,[Y,e(a)])])]),n("li",null,[n("p",null,[n("a",Z,[$,e(a)])])]),n("li",null,[n("p",null,[n("a",nn,[sn,e(a)])])]),n("li",null,[n("p",null,[n("a",an,[en,e(a)])])])]),tn,n("p",null,[n("a",pn,[on,e(a)])]),n("p",null,[cn,n("a",ln,[rn,e(a)]),un]),n("p",null,[kn,n("a",dn,[vn,e(a)]),bn]),mn,hn,n("ul",null,[n("li",null,[n("p",null,[n("a",_n,[gn,e(a)])])]),n("li",null,[n("p",null,[n("a",fn,[xn,e(a)])])]),n("li",null,[n("p",null,[n("a",On,[Tn,e(a)])])]),n("li",null,[n("p",null,[n("a",jn,[wn,e(a)])])]),n("li",null,[n("p",null,[n("a",Rn,[yn,e(a)])])]),n("li",null,[n("p",null,[n("a",Jn,[Sn,e(a)])])]),n("li",null,[n("p",null,[n("a",Fn,[In,e(a)])])]),n("li",null,[n("p",null,[n("a",Un,[Ln,e(a)])])]),n("li",null,[n("p",null,[n("a",qn,[En,e(a)])])])]),An,n("p",null,[n("a",Xn,[Nn,e(a)])]),n("p",null,[Cn,n("a",Bn,[Dn,e(a)]),Mn]),Wn,Pn,n("ul",null,[n("li",null,[n("p",null,[n("a",Vn,[Hn,e(a)])])]),n("li",null,[n("p",null,[n("a",zn,[Gn,e(a)])])])]),Kn,n("p",null,[n("a",Qn,[Yn,e(a)])]),n("p",null,[Zn,n("a",$n,[ns,e(a)]),ss]),as,es,ts,n("ul",null,[n("li",null,[n("p",null,[n("a",ps,[os,e(a)])])]),n("li",null,[n("p",null,[n("a",cs,[ls,e(a)])])]),n("li",null,[n("p",null,[n("a",is,[rs,e(a)])])])]),us,n("p",null,[n("a",ks,[ds,e(a)])]),n("p",null,[vs,n("a",bs,[ms,e(a)]),hs]),_s,gs,fs,n("ul",null,[n("li",null,[n("a",xs,[Os,e(a)])])]),Ts,n("p",null,[n("a",js,[ws,e(a)])]),n("p",null,[Rs,n("a",ys,[Js,e(a)]),Ss]),Fs,Is,Us,n("ul",null,[n("li",null,[n("a",Ls,[qs,e(a)])])]),Es,n("p",null,[n("a",As,[Xs,e(a)])]),n("p",null,[Ns,Cs,Bs,n("a",Ds,[Ms,e(a)]),Ws]),Ps,n("p",null,[n("a",Vs,[Hs,e(a)])]),n("p",null,[zs,Gs,Ks,n("a",Qs,[Ys,e(a)]),Zs]),$s,n("p",null,[n("a",na,[sa,e(a)])]),n("p",null,[aa,n("a",ea,[ta,e(a)]),pa]),oa,n("p",null,[n("a",ca,[la,e(a)])]),n("p",null,[ia,n("a",ra,[ua,e(a)]),ka]),da,n("p",null,[n("a",va,[ba,e(a)])]),ma,ha,_a,ga,n("ul",null,[n("li",null,[n("p",null,[n("a",fa,[xa,e(a)])])]),n("li",null,[n("p",null,[n("a",Oa,[Ta,e(a)])])]),n("li",null,[n("p",null,[n("a",ja,[wa,e(a)])])])]),Ra,n("p",null,[n("a",ya,[Ja,e(a)])]),Sa,Fa,Ia,Ua,n("ul",null,[n("li",null,[n("a",La,[qa,e(a)])])]),Ea,n("p",null,[n("a",Aa,[Xa,e(a)])]),n("p",null,[Na,n("a",Ca,[Ba,e(a)]),Da,Ma,Wa,n("a",Pa,[Va,e(a)]),Ha,za,Ga,Ka,Qa,Ya,Za]),$a,ne,se,n("ul",null,[n("li",null,[n("p",null,[n("a",ae,[ee,e(a)])])]),n("li",null,[n("p",null,[n("a",te,[pe,e(a)])])])]),oe,n("p",null,[n("a",ce,[le,e(a)])]),ie,re,ue,ke,n("ul",null,[n("li",null,[n("a",de,[ve,e(a)])])]),be,n("p",null,[n("a",me,[he,e(a)])]),n("p",null,[_e,n("a",ge,[fe,e(a)]),xe]),n("p",null,[Oe,n("a",Te,[je,e(a)]),we]),Re,n("p",null,[n("a",ye,[Je,e(a)])]),n("p",null,[Se,n("a",Fe,[Ie,e(a)]),Ue,n("a",Le,[qe,e(a)]),Ee]),Ae,Xe,Ne,n("ul",null,[n("li",null,[n("p",null,[n("a",Ce,[Be,e(a)])])]),n("li",null,[n("p",null,[n("a",De,[Me,e(a)])])]),n("li",null,[n("p",null,[n("a",We,[Pe,e(a)])])]),n("li",null,[n("p",null,[n("a",Ve,[He,e(a)])])]),n("li",null,[n("p",null,[n("a",ze,[Ge,e(a)])])])]),Ke,n("p",null,[n("a",Qe,[Ye,e(a)])]),Ze,n("p",null,[n("a",$e,[nt,e(a)])]),n("p",null,[st,n("a",at,[et,e(a)]),tt,n("a",pt,[ot,e(a)]),ct,n("a",lt,[it,e(a)]),rt,ut,kt]),dt,vt,bt,n("ul",null,[n("li",null,[n("a",mt,[ht,e(a)])])]),_t,n("p",null,[n("a",gt,[ft,e(a)])]),n("p",null,[xt,n("a",Ot,[Tt,e(a)]),jt,n("a",wt,[Rt,e(a)]),yt,n("a",Jt,[St,e(a)]),Ft,It,Ut]),Lt,qt,Et,n("ul",null,[n("li",null,[n("a",At,[Xt,e(a)])])]),Nt,n("p",null,[n("a",Ct,[Bt,e(a)])]),Dt,Mt,Wt,n("ul",null,[n("li",null,[n("p",null,[n("a",Pt,[Vt,e(a)])])]),n("li",null,[n("p",null,[n("a",Ht,[zt,e(a)])])])]),Gt,n("p",null,[n("a",Kt,[Qt,e(a)])]),n("p",null,[Yt,n("a",Zt,[$t,e(a)]),np]),sp,ap,n("ul",null,[n("li",null,[n("p",null,[n("a",ep,[tp,e(a)])])]),n("li",null,[n("p",null,[n("a",pp,[op,e(a)])])])]),cp,n("p",null,[n("a",lp,[ip,e(a)])]),rp,up,kp,n("ul",null,[n("li",null,[n("p",null,[n("a",dp,[vp,e(a)])])]),n("li",null,[n("p",null,[n("a",bp,[mp,e(a)])])])]),hp,n("p",null,[n("a",_p,[gp,e(a)])]),n("p",null,[fp,n("a",xp,[Op,e(a)]),Tp]),jp,wp,n("ul",null,[n("li",null,[n("p",null,[n("a",Rp,[yp,e(a)])])]),n("li",null,[n("p",null,[n("a",Jp,[Sp,e(a)])])]),n("li",null,[n("p",null,[n("a",Fp,[Ip,e(a)])])]),n("li",null,[n("p",null,[n("a",Up,[Lp,e(a)])])])]),qp,n("p",null,[n("a",Ep,[Ap,e(a)])]),n("p",null,[Xp,n("a",Np,[Cp,e(a)]),Bp]),Dp,Mp,n("ul",null,[n("li",null,[n("p",null,[n("a",Wp,[Pp,e(a)])])]),n("li",null,[n("p",null,[n("a",Vp,[Hp,e(a)])])])]),zp,n("p",null,[n("a",Gp,[Kp,e(a)])]),Qp,n("p",null,[n("a",Yp,[Zp,e(a)])]),$p,n("p",null,[n("a",no,[so,e(a)])]),ao,n("p",null,[n("a",eo,[to,e(a)])]),po,oo,co,n("ul",null,[n("li",null,[n("a",lo,[io,e(a)])])]),ro,n("p",null,[n("a",uo,[ko,e(a)])]),n("p",null,[vo,n("a",bo,[mo,e(a)]),ho]),_o,go,n("ul",null,[n("li",null,[n("p",null,[n("a",fo,[xo,e(a)])])]),n("li",null,[n("p",null,[n("a",Oo,[To,e(a)])])])]),jo])}var So=p(i,[["render",wo],["__file","RxJava 1.x\uFF1A\u4F60\u4E00\u5B9A\u4F1A\u7528\u5230\u7684\u5E38\u7528\u64CD\u4F5C\u7B26.html.vue"]]);export{So as default};
