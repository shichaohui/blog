import{_ as p,p as o,q as l,s,R as n,t,Y as e,n as c}from"./framework-a25df3d5.js";const u={},i={href:"https://shichaohui.github.io/",target:"_blank",rel:"noopener noreferrer"},r={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://element-plus.org/zh-CN/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},g=e('<p>算啦，动手做一个吧。</p><h2 id="实现效果" tabindex="-1"><a class="header-anchor" href="#实现效果" aria-hidden="true">#</a> 实现效果</h2><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/91fff690f42d40ad8bca2326b2c8ad1d~tplv-k3u1fbpfcp-watermark.image?" alt="效果图"></p><h2 id="实现思路" tabindex="-1"><a class="header-anchor" href="#实现思路" aria-hidden="true">#</a> 实现思路</h2>',4),h=s("code",null,"ElSelectLoading.vue",-1),f={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver",target:"_blank",rel:"noopener noreferrer"},y={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},q=e(`<p>这个思路也适用于其他的列表监听滚动触底加载更多数据。</p><h2 id="实现代码" tabindex="-1"><a class="header-anchor" href="#实现代码" aria-hidden="true">#</a> 实现代码</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 监听 el-select 的滚动，并提供触底加载数据的回调 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-option</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el-select-loading<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasMore<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-icon</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el-select-loading__icon<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Loading</span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-icon</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el-select-loading__tips<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ loadingText || &quot;正在加载&quot; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>{{ noMoreText || &quot;到底了~&quot; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> onUnmounted<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ElOption <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;element-plus&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>
  <span class="token comment">// 当前页码</span>
  <span class="token literal-property property">page</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
  <span class="token comment">// 是否加载中，用来过滤重复的加载</span>
  <span class="token literal-property property">loading</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
  <span class="token comment">// 加载中的提示文案</span>
  loadingText<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token comment">// 是否有更多数据可加载</span>
  <span class="token literal-property property">hasMore</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
  <span class="token comment">// 没有更多数据的提示文案</span>
  noMoreText<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> defineProps<span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Emits</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token string">&quot;loadMore&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> emit <span class="token operator">=</span> defineEmits<span class="token operator">&lt;</span>Emits<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> el <span class="token operator">=</span> ref<span class="token operator">&lt;</span><span class="token keyword">typeof</span> ElOption<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> observer <span class="token operator">=</span> ref<span class="token operator">&lt;</span>IntersectionObserver<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 组件加载成功，监听滚动</span>
<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>el<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token literal-property property">callback</span><span class="token operator">:</span> <span class="token function-variable function">IntersectionObserverCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">entries</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>loading <span class="token operator">||</span> <span class="token operator">!</span>props<span class="token punctuation">.</span>hasMore <span class="token operator">||</span> <span class="token operator">!</span>entries<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isIntersecting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;loadMore&quot;</span><span class="token punctuation">,</span> props<span class="token punctuation">.</span>page <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> IntersectionObserverInit <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">root</span><span class="token operator">:</span> el<span class="token punctuation">.</span>value<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>parentElement<span class="token operator">?.</span>parentElement<span class="token punctuation">,</span>
    <span class="token literal-property property">rootMargin</span><span class="token operator">:</span> <span class="token string">&quot;0px 0px 0px 0px&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  observer<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntersectionObserver</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  observer<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>value<span class="token punctuation">.</span>$el<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 组件卸载成功，取消滚动监听</span>
<span class="token function">onUnmounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>el<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  observer<span class="token punctuation">.</span>value<span class="token operator">?.</span><span class="token function">unobserve</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>value<span class="token punctuation">.</span>$el<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">.el-select-loading</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">cursor</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span>
  <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--el-color-info<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>

  <span class="token selector">&amp;__icon</span> <span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
    <span class="token property">animation</span><span class="token punctuation">:</span> rotate 1.5s linear infinite<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">&amp;__tips</span> <span class="token punctuation">{</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token atrule"><span class="token rule">@keyframes</span> rotate</span> <span class="token punctuation">{</span>
    <span class="token selector">from</span> <span class="token punctuation">{</span>
      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">to</span> <span class="token punctuation">{</span>
      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),w=s("strong",null,[n("为什么根组件使用 "),s("code",null,"el-option"),n(" 而不是 "),s("code",null,"div"),n(" 或其他标签？")],-1),x=s("br",null,null,-1),z={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},M=s("code",null,"el-option",-1),N=s("code",null,"div",-1),C=e(`<p><strong>Props：</strong></p><table><thead><tr><th>参数名称</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>page</td><td>当前页码</td><td>number</td><td>-</td></tr><tr><td>loading</td><td>是否加载中，用来过滤重复的加载</td><td>boolean</td><td>-</td></tr><tr><td>loadingText</td><td>加载中的提示文案</td><td>string</td><td>正在加载</td></tr><tr><td>hasMore</td><td>是否有更多数据可加载</td><td>boolean</td><td>-</td></tr><tr><td>noMoreText</td><td>没有更多数据的提示文案</td><td>string</td><td>到底了~</td></tr></tbody></table><p><strong>Emits：</strong></p><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>loadMore</td><td>触底可加载数据时触发</td><td>(newPage: number)</td></tr></tbody></table><h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例" aria-hidden="true">#</a> 使用示例</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-select</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请选择<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectValue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-option</span>
      <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in selectOptions<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.id<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.name<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.id<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElSelectLoading</span>
      <span class="token attr-name">:page</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loading<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:hasMore</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasMore<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">@loadMore</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleLoadMore<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-select</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ElSelectLoading <span class="token keyword">from</span> <span class="token string">&quot;@/components/ElSelectLoading.vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> loading <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> hasMore <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> selectValue <span class="token operator">=</span> ref<span class="token operator">&lt;</span>number<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> selectOptions <span class="token operator">=</span> ref<span class="token operator">&lt;</span>any<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 加载数据列表
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">loadDataList</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">newPage</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">pageRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> list <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>list <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newPage <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      selectOptions<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    selectOptions<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hasMore<span class="token punctuation">.</span>value <span class="token operator">=</span> selectOptions<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total<span class="token punctuation">;</span>
    page<span class="token punctuation">.</span>value <span class="token operator">=</span> newPage<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 加载更多数据
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">handleLoadMore</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">newPage</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">loadDataList</span><span class="token punctuation">(</span>newPage<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>观察代码可以发现，在菜单底部插入了 <code>ElSelectLoading</code> 组件，并在加载数据时更新对应的状态。</p><blockquote><p><strong>注意：</strong> 每次 <code>loadMore</code> 事件回调的新页码参数都是由组件 <code>props.page + 1</code> 得到的，因此，</p><ol><li><code>page</code> 参数的值应该由 0 开始。</li><li><code>page.value</code> 的更新应该放在数据加载成功后，以防加载失败后重新加载时页码错误。</li></ol></blockquote>`,8),E={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},L=s("code",null,"ElSelectLoading",-1),O=s("h2",{id:"分页时数据回显问题的解决方案",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#分页时数据回显问题的解决方案","aria-hidden":"true"},"#"),n(" 分页时数据回显问题的解决方案")],-1),j={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},I=s("code",null,"value",-1),P=s("blockquote",null,[s("p",null,[n("以下方案都建立在回显时已拿到选中项的 "),s("code",null,"value"),n(" 和 "),s("code",null,"label"),n(" 值的前提下。")])],-1),S=s("h3",{id:"方案一-模拟回显",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#方案一-模拟回显","aria-hidden":"true"},"#"),n(" 方案一：模拟回显")],-1),T=s("code",null,"absolute",-1),V={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},B=s("code",null,"label",-1),$={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},D=e('<h3 id="方案二-手动处理数据" tabindex="-1"><a class="header-anchor" href="#方案二-手动处理数据" aria-hidden="true">#</a> 方案二：手动处理数据</h3><p>根据要回显的 <code>value</code> 和 <code>label</code> 组建一个列表并插入到第一页，后续分页加载时从列表中删除重复数据。</p><p>该方案的缺点也很明显：</p><ol><li>回显时会把原本分散的选中数据集中到最前面，有点违反直觉，如果原列表有排序的话，还会导致顺序混乱。</li><li>从后续分页中删除已回显的重复数据后，本页加载到的有效数据量会小于 <code>pagesSize</code>，甚至出现为 0 的情况。</li></ol><h3 id="回显方案总结" tabindex="-1"><a class="header-anchor" href="#回显方案总结" aria-hidden="true">#</a> 回显方案总结</h3>',5),R={href:"https://element-plus.org/zh-CN/component/select.html",target:"_blank",rel:"noopener noreferrer"},U=s("code",null,"dialog + table",-1),A=s("p",null,"如果大家有好的回显方案，也可以到评论区分享一下。",-1);function W(Y,F){const a=c("ExternalLinkIcon");return o(),l("div",null,[s("blockquote",null,[s("p",null,[s("small",null,[n("转载请注明出处，"),s("a",i,[n("点击此处"),t(a)]),n(" 查看更多精彩内容")])])]),s("blockquote",null,[s("p",null,[s("a",r,[n("el-select"),t(a)]),n(" 是 "),s("a",k,[n("element-ui"),t(a)]),n(" 组件库提供的下拉选择菜单组件。")])]),s("p",null,[n("在项目中，我们展示到 "),s("a",d,[n("el-select"),t(a)]),n(" 的数据通常是从服务端获取的，如果服务端的查询较慢或者数据量过大，就会导致在前端的显示很慢，特别是在网络不好的时候更是如此。")]),s("p",null,[n("所以，分页展示就是一种较好的交互体验了，可惜的是 "),s("a",v,[n("el-select"),t(a)]),n(" 组件并没有提供分页的功能。")]),s("p",null,[n("本着不重复造轮子（懒）的原则，在网上逛了一圈，发现现有实现方案基本都是基于 "),s("a",m,[n("el-select"),t(a)]),n(" 封装了新的组件，这可能导致 "),s("a",b,[n("el-select"),t(a)]),n(" 组件的部分功能不可用，并且不是很灵活。")]),g,s("ul",null,[s("li",null,[n("自定义一个组件 "),h,n("，由用户自行插入到 "),s("a",f,[n("el-select"),t(a)]),n(" 组件菜单的底部。")]),s("li",null,[n("使用 "),s("a",_,[n("IntersectionObserver"),t(a)]),n(" 监听当前组件是否出现在可见范围，可见时触发加载数据的事件。")]),s("li",null,[n("用户监听事件加载新数据，对 "),s("a",y,[n("el-select"),t(a)]),n(" 的功能没有影响。")])]),q,s("p",null,[w,x,n(" 这是因为 "),s("a",z,[n("el-select"),t(a)]),n(" 在内部没有任何 "),M,n(" 的时候不会渲染菜单浮层，如果使用 "),N,n("，组件可能会没有机会渲染。")]),C,s("p",null,[n("如果项目中有多个功能需要分页加载，也可以自行基于 "),s("a",E,[n("el-select"),t(a)]),n(" 和 "),L,n(" 做封装。")]),O,s("p",null,[n("默认情况下要回显的数据在菜单里不存在时 "),s("a",j,[n("el-select"),t(a)]),n(" 会把 "),I,n(" 展示出来，在分页加载中这种情况是很常见的，对用户很不友好，需要处理一下。")]),P,S,s("p",null,[n("如果是单选的话，我们可以用 "),T,n(" 定位元素覆盖到 "),s("a",V,[n("el-select"),t(a)]),n(" 组件上模拟回显 "),B,n(" 值，可以完美回显。")]),s("p",null,[n("多选的话模拟起来很麻烦，要考虑高度、删除等问题，建议不要用 "),s("a",$,[n("el-select"),t(a)]),n(" 组件了，或者看一下方案二吧。")]),D,s("p",null,[n("综上所述，在列表筛选项等不需要回显的场景或者【单选+回显】场景下使用分页加载是比较合适的，【多选+回显】的情况不建议使用 "),s("a",R,[n("el-select"),t(a)]),n(" 分页加载，可以考虑用 "),U,n(" 去做（需要和产品经理 battle 一下），或者去找一找有没有完善的带回显功能的分页下拉菜单组件。")]),A])}const H=p(u,[["render",W],["__file","wei el-select zujiantianjiagundongjiazaigengduodegongnen.html.vue"]]);export{H as default};
