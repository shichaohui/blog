import{_ as n,p as s,q as a,a0 as t}from"./framework-8abcb967.js";const p={},o=t(`<p>平时的多渠道打包配置方式：</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>android <span class="token punctuation">{</span>
    <span class="token punctuation">......</span>
    productFlavors <span class="token punctuation">{</span>
        flavorName1 <span class="token punctuation">{</span>
            manifestPlaceholders<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;JPUSH_CHANNEL&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;channel_1&quot;</span></span><span class="token punctuation">)</span>
            <span class="token function">buildConfigField</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;int&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;fieldXxx&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;1&quot;</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">......</span>
        <span class="token punctuation">}</span>
        flavorName2 <span class="token punctuation">{</span>
            manifestPlaceholders<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;JPUSH_CHANNEL&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;channel_2&quot;</span></span><span class="token punctuation">)</span>
            <span class="token function">buildConfigField</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;int&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;fieldXxx&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;2&quot;</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">......</span>
        <span class="token punctuation">}</span>
        <span class="token punctuation">.......</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种方式没啥问题，只是写起来太烦了，一堆的重复代码，我不爽，我要封装一下：</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>android <span class="token punctuation">{</span>
    <span class="token punctuation">......</span>
    productFlavors <span class="token punctuation">{</span>
        ext<span class="token punctuation">.</span>flavor <span class="token operator">=</span> <span class="token punctuation">{</span> _flavor<span class="token punctuation">,</span> _jPushChannel<span class="token punctuation">,</span> _fieldXxx <span class="token operator">-&gt;</span>
            _flavor<span class="token punctuation">.</span>manifestPlaceholders<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;JPUSH_CHANNEL&quot;</span></span><span class="token punctuation">,</span> _jPushChannel<span class="token punctuation">)</span>
            _flavor<span class="token punctuation">.</span><span class="token function">buildConfigField</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;int&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;fieldXxx&quot;</span></span><span class="token punctuation">,</span> _fieldXxx<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        flavorName1 <span class="token punctuation">{</span>
            <span class="token function">flavor</span><span class="token punctuation">(</span>flavorName1<span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;channel_1&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;1&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        flavorName2 <span class="token punctuation">{</span>
            <span class="token function">flavor</span><span class="token punctuation">(</span>flavorName2<span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;channel_2&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;2&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>封装完成，编译运行也没有问题。</p><p>但是每个渠道要写 3 行代码，写两遍渠道名，还是不爽，我要一行搞定：</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>android <span class="token punctuation">{</span>
    <span class="token punctuation">......</span>
    productFlavors <span class="token punctuation">{</span>
        ext<span class="token punctuation">.</span>flavor <span class="token operator">=</span> <span class="token punctuation">{</span> _flavor<span class="token punctuation">,</span> _jPushChannel<span class="token punctuation">,</span> _fieldXxx <span class="token operator">-&gt;</span>
            _flavor<span class="token punctuation">.</span>manifestPlaceholders<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;JPUSH_CHANNEL&quot;</span></span><span class="token punctuation">,</span> _jPushChannel<span class="token punctuation">)</span>
            _flavor<span class="token punctuation">.</span><span class="token function">buildConfigField</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;int&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;fieldXxx&quot;</span></span><span class="token punctuation">,</span> _fieldXxx<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token function">flavor</span><span class="token punctuation">(</span>flavorName1<span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;channel_1&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;1&quot;</span></span><span class="token punctuation">)</span>
        <span class="token function">flavor</span><span class="token punctuation">(</span>flavorName2<span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;channel_2&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;2&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完美~</p><p>配置越多，越能体现这种写法的优势。</p>`,9),i=[o];function e(l,c){return s(),a("div",null,i)}const r=n(p,[["render",e],["__file","Android Gradle productFlavors youhua.html.vue"]]);export{r as default};
