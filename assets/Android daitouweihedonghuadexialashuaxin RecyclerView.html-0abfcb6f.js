import{_ as c,p,q as o,s as n,R as a,t as e,Y as t,n as i}from"./framework-a25df3d5.js";const l={},u={href:"https://shichaohui.github.io/",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,"项目地址：https://github.com/shichaohui/AnimRefreshRecyclerView",-1),r=n("p",null,[a("项目中包含一个demo（普通 "),n("code",null,"Android"),a(" 工程）和 "),n("code",null,"Android Library"),a("，感兴趣的同学可以自己下载源码和 Demo。")],-1),k={href:"http://blog.csdn.net/bingaicao1",target:"_blank",rel:"noopener noreferrer"},m=t(`<p>效果预览，嗯...看起来有点卡，截图软件的问题：</p><p><img src="https://img-blog.csdn.net/20150808145428151" alt="带动画的下拉刷新RecyclerView"></p><p><strong>上图中演示了三种不同的布局和下拉效果，三种布局和三种下拉效果可以通过 Header 的设置任意组合。</strong></p><p>图中普通列表是 <code>ListView</code> 样式，没有设置 <code>Header</code> 和 <code>Footer</code>，使用默认的下拉刷新和上拉加载。</p><p>宫格列表使用的是自定义 <code>Header</code> 和 <code>Footer</code> 的下拉刷新和上拉上拉加载，并设置了下拉使放大的图片。</p><p>瀑布流列表使用的是自定义 <code>Header</code> 和 <code>Footer</code> 的下拉刷新和上拉上拉加载，没有设置了下拉使放大的图片，使用默认的刷新动画。</p><h2 id="引入" tabindex="-1"><a class="header-anchor" href="#引入" aria-hidden="true">#</a> 引入</h2><p>Gradle:</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>dependencies {
    compile &#39;com.android.support:recyclerview-v7:23.1.0&#39;
    compile &#39;com.sch.rfview:AnimRefreshRecyclerView:1.0.6@aar&#39;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Eclipse</code> 的同学们可以自己下载源码拷贝 <code>java</code> 文件到自己的工程（别忘了引用 <code>RecyclerView</code> 的包哦）。</p><p>代码中的配置参考下面的用法代码片段，除了 <code>RecyclerView</code> 自带的方法，其他方法都是可选的。</p><h2 id="根据列表的不同效果选择不同的布局管理器" tabindex="-1"><a class="header-anchor" href="#根据列表的不同效果选择不同的布局管理器" aria-hidden="true">#</a> 根据列表的不同效果选择不同的布局管理器</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 使用重写后的线性布局管理器</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnimRFLinearLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用重写后的格子布局管理器</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnimRFGridLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用重写后的瀑布流布局管理器</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnimRFStaggeredGridLayoutManager</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">StaggeredGridLayoutManager</span><span class="token punctuation">.</span><span class="token constant">VERTICAL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="根据不同的布局管理器设置分割线" tabindex="-1"><a class="header-anchor" href="#根据不同的布局管理器设置分割线" aria-hidden="true">#</a> 根据不同的布局管理器设置分割线</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 设置列表布局的分割线</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">addItemDecoration</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DividerItemDecoration</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>
        mAnimRFLinearLayoutManager<span class="token punctuation">.</span><span class="token function">getOrientation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 设置网格或者瀑布流布局的分割线</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">addItemDecoration</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DividerGridItemDecoration</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置header和footer" tabindex="-1"><a class="header-anchor" href="#设置header和footer" aria-hidden="true">#</a> 设置Header和Footer</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 头部</span>
headerView <span class="token operator">=</span> <span class="token class-name">LayoutInflater</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>header_view<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 脚部</span>
footerView <span class="token operator">=</span> <span class="token class-name">LayoutInflater</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>footer_view<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 添加头部和脚部，如果不添加就使用默认的头部和脚部（头部可以有多个）</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">addHeaderView</span><span class="token punctuation">(</span>headerView<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置头部的最大拉伸倍率，默认1.5f，必须写在setHeaderImage()之前</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">setScaleRatio</span><span class="token punctuation">(</span><span class="token number">2.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置下拉时拉伸的图片，不设置就使用默认的</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">setHeaderImage</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span> headerView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>iv_hander<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">addFootView</span><span class="token punctuation">(</span>footerView<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以通过<code>addHeaderView()</code>和<code>setHeaderImage()</code>方法任意组合下拉效果，可以调用多次<code>addHeaderView()</code>方法添加多个头部，但是<code>setHeaderImage()</code>方法最多被调用一次。 最多调用一次<code>addFootView()</code>方法，即最多设置一个FooterView。</p><h2 id="其他设置" tabindex="-1"><a class="header-anchor" href="#其他设置" aria-hidden="true">#</a> 其他设置</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 设置刷新动画的颜色（可选）</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">WHITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置头部恢复动画的执行时间，默认500毫秒（可选）</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">setHeaderImageDurationMillis</span><span class="token punctuation">(</span><span class="token number">1200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置拉伸到最高时头部的透明度，默认0.5f（可选）</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">setHeaderImageMinAlpha</span><span class="token punctuation">(</span><span class="token number">0.6f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 设置适配器</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 设置刷新和加载更多数据的监听，分别在onRefresh()和onLoadMore()方法中执行刷新和加载更多操作</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">setLoadDataListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnimRFRecyclerView<span class="token punctuation">.</span>LoadDataListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    <span class="token comment">// 开启线程刷新数据</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLoadMore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    <span class="token comment">// 开启线加载更多数据</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="手动刷新" tabindex="-1"><a class="header-anchor" href="#手动刷新" aria-hidden="true">#</a> 手动刷新</h2>`,21),v={href:"https://github.com/shichaohui/AnimRefreshRecyclerView/blob/master/app/src/main/java/com/sch/rfview/example/fragment/LinearFragment.java",target:"_blank",rel:"noopener noreferrer"},h=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>mRecyclerView<span class="token punctuation">.</span><span class="token function">setRefresh</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="在刷新和加载过更多完成之后调用代码停止动画" tabindex="-1"><a class="header-anchor" href="#在刷新和加载过更多完成之后调用代码停止动画" aria-hidden="true">#</a> 在刷新和加载过更多完成之后调用代码停止动画</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 刷新完成后调用，必须在UI线程中</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">refreshComplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 加载更多完成后调用，必须在UI线程中</span>
mRecyclerView<span class="token punctuation">.</span><span class="token function">loadMoreComplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="禁止刷新" tabindex="-1"><a class="header-anchor" href="#禁止刷新" aria-hidden="true">#</a> 禁止刷新</h2><p>如果不想使用自带的刷新效果，而想要使用 <code>SwipRefreshLayout</code> 做刷新，可使用以下代码禁止自带的刷新效果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mRecyclerView.setRefreshEnable(false);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Tips：</strong></p><ul><li>若在使用过程中发现 <code>adapter.notifyDataSetChange()</code> 等更新数据的方法无效，可使用 <code>recyclerView.getAdapter()</code> 获取当前使用的 <code>Adapter</code>，并使用获取到到 <code>Adapter</code> 更新数据。</li></ul>`,8);function b(w,f){const s=i("ExternalLinkIcon");return p(),o("div",null,[n("blockquote",null,[n("p",null,[n("small",null,[a("转载请注明出处，"),n("a",u,[a("点击此处"),e(s)]),a(" 查看更多精彩内容")])])]),d,r,n("p",null,[a("感谢"),n("a",k,[a("bingaicao1"),e(s)]),a("提供的帮助。")]),m,n("p",null,[a("如果想第一次进入界面时就显示加载数据的动画，需要使用手动刷新的方法。此方法需要在其他设置完成后调用,具体使用可以"),n("a",v,[a("看这里"),e(s)])]),h])}const y=c(l,[["render",b],["__file","Android daitouweihedonghuadexialashuaxin RecyclerView.html.vue"]]);export{y as default};
