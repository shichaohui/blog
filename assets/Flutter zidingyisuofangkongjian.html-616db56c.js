import{_ as c,p as o,q as l,s as a,R as n,t as e,Y as t,n as i}from"./framework-a25df3d5.js";const p={},u=a("code",null,"Flutter",-1),r={href:"https://gank.io",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/shichoahui/Gank",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/shichaohui/gesture_zoom_box",target:"_blank",rel:"noopener noreferrer"},m=t('<h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h2><ul><li>双击缩放。</li><li>双指缩放。</li><li>以双击位置/双指位置作为缩放中心。</li><li>限制缩放/拖动范围，超过范围自动回弹。</li><li>作为父级 Widget 直接嵌套，无侵入。</li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8xODM3MzY4LTU5NDcxNDY5NTQ3MGU2MTMuZ2lm" alt="demo_big_image.gif"></p><h2 id="核心原理" tabindex="-1"><a class="header-anchor" href="#核心原理" aria-hidden="true">#</a> 核心原理</h2><h3 id="手势识别" tabindex="-1"><a class="header-anchor" href="#手势识别" aria-hidden="true">#</a> 手势识别</h3>',5),h={href:"https://book.flutterchina.club/chapter8/gesture.html",target:"_blank",rel:"noopener noreferrer"},v=t(`<p><code>Flutter</code> 已经提供了 <code>GestureDetector</code> 处理手势（点击、双击、缩放、拖动），我们只要将可缩放内容作为 <code>GestureDetector</code> 的 <code>child</code> 并设置相应手势回调即可。</p><blockquote><p>Pan and scale callbacks cannot be used simultaneous because scale is a superset of pan. Simply use the scale callbacks instead.</p></blockquote><p>这是源码中的注释，大意是“缩放是平移的超集，两者不能同时使用，只需使用缩放回调即可”。因此我们只需要用到以下回调：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">/// 双击事件回调，用来处理双击缩放。</span>
<span class="token keyword">final</span> <span class="token class-name">GestureTapCallback</span> onDoubleTap<span class="token punctuation">;</span>

<span class="token comment">/// 缩放值或者拖动位置发生改变。在这里根据每次的变化量进行缩放/拖动处理。</span>
<span class="token keyword">final</span> <span class="token class-name">GestureScaleUpdateCallback</span> onScaleUpdate<span class="token punctuation">;</span>

<span class="token comment">/// 缩放/拖动结束。用来检测并处理超过边界的情况。</span>
<span class="token keyword">final</span> <span class="token class-name">GestureScaleEndCallback</span> onScaleEnd<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="缩放和平移" tabindex="-1"><a class="header-anchor" href="#缩放和平移" aria-hidden="true">#</a> 缩放和平移</h3><p>使用 <code>Transform</code> 进行缩放和平移处理。</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">// 当前缩放值</span>
double _scale <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>

<span class="token comment">// 当前偏移值</span>
<span class="token class-name">Offset</span> _offset <span class="token operator">=</span> <span class="token class-name">Offset</span><span class="token punctuation">.</span>zero<span class="token punctuation">;</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token comment">// 使用 Transform 包裹 child ，以便进行平移和缩放处理</span>
<span class="token class-name">Transform</span><span class="token punctuation">(</span>
  transform<span class="token punctuation">:</span> <span class="token class-name">Matrix4</span><span class="token punctuation">.</span><span class="token function">identity</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>_offset<span class="token punctuation">.</span>dx<span class="token punctuation">,</span> _offset<span class="token punctuation">.</span>dy<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span>_scale<span class="token punctuation">,</span> _scale<span class="token punctuation">)</span><span class="token punctuation">,</span>
  child<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>child<span class="token punctuation">,</span>
  alignment<span class="token punctuation">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><h3 id="添加依赖" tabindex="-1"><a class="header-anchor" href="#添加依赖" aria-hidden="true">#</a> 添加依赖</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">dependencies</span><span class="token punctuation">:</span>
  <span class="token key atrule">gesture_zoom_box</span><span class="token punctuation">:</span> ^0.0.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="导包" tabindex="-1"><a class="header-anchor" href="#导包" aria-hidden="true">#</a> 导包</h3><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:gesture_zoom_box/gesture_zoom_box.dart&#39;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="使用控件" tabindex="-1"><a class="header-anchor" href="#使用控件" aria-hidden="true">#</a> 使用控件</h3><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">GestureZoomBox</span><span class="token punctuation">(</span>
    maxScale<span class="token punctuation">:</span> <span class="token number">5.0</span><span class="token punctuation">,</span>
    doubleTapScale<span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">,</span>
    duration<span class="token punctuation">:</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">,</span>
    child<span class="token punctuation">:</span> <span class="token class-name">Image</span><span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>imageUrl<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="项目地址" tabindex="-1"><a class="header-anchor" href="#项目地址" aria-hidden="true">#</a> 项目地址</h2>`,15),b={href:"https://github.com/shichaohui/gesture_zoom_box",target:"_blank",rel:"noopener noreferrer"},g={href:"https://pub.dev/packages/gesture_zoom_box",target:"_blank",rel:"noopener noreferrer"};function _(f,x){const s=i("ExternalLinkIcon");return o(),l("div",null,[a("p",null,[n("最近在学习 "),u,n("，俗话说的好，纸上得来终觉浅，所以动手撸了一个 "),a("a",r,[n("gank.io"),e(s)]),n(" 的 APP，有兴趣的可以 "),a("a",d,[n("到 GitHub 看看源码"),e(s)]),n("。")]),a("p",null,[n("本文将与大家分享项目中自定义的缩放控件 "),a("a",k,[n("GestureZoomBox"),e(s)]),n(" 。")]),m,a("p",null,[a("a",h,[n("GestureDetector"),e(s)])]),v,a("p",null,[a("a",b,[n("GitHub"),e(s)]),n(" | "),a("a",g,[n("Pub"),e(s)])])])}const G=c(p,[["render",_],["__file","Flutter zidingyisuofangkongjian.html.vue"]]);export{G as default};
