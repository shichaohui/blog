import{_ as p,o,c as l,b as n,d as a,e,a as t,r as c}from"./app.eb9fa6b0.js";const i={},r=n("h1",{id:"rxjava-\u64CD\u4F5C\u7B26",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rxjava-\u64CD\u4F5C\u7B26","aria-hidden":"true"},"#"),a(" RxJava \u64CD\u4F5C\u7B26")],-1),u=n("code",null,"RxJava1.x",-1),k={href:"https://github.com/ReactiveX/RxJava",target:"_blank",rel:"noopener noreferrer"},d=n("code",null,"RxJava",-1),v={href:"https://github.com/ReactiveX/RxJava",target:"_blank",rel:"noopener noreferrer"},b={href:"http://reactivex.io/RxJava/2.x/javadoc/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/ReactiveX/RxJava",target:"_blank",rel:"noopener noreferrer"},h=n("p",null,"\u53C2\u8003\u6587\u6863\uFF1A",-1),g={href:"http://reactivex.io/RxJava/javadoc",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.gitbook.com/book/mcxiaoke/rxdocs/details",target:"_blank",rel:"noopener noreferrer"},f=n("hr",null,null,-1),x={id:"_1-observable-\u7684\u521B\u5EFA",tabindex:"-1"},O=n("a",{class:"header-anchor",href:"#_1-observable-\u7684\u521B\u5EFA","aria-hidden":"true"},"#",-1),T={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},j=n("h3",{id:"_1-1-from",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-from","aria-hidden":"true"},"#"),a(" 1.1\xA0from()")],-1),w={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(java.lang.Iterable)",target:"_blank",rel:"noopener noreferrer"},R={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u5BF9\u96C6\u5408\uFF08\u6570\u7EC4\u3001List \u7B49\uFF09\u8FDB\u884C\u904D\u5386\u3002",-1),J=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/from.png",alt:"form()"})],-1),S=n("p",null,[n("strong",null,"\u5176\u4ED6 form() API\uFF1A")],-1),F={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(java.util.concurrent.Future)",target:"_blank",rel:"noopener noreferrer"},I={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(java.util.concurrent.Future,%20long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},U={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(java.util.concurrent.Future,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},L={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#from(T%5B%5D)",target:"_blank",rel:"noopener noreferrer"},q=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 1. \u904D\u5386\u96C6\u5408</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 2. \u4F7F\u7528 Future \u521B\u5EFA Observable\uFF0CFuture \u8868\u793A\u4E00\u4E2A\u5F02\u6B65\u8BA1\u7B97\u7684\u7ED3\u679C\u3002</span>
<span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> futureTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO \u6267\u884C\u5F02\u6B65\u64CD\u4F5C\u5E76\u8FD4\u56DE\u6570\u636E</span>
        <span class="token keyword">return</span> <span class="token string">&quot;hihi&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Scheduler<span class="token punctuation">.</span>Worker</span> worker <span class="token operator">=</span> <span class="token class-name">Schedulers</span><span class="token punctuation">.</span><span class="token function">io</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
worker<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        futureTask<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-just" tabindex="-1"><a class="header-anchor" href="#_1-2-just" aria-hidden="true">#</a> 1.2\xA0just()</h3>`,4),E={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T)",target:"_blank",rel:"noopener noreferrer"},A={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},X={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},N=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/just.m.png",alt:"just()"})],-1),C=n("p",null,"** \u5176\u4ED6 just() API\uFF1A**",-1),B={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T)",target:"_blank",rel:"noopener noreferrer"},D={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},M={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},W={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},P={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},V={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},H={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},z={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},G={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#just(T,%20T,%20T,%20T,%20T,%20T,%20T,%20T,%20T,%20T)",target:"_blank",rel:"noopener noreferrer"},K=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528 just() \u904D\u5386\u51E0\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       
<span class="token comment">// \u4F7F\u7528 from() \u65B9\u6CD5\u904D\u5386\uFF0C\u6548\u679C\u548C just() \u4E00\u6837\u3002</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringArrs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>stringArrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>just()</code> \u65B9\u6CD5\u53EF\u4F20\u5165 1~10 \u4E2A\u53C2\u6570\uFF0C\u4E5F\u5C31\u8BF4\u5F53\u5143\u7D20\u4E2A\u6570\u5C0F\u4E8E\u7B49\u4E8E 10 \u7684\u65F6\u5019\u65E2\u53EF\u4EE5\u4F7F\u7528 \xA0<code>just() </code> \u4E5F\u53EF\u4EE5\u4F7F\u7528 <code>from()</code>\uFF0C\u5426\u5219\u53EA\u80FD\u7528 <code>from()</code> \u65B9\u6CD5\u3002</p><h3 id="_1-3-create" tabindex="-1"><a class="header-anchor" href="#_1-3-create" aria-hidden="true">#</a> 1.3\xA0create()</h3>`,4),Q={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#create(rx.Observable.OnSubscribe)",target:"_blank",rel:"noopener noreferrer"},Y={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Z=n("p",null,[a("**\u4F7F\u7528\u573A\u666F\uFF1A**\u4E0D\u63A8\u8350\u4F7F\u7528\uFF0C\u53EF\u4F7F\u7528\u5176\u4ED6\u64CD\u4F5C\u7B26\u66FF\u4EE3\uFF0C\u5982\u4F7F\u7528 "),n("code",null,"from()"),a("\u64CD\u4F5C\u7B26\u5B8C\u6210\u904D\u5386\u3002")],-1),$=n("p",null,"** \u5176\u4ED6 create() API\uFF1A**",-1),nn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#create(rx.observables.SyncOnSubscribe)",target:"_blank",rel:"noopener noreferrer"},an={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#create(rx.observables.AsyncOnSubscribe)",target:"_blank",rel:"noopener noreferrer"},sn=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> onSubscribe <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span> <span class="token class-name">String</span> <span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">String</span> <span class="token punctuation">&gt;</span></span> subscriber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// onNext() \u65B9\u6CD5\u53EF\u6267\u884C\u591A\u6B21</span>
        subscribe<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        subscribe<span class="token punctuation">.</span><span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>onSubscribe<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65B9\u6CD5\u4E0D\u5E38\u7528\uFF0C\u5927\u591A\u6570\u65F6\u5019\u90FD\u662F\u4F7F\u7528 <code>just()</code>\u3001<code>form()</code> \u7B49\u65B9\u6CD5\uFF0C\u5982\u4E0A\u9762\u90A3\u4E32\u4EE3\u7801\u5C31\u53EF\u4EE5\u5199\u6210\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-4-interval" tabindex="-1"><a class="header-anchor" href="#_1-4-interval" aria-hidden="true">#</a> 1.4\xA0interval()</h3>`,5),en={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#interval(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},tn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},pn=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u4F7F\u7528\u8BE5\u64CD\u4F5C\u7B26\u5B8C\u6210\u5B9A\u65F6\u3001\u5012\u8BA1\u65F6\u7B49\u529F\u80FD\u3002",-1),on=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/interval.png",alt:"interval()"})],-1),ln=n("p",null,"** \u5176\u4ED6 interval() API\uFF1A**",-1),cn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#interval(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},rn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#interval(long,%20long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},un={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#interval(long,%20long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},kn=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6BCF\u9694 1 s \u53D1\u9001\u4E00\u4E2A\u5E8F\u5217\u53F7\uFF0C\u5E8F\u5217\u53F7\u4ECE 0 \u5F00\u59CB\uFF0C\u6BCF\u6B21\u7D2F\u52A0 1\u3002</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-timer" tabindex="-1"><a class="header-anchor" href="#_1-5-timer" aria-hidden="true">#</a> 1.5\xA0timer()</h3>`,3),dn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#timer(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},vn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},bn=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u7528\u6765\u5B8C\u6210\u5B9A\u65F6\u529F\u80FD\u3002",-1),mn=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/timer.png",alt:"timer()"})],-1),hn=n("p",null,[n("strong",null,"\u5176\u4ED6 timer() API\uFF1A")],-1),gn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#timer(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},_n=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5B9A\u65F6 3 s</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-6-range" tabindex="-1"><a class="header-anchor" href="#_1-6-range" aria-hidden="true">#</a> 1.6\xA0range()</h3>`,3),fn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#range(int,%20int)",target:"_blank",rel:"noopener noreferrer"},xn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},On=n("p",null,[a("**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u4F7F\u7528\u8BE5\u64CD\u4F5C\u7B26\u5B8C\u6210\u4E00\u4E2A "),n("code",null,"fori"),a(" \u7684\u5FAA\u73AF\uFF0C\u5982 "),n("code",null,"for(int i=5;i<=7;i++)"),a(" --> "),n("code",null,"Observable.range(5, 3)"),a("\u3002")],-1),Tn=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/range.png",alt:"range()"})],-1),jn=n("p",null,"** \u5176\u4ED6 range() API\uFF1A**",-1),wn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#range(int,%20int,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Rn=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4F9D\u6B21\u53D1\u5C04 5\u30016\u30017</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-7-empty" tabindex="-1"><a class="header-anchor" href="#_1-7-empty" aria-hidden="true">#</a> 1.7\xA0empty()</h3>`,3),yn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#empty()",target:"_blank",rel:"noopener noreferrer"},Jn=n("code",null,"onCompleted()",-1),Sn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Fn=t(`<p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/empty.png" alt="empty()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D1\u51FA\u4E00\u4E2A onCompleted() \u901A\u77E5</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-8-error" tabindex="-1"><a class="header-anchor" href="#_1-8-error" aria-hidden="true">#</a> 1.8\xA0error()</h3>`,4),In={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#error(java.lang.Throwable)",target:"_blank",rel:"noopener noreferrer"},Un=n("code",null,"onError",-1),Ln={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},qn=t(`<p>**\u4F7F\u7528\u573A\u666F\uFF1A**\u7A0B\u5E8F\u4E2D\u6355\u83B7\u5F02\u5E38\u540E\uFF0C\u53EF\u4F7F\u7528\u8BE5\u64CD\u4F5C\u7B26\u628A\u6355\u83B7\u7684\u5F02\u5E38\u4F20\u9012\u5230\u540E\u9762\u7684\u903B\u8F91\u4E2D\u5904\u7406\u3002</p><p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/error.png" alt="error()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D1\u51FA\u4E00\u4E2A onError() \u901A\u77E5</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Throwable</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-9-never" tabindex="-1"><a class="header-anchor" href="#_1-9-never" aria-hidden="true">#</a> 1.9 never()</h3>`,5),En={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#never()",target:"_blank",rel:"noopener noreferrer"},An={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Xn=t(`<p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/never.png" alt="never()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">never</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-10-defer" tabindex="-1"><a class="header-anchor" href="#_1-10-defer" aria-hidden="true">#</a> 1.10 defer()</h3>`,4),Nn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#defer(rx.functions.Func0)",target:"_blank",rel:"noopener noreferrer"},Cn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Bn=t(`<p>**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u4EE5\u4F7F\u7528\u8BE5\u64CD\u4F5C\u7B26\u5C01\u88C5\u9700\u8981\u88AB\u591A\u6B21\u6267\u884C\u7684\u51FD\u6570\u3002</p><p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/defer.png" alt="defer()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">defer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func0</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u91CD\u505A" tabindex="-1"><a class="header-anchor" href="#_2-\u91CD\u505A" aria-hidden="true">#</a> 2 \u91CD\u505A</h2><h3 id="_2-1-repeat" tabindex="-1"><a class="header-anchor" href="#_2-1-repeat" aria-hidden="true">#</a> 2.1 repeat()</h3>`,6),Dn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeat()",target:"_blank",rel:"noopener noreferrer"},Mn=n("p",null,[a("\u4F7FObservable \u5BF9\u8C61\u5728\u53D1\u51FA "),n("code",null,"onNext()"),a(" \u901A\u77E5\u4E4B\u540E\u91CD\u590D\u53D1\u5C04\u6570\u636E\u3002\u91CD\u505A\u7ED3\u675F\u624D\u4F1A\u53D1\u51FA "),n("code",null,"onComplete()"),a(" \u901A\u77E5\uFF0C\u82E5\u91CD\u505A\u8FC7\u7A0B\u4E2D\u51FA\u73B0\u5F02\u5E38\u5219\u4F1A\u4E2D\u65AD\u5E76\u53D1\u51FA "),n("code",null,"onError()"),a(" \u901A\u77E5\u3002")],-1),Wn=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u4F7F\u7528\u8BE5\u64CD\u4F5C\u7B26\u6307\u5B9A\u4E00\u6B21\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u540E\u7ACB\u5373\u91CD\u590D\u6267\u884C\u4E0A\u4E00\u6B21\u7684\u4EFB\u52A1\uFF0C\u5982\u53D1\u9001\u591A\u6B21\u7F51\u7EDC\u8BF7\u6C42\u7B49\u3002",-1),Pn=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/repeat.o.png",alt:"repeat()"})],-1),Vn=n("p",null,[n("strong",null,"\u5176\u4ED6 repeat() API\uFF1A")],-1),Hn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeat(long)",target:"_blank",rel:"noopener noreferrer"},zn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeat(rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Gn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeat(long,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Kn=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u65E0\u9650\u91CD\u590D\u6267\u884C</span>
observable<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u91CD\u590D\u6267\u884C 5 \u6B21</span>
observable<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-repeatwhen" tabindex="-1"><a class="header-anchor" href="#_2-2-repeatwhen" aria-hidden="true">#</a> 2.2 repeatWhen()</h3>`,3),Qn={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeatWhen(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},Yn=n("p",null,[a("\u4F7FObservable \u5BF9\u8C61\u5728\u53D1\u51FA "),n("code",null,"onNext()"),a(" \u901A\u77E5\u4E4B\u540E\u6709\u6761\u4EF6\u7684\u91CD\u590D\u53D1\u5C04\u6570\u636E\u3002\u91CD\u505A\u7ED3\u675F\u624D\u4F1A\u53D1\u51FA "),n("code",null,"onCompleted()"),a(" \u901A\u77E5\uFF0C\u82E5\u91CD\u505A\u8FC7\u7A0B\u4E2D\u51FA\u73B0\u5F02\u5E38\u5219\u4F1A\u4E2D\u65AD\u5E76\u53D1\u51FA "),n("code",null,"onError()"),a(" \u901A\u77E5\u3002")],-1),Zn=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u4F7F\u7528\u8BE5\u64CD\u4F5C\u7B26\u6307\u5B9A\u6EE1\u8DB3\u4E00\u5B9A\u6761\u4EF6\u65F6\u91CD\u590D\u6267\u884C\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u5982\u53D1\u9001\u591A\u6B21\u7F51\u7EDC\u8BF7\u6C42\u7B49\u3002",-1),$n=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/repeatWhen.f.png",alt:"repeatWhen()"})],-1),na=n("p",null,[n("strong",null,"\u5176\u4ED6 repeatWhen() API\uFF1A")],-1),aa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#repeatWhen(rx.functions.Func1,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},sa=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>observable<span class="token punctuation">.</span><span class="token function">repeatWhen</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Void</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> observable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u91CD\u590D 3 \u6B21, \u6BCF\u6B21\u95F4\u9694 1 s</span>
        <span class="token keyword">return</span> observable<span class="token punctuation">.</span><span class="token function">zipWith</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Void</span> aVoid<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer<span class="token punctuation">;</span>
             <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>integer <span class="token operator">-&gt;</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u91CD\u8BD5" tabindex="-1"><a class="header-anchor" href="#_3-\u91CD\u8BD5" aria-hidden="true">#</a> 3 \u91CD\u8BD5</h2><h3 id="_3-1-retry" tabindex="-1"><a class="header-anchor" href="#_3-1-retry" aria-hidden="true">#</a> 3.1 retry()</h3>`,4),ea={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retry()",target:"_blank",rel:"noopener noreferrer"},ta={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},pa=n("code",null,"onError()",-1),oa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},la=n("code",null,"onNext()",-1),ca=n("code",null,"onCompleted()",-1),ia=n("code",null,"onError()",-1),ra=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u7F51\u7EDC\u7B49\u8BF7\u6C42\u5F02\u5E38\u51FA\u9519\u540E\uFF0C\u53EF\u91CD\u65B0\u53D1\u8D77\u8BF7\u6C42\u3002",-1),ua=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/retry.png",alt:"retry()"})],-1),ka=n("p",null,[n("strong",null,"\u5176\u4ED6 retry() API\uFF1A")],-1),da={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retry(long)",target:"_blank",rel:"noopener noreferrer"},va={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retry(rx.functions.Func2)",target:"_blank",rel:"noopener noreferrer"},ba=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> subscriber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;.......&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
        subscriber<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        subscriber<span class="token punctuation">.</span><span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u65E0\u9650\u6B21\u7684\u91CD\u8BD5</span>
observable<span class="token punctuation">.</span><span class="token function">retry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u91CD\u8BD5 3 \u6B21</span>
observable<span class="token punctuation">.</span><span class="token function">retry</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528\u8C13\u8BED\u51FD\u6570\u51B3\u5B9A\u662F\u5426\u91CD\u8BD5</span>
observable<span class="token punctuation">.</span><span class="token function">retry</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53C2\u6570 integer \u662F\u8BA2\u9605\u7684\u6B21\u6570; \u53C2\u6570 throwable \u662F\u629B\u51FA\u7684\u5F02\u5E38</span>
        <span class="token comment">// \u8FD4\u56DE\u503C\u4E3A true \u8868\u793A\u91CD\u8BD5, \u8FD4\u56DE\u503C\u4E3A false \u8868\u793A\u4E0D\u91CD\u8BD5</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-retrywhen" tabindex="-1"><a class="header-anchor" href="#_3-2-retrywhen" aria-hidden="true">#</a> 3.2 retryWhen()</h3>`,3),ma={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retryWhen(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},ha=n("p",null,"\u6709\u6761\u4EF6\u7684\u6267\u884C\u91CD\u8BD5\u3002",-1),ga=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u7F51\u7EDC\u7B49\u8BF7\u6C42\u5F02\u5E38\u51FA\u9519\u540E\uFF0C\u82E5\u6EE1\u8DB3\u4E00\u5B9A\u6761\u4EF6\uFF0C\u5219\u91CD\u65B0\u53D1\u8D77\u8BF7\u6C42\u3002",-1),_a=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/retryWhen.f.png",alt:"retryWhen()"})],-1),fa=n("p",null,[n("strong",null,"\u5176\u4ED6 retryWhen() API\uFF1A")],-1),xa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#retryWhen(rx.functions.Func1,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Oa=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u91CD\u8BD5 3 \u6B21\uFF0C\u6BCF\u6B21\u95F4\u9694 1 s</span>
observable<span class="token punctuation">.</span><span class="token function">retryWhen</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span></span> observable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> observable<span class="token punctuation">.</span><span class="token function">zipWith</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u53D8\u6362" tabindex="-1"><a class="header-anchor" href="#_4-\u53D8\u6362" aria-hidden="true">#</a> 4 \u53D8\u6362</h2><h3 id="_4-1-map" tabindex="-1"><a class="header-anchor" href="#_4-1-map" aria-hidden="true">#</a> 4.1 map()</h3>`,4),Ta={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#map(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},ja={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},wa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Ra=t(`<p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/map.png" alt="map()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;\u539F\u59CB\u6570\u636E\u7684\u4E24\u500D\u4E3A: %s&quot;</span><span class="token punctuation">,</span> integer <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-flatmap" tabindex="-1"><a class="header-anchor" href="#_4-2-flatmap" aria-hidden="true">#</a> 4.2 flatMap()</h3>`,4),ya={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},Ja={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Sa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Fa=n("p",null,"**\u4F7F\u7528\u573A\u666F\uFF1A**\u4ECE\u7F51\u7EDC\u83B7\u53D6\u6570\u636E\u5E76\u4F7F\u7528 obsA \u5BF9\u8C61\u53D1\u5C04\uFF0CflatMap() \u64CD\u4F5C\u7B26\u4E2D\u53EF\u5C06\u6570\u636E\u5B58\u8FDB\u6570\u636E\u5E93\u5E76\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61 obsB\u3002",-1),Ia=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/flatMap.png",alt:"flatMap()"})],-1),Ua=n("p",null,[n("strong",null,"\u5176\u4ED6 flatMap() API\uFF1A")],-1),La={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20int)",target:"_blank",rel:"noopener noreferrer"},qa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20rx.functions.Func1,%20rx.functions.Func0)",target:"_blank",rel:"noopener noreferrer"},Ea={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20rx.functions.Func1,%20rx.functions.Func0,%20int)",target:"_blank",rel:"noopener noreferrer"},Aa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20rx.functions.Func2)",target:"_blank",rel:"noopener noreferrer"},Xa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#flatMap(rx.functions.Func1,%20rx.functions.Func2,%20int)",target:"_blank",rel:"noopener noreferrer"},Na=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u8F6C\u6362\u4E3A\u4E00\u4E2A\u5B9A\u65F6 integer \u79D2\u7684 Observable \u5BF9\u8C61</span>
                <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span>integer<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u8FC7\u6EE4" tabindex="-1"><a class="header-anchor" href="#_5-\u8FC7\u6EE4" aria-hidden="true">#</a> 5 \u8FC7\u6EE4</h2><h3 id="_5-1-filter" tabindex="-1"><a class="header-anchor" href="#_5-1-filter" aria-hidden="true">#</a> 5.1 filter()</h3>`,4),Ca={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#filter(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},Ba=t(`<p>\u53EA\u53D1\u5C04\u6EE1\u8DB3\u6307\u5B9A\u8C13\u8BCD\u7684\u5143\u7D20\u3002</p><p>**\u4F7F\u7528\u573A\u666F\uFF1A**\u53EF\u4F7F\u7528 filter \u4EE3\u66FF if \u8BED\u53E5\u3002</p><p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/filter.png" alt="filter()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-first" tabindex="-1"><a class="header-anchor" href="#_5-2-first" aria-hidden="true">#</a> 5.2 first()</h3>`,6),Da={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#first()",target:"_blank",rel:"noopener noreferrer"},Ma={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Wa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Pa={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Va=n("code",null,"NoSuchElementException",-1),Ha=n("p",null,[n("strong",null,"\u4F7F\u7528\u573A\u666F\uFF1A"),a(" \u987A\u5E8F\u53D1\u51FA\u591A\u6761\u6570\u636E\uFF0C\u53EA\u63A5\u6536\u7B2C\u4E00\u6761\u3002")],-1),za=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/first.png",alt:"first()"})],-1),Ga=n("p",null,[n("strong",null,"\u5176\u4ED6 first() API\uFF1A")],-1),Ka={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#first(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},Qa=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D1\u5C04\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u53D1\u5C04\u6EE1\u8DB3\u6761\u4EF6\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F1A\u629B\u51FA NoSuchElementException \u5F02\u5E38</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-last" tabindex="-1"><a class="header-anchor" href="#_5-3-last" aria-hidden="true">#</a> 5.3 last()</h3>`,3),Ya={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#last()",target:"_blank",rel:"noopener noreferrer"},Za={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},$a={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ns={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},as=n("code",null,"NoSuchElementException",-1),ss=n("p",null,[n("strong",null,"\u4F7F\u7528\u573A\u666F\uFF1A"),a(" \u987A\u5E8F\u53D1\u51FA\u591A\u6761\u6570\u636E\uFF0C\u53EA\u63A5\u6536\u6700\u540E\u4E00\u6761\u3002")],-1),es=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/last.png",alt:"last()"})],-1),ts=n("p",null,[n("strong",null,"\u5176\u4ED6 last() API\uFF1A")],-1),ps={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#last(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},os=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D1\u5C04\u5012\u6570\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u53D1\u5C04\u6EE1\u8DB3\u6761\u4EF6\u7684\u5012\u6570\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F1A\u629B\u51FA NoSuchElementException \u5F02\u5E38</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-4-skip" tabindex="-1"><a class="header-anchor" href="#_5-4-skip" aria-hidden="true">#</a> 5.4 skip()</h3>`,3),ls={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skip(int)",target:"_blank",rel:"noopener noreferrer"},cs=n("p",null,"\u8DF3\u8FC7\u524D\u9762\u6307\u5B9A\u6570\u91CF\u6216\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u5143\u7D20\uFF0C\u53EA\u53D1\u5C04\u540E\u9762\u7684\u5143\u7D20\u3002",-1),is=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/skip.png",alt:"skip()"})],-1),rs=n("p",null,[n("strong",null,"\u5176\u4ED6 skip() API\uFF1A")],-1),us={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skip(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},ks={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skip(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},ds=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// \u8DF3\u8FC7\u524D\u4E24\u6761\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-5-skiplast" tabindex="-1"><a class="header-anchor" href="#_5-5-skiplast" aria-hidden="true">#</a> 5.5 skipLast()</h3>`,3),vs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skipLast(int)",target:"_blank",rel:"noopener noreferrer"},bs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},ms=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/skipLast.png",alt:"skipLast()"})],-1),hs=n("p",null,[n("strong",null,"\u5176\u4ED6 skipLast() API\uFF1A")],-1),gs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skipLast(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},_s={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#skipLast(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},fs=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">skipLast</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// \u8DF3\u8FC7\u540E\u4E24\u6761\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-6-take" tabindex="-1"><a class="header-anchor" href="#_5-6-take" aria-hidden="true">#</a> 5.6 take()</h3>`,3),xs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#take(int)",target:"_blank",rel:"noopener noreferrer"},Os=n("p",null,"\u53EA\u53D1\u5C04\u524D\u9762\u6307\u5B9A\u6570\u91CF\u6216\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u5143\u7D20\u3002",-1),Ts=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/take.png",alt:"take()"})],-1),js=n("p",null,[n("strong",null,"\u5176\u4ED6 take() API\uFF1A")],-1),ws={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#take(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Rs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#take(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},ys=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u53D1\u5C04\u524D\u4E09\u6761\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-7-takelast" tabindex="-1"><a class="header-anchor" href="#_5-7-takelast" aria-hidden="true">#</a> 5.7 takeLast()</h3>`,3),Js={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(int)",target:"_blank",rel:"noopener noreferrer"},Ss={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Fs=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/takeLast.n.png",alt:"takeLast()"})],-1),Is=n("p",null,[n("strong",null,"\u5176\u4ED6 takeLast() API\uFF1A")],-1),Us={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(int,%20long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Ls={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(int,%20long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},qs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Es={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#takeLast(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},As=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">takeLast</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u53D1\u5C04\u540E\u4E09\u6761\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-8-sample" tabindex="-1"><a class="header-anchor" href="#_5-8-sample" aria-hidden="true">#</a> 5.8 sample()</h3>`,3),Xs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#sample(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},Ns={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},Cs=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/sample.emitlast.1x.png",alt:"sample()"})],-1),Bs=n("p",null,[n("strong",null,"\u5176\u4ED6 sample() API\uFF1A")],-1),Ds={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#sample(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},Ms={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#sample(rx.Observable)",target:"_blank",rel:"noopener noreferrer"},Ws=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">sample</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-9-elementat" tabindex="-1"><a class="header-anchor" href="#_5-9-elementat" aria-hidden="true">#</a> 5.9 elementAt()</h3>`,3),Ps={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#elementAt(int)",target:"_blank",rel:"noopener noreferrer"},Vs=t(`<p>\u53EA\u53D1\u5C04\u6307\u5B9A\u7D22\u5F15\u7684\u5143\u7D20\u3002 <strong>\u4F7F\u7528\u573A\u666F\uFF1A</strong> \u6309\u7D22\u5F15\u53BB\u96C6\u5408\u4E2D\u7684\u5143\u7D20\u7B49\u3002</p><p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/elementAt.png" alt="elementAt()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">elementAt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D1\u5C04\u7D22\u5F15\u4E3A 2 \u7684\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-10-elementatordefault" tabindex="-1"><a class="header-anchor" href="#_5-10-elementatordefault" aria-hidden="true">#</a> 5.10\xA0elementAtOrDefault()</h3>`,5),Hs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#elementAtOrDefault(int,%20T)",target:"_blank",rel:"noopener noreferrer"},zs=t(`<p>\u53EA\u53D1\u5C04\u6307\u5B9A\u7D22\u5F15\u7684\u5143\u7D20\uFF0C\u82E5\u8BE5\u7D22\u5F15\u5BF9\u5E94\u7684\u5143\u7D20\u4E0D\u5B58\u5728\uFF0C\u5219\u53D1\u5C04\u9ED8\u8BA4\u503C\u3002</p><p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/elementAtOrDefault.png" alt="elementAtOrDefault()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">elementAtOrDefault</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D1\u5C04\u7D22\u5F15\u4E3A 9\u7684\u6570\u636E\uFF0C\u82E5\u4E0D\u5B58\u5728\uFF0C\u5219\u53D1\u5C04 -5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-11-ignoreelements" tabindex="-1"><a class="header-anchor" href="#_5-11-ignoreelements" aria-hidden="true">#</a> 5.11 ignoreElements()</h3>`,5),Gs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#ignoreElements()",target:"_blank",rel:"noopener noreferrer"},Ks=t(`<p>\u4E0D\u53D1\u5C04\u4EFB\u4F55\u6570\u636E\uFF0C\u76F4\u63A5\u53D1\u51FA <code>onCompleted()</code> \u901A\u77E5\u3002</p><p><img src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/ignoreElements.png" alt="ignoreElements()"></p><p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ignoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-12-distinct" tabindex="-1"><a class="header-anchor" href="#_5-12-distinct" aria-hidden="true">#</a> 5.12 distinct()</h3>`,5),Qs={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#distinct()",target:"_blank",rel:"noopener noreferrer"},Ys=n("p",null,"\u8FC7\u6EE4\u91CD\u590D\u7684\u5143\u7D20\uFF0C\u8FC7\u6EE4\u89C4\u5219\u662F\uFF1A\u53EA\u5141\u8BB8\u8FD8\u6CA1\u6709\u53D1\u5C04\u8FC7\u7684\u5143\u7D20\u901A\u8FC7\u3002",-1),Zs=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/distinct.png",alt:"distinct()"})],-1),$s=n("p",null,[n("strong",null,"\u5176\u4ED6 distinct() API\uFF1A")],-1),ne={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#distinct(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},ae=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u76F4\u63A5\u8FC7\u6EE4</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u901A\u8FC7\u751F\u6210\u7684 key \u503C\u8FC7\u6EE4</span>
<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u968F\u673A\u751F\u6210 key</span>
        <span class="token keyword">return</span> integer <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-13-debounce" tabindex="-1"><a class="header-anchor" href="#_5-13-debounce" aria-hidden="true">#</a> 5.13 debounce()</h3>`,3),se={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#debounce(long,%20java.util.concurrent.TimeUnit)",target:"_blank",rel:"noopener noreferrer"},ee={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html",target:"_blank",rel:"noopener noreferrer"},te=n("p",null,[n("img",{src:"https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/debounce.png",alt:"debounce()"})],-1),pe=n("p",null,[n("strong",null,"\u5176\u4ED6 debounce() API\uFF1A")],-1),oe={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#debounce(long,%20java.util.concurrent.TimeUnit,%20rx.Scheduler)",target:"_blank",rel:"noopener noreferrer"},le={href:"http://reactivex.io/RxJava/javadoc/rx/Observable.html#debounce(rx.functions.Func1)",target:"_blank",rel:"noopener noreferrer"},ce=t(`<p><strong>\u4E3E\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> subscriber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u4EA7\u751F\u7ED3\u679C\u7684\u95F4\u9694\u65F6\u95F4\u5206\u522B\u4E3A100\u3001200\u3001300...900\u6BEB\u79D2</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                subscriber<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            subscriber<span class="token punctuation">.</span><span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            subscriber<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
observable<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span>  <span class="token comment">// \u8D85\u65F6\u65F6\u95F4\u4E3A400\u6BEB\u79D2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u4F8B\u5B50\u4EA7\u751F\u7ED3\u679C\u4E3A\uFF1A\u4F9D\u6B21\u6253\u53705\u30016\u30017\u30018\u3002</p><h2 id="\u9644-\u529F\u80FD\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u9644-\u529F\u80FD\u5B9E\u73B0" aria-hidden="true">#</a> \u9644\uFF1A\u529F\u80FD\u5B9E\u73B0</h2><h3 id="\u5EF6\u65F6\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5EF6\u65F6\u904D\u5386" aria-hidden="true">#</a> \u5EF6\u65F6\u904D\u5386</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u904D\u5386</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> traverseObservable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8BA1\u65F6</span>
<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> intervalObservable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
<span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> func2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Func2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> integer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

intervalObservable<span class="token punctuation">.</span><span class="token function">zipWith</span><span class="token punctuation">(</span>traverseObservable<span class="token punctuation">,</span> func2<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toBlocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;onCompleted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

           <span class="token annotation punctuation">@Override</span>
           <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5012\u8BA1\u65F6" tabindex="-1"><a class="header-anchor" href="#\u5012\u8BA1\u65F6" aria-hidden="true">#</a> \u5012\u8BA1\u65F6</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> startTime <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span>startTime <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// \u63A5\u6536 startTime + 1 \u6B21</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Long</span> time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 1 2 3...\u8F6C\u6362\u4E3A...3 2 1</span>
                <span class="token keyword">return</span> startTime <span class="token operator">-</span> time<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toBlocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5012\u8BA1\u65F6\u7ED3\u675F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5012\u8BA1\u65F6\u51FA\u73B0\u5F02\u5E38&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;\u5012\u8BA1\u65F6: %s s&quot;</span><span class="token punctuation">,</span> aLong<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function ie(re,ue){const s=c("ExternalLinkIcon");return o(),l("div",null,[r,n("blockquote",null,[n("p",null,[a("\u672C\u6587\u57FA\u4E8E "),u,a(" \u7248\u672C\uFF0C\u9605\u8BFB\u672C\u6587\u524D\u8BF7\u5148\u4E86\u89E3 "),n("a",k,[a("RxJava"),e(s)]),a("\xA0 \u7684\u57FA\u672C\u4F7F\u7528\u3002")])]),n("p",null,[d,a(" \u7248\u672C\u5DF2\u5347\u7EA7\u5230 "),n("a",v,[a("RxJava2.x"),e(s)]),a("\xA0\uFF0C\u5404\u4E2A "),n("a",b,[a("API"),e(s)]),a(" \u5747\u6709\u4E0D\u540C\u7A0B\u5EA6\u7684\u53D8\u5316\uFF0C\u5177\u4F53\u8BF7\u67E5\u770B"),n("a",m,[a("\u5B98\u65B9\u6587\u6863"),e(s)]),a("\u3002")]),h,n("ul",null,[n("li",null,[n("a",g,[a("RxJava JavaDoc"),e(s)])]),n("li",null,[n("a",_,[a("ReactiveX \u6587\u6863\u4E2D\u6587\u7FFB\u8BD1"),e(s)])])]),f,n("h2",x,[O,a(" 1 "),n("a",T,[a("Observable"),e(s)]),a("\xA0\u7684\u521B\u5EFA")]),j,n("p",null,[n("a",w,[a("public static\xA0<T>\xA0Observable<T>\xA0from(Iterable<? extends T>\xA0iterable);"),e(s)])]),n("p",null,[a("\u8F6C\u6362\u96C6\u5408\u4E3A\u4E00\u4E2A\u6BCF\u6B21\u53D1\u5C04\u96C6\u5408\u4E2D\u4E00\u4E2A\u5143\u7D20\u7684\xA0"),n("a",R,[a("Observable"),e(s)]),a("\xA0\u5BF9\u8C61\u3002")]),y,J,S,n("ul",null,[n("li",null,[n("p",null,[n("a",F,[a("public static\xA0<T>\xA0Observable<T>\xA0from(Future<? extends T>\xA0future);"),e(s)])])]),n("li",null,[n("p",null,[n("a",I,[a("public static\xA0<T>\xA0Observable<T>\xA0from(Future<? extends T>\xA0future, long timeout, TimeUnit unit);"),e(s)])])]),n("li",null,[n("p",null,[n("a",U,[a("public static\xA0<T>\xA0Observable<T>\xA0from(Future<? extends T>\xA0future, Scheduler scheduler);"),e(s)])])]),n("li",null,[n("p",null,[n("a",L,[a("public static\xA0<T>\xA0Observable<T>\xA0from(T[] array);"),e(s)])])])]),q,n("p",null,[n("a",E,[a("public static\xA0<T>\xA0Observable<T>\xA0just(final T value);"),e(s)])]),n("p",null,[a("\u8F6C\u6362\u4E00\u4E2A\u6216\u591A\u4E2A Object \u4E3A\u4F9D\u6B21\u53D1\u5C04\u8FD9\u4E9B Object \u7684\xA0"),n("a",A,[a("Observable"),e(s)]),a("\xA0\u5BF9\u8C61\u3002")]),n("p",null,[a("**\u4F7F\u7528\u573A\u666F\uFF1A**\u8F6C\u6362\u4E00\u4E2A\u6216\u591A\u4E2A\u666E\u901A Object \u4E3A "),n("a",X,[a("Observable"),e(s)]),a(" \u5BF9\u8C61\uFF0C\u5982\u8F6C\u6362\u6570\u636E\u5E93\u67E5\u8BE2\u7ED3\u679C\u3001\u7F51\u7EDC\u67E5\u8BE2\u7ED3\u679C\u7B49\u3002")]),N,C,n("ul",null,[n("li",null,[n("p",null,[n("a",B,[a("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2);"),e(s)])])]),n("li",null,[n("p",null,[n("a",D,[a("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3);"),e(s)])])]),n("li",null,[n("p",null,[n("a",M,[a("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4);"),e(s)])])]),n("li",null,[n("p",null,[n("a",W,[a("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4, T t5);"),e(s)])])]),n("li",null,[n("p",null,[n("a",P,[a("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4, T t5, T t6);"),e(s)])])]),n("li",null,[n("p",null,[n("a",V,[a("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4, T t5, T t6, T t7);"),e(s)])])]),n("li",null,[n("p",null,[n("a",H,[a("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4, T t5, T t6, T t7, T t8);"),e(s)])])]),n("li",null,[n("p",null,[n("a",z,[a("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4, T t5, T t6, T t7, T t8, T t9);"),e(s)])])]),n("li",null,[n("p",null,[n("a",G,[a("public static\xA0<T>\xA0Observable<T>\xA0just(T t1, T t2, T t3, T t4, T t5, T t6, T t7, T t8, T t9, T t10);"),e(s)])])])]),K,n("p",null,[n("a",Q,[a("public static\xA0<T>\xA0Observabl<T>\xA0create(OnSubscribe<T>\xA0f);"),e(s)])]),n("p",null,[a("\u8FD4\u56DE\u4E00\u4E2A\u5728\u88AB OnSubscribe \u8BA2\u9605\u65F6\u6267\u884C\u7279\u5B9A\u65B9\u6CD5\u7684\xA0"),n("a",Y,[a("Observable"),e(s)]),a("\xA0\u5BF9\u8C61\u3002")]),Z,$,n("ul",null,[n("li",null,[n("p",null,[n("a",nn,[a("@Beta\xA0public static\xA0<S, T>\xA0Observable<T> create(SyncOnSubscribe<S, T>\xA0syncOnSubscribe);"),e(s)])])]),n("li",null,[n("p",null,[n("a",an,[a("@Experimental\xA0public static\xA0<S, T>\xA0Observable<T>\xA0create(AsyncOnSubscribe<S, T>\xA0asyncOnSubscribe);"),e(s)])])])]),sn,n("p",null,[n("a",en,[a("public static Observable<Long>\xA0interval(long interval, TimeUnit unit);"),e(s)])]),n("p",null,[a("\u8FD4\u56DE\u4E00\u4E2A\u6BCF\u9694\u6307\u5B9A\u7684\u65F6\u95F4\u95F4\u9694\u5C31\u53D1\u5C04\u4E00\u4E2A\u5E8F\u5217\u53F7\u7684\xA0"),n("a",tn,[a("Observable"),e(s)]),a("\xA0\u5BF9\u8C61\u3002")]),pn,on,ln,n("ul",null,[n("li",null,[n("p",null,[n("a",cn,[a("public static Observable<Long>\xA0interval(long interval, TimeUnit unit, Scheduler scheduler);"),e(s)])])]),n("li",null,[n("p",null,[n("a",rn,[a("public static Observable<Long>\xA0interval(long initialDelay, long period, TimeUnit unit);"),e(s)])])]),n("li",null,[n("p",null,[n("a",un,[a("public static Observable<Long>\xA0interval(long initialDelay, long period, TimeUnit unit, Scheduler scheduler);"),e(s)])])])]),kn,n("p",null,[n("a",dn,[a("public static Observable<Long>\xA0timer(long delay, TimeUnit unit);"),e(s)])]),n("p",null,[a("\u521B\u5EFA\u4E00\u4E2A\u5728\u6307\u5B9A\u5EF6\u8FDF\u65F6\u95F4\u540E\u53D1\u5C04\u4E00\u6761\u6570\u636E\uFF08\u56FA\u5B9A\u503C\uFF1A0\uFF09\u7684\xA0"),n("a",vn,[a("Observable"),e(s)]),a("\xA0\u5BF9\u8C61\u3002")]),bn,mn,hn,n("ul",null,[n("li",null,[n("a",gn,[a("public static Observable<Long>\xA0timer(long delay, TimeUnit unit, Scheduler scheduler);"),e(s)])])]),_n,n("p",null,[n("a",fn,[a("public static Observable<Integer>\xA0range(int start, int count);"),e(s)])]),n("p",null,[a("\u521B\u5EFA\u4E00\u4E2A\u53D1\u5C04\u6307\u5B9A\u8303\u56F4\u5185\u7684\u8FDE\u7EED\u6574\u6570\u7684\xA0"),n("a",xn,[a("Observable"),e(s)]),a("\xA0\u5BF9\u8C61\u3002")]),On,Tn,jn,n("ul",null,[n("li",null,[n("a",wn,[a("public static Observable<Integer>\xA0range(int start, int count, Scheduler scheduler);"),e(s)])])]),Rn,n("p",null,[n("a",yn,[a("public static\xA0<T>\xA0Observable<T>\xA0empty();"),e(s)])]),n("p",null,[a("\u521B\u5EFA\u4E00\u4E2A\u4E0D\u53D1\u5C04\u4EFB\u4F55\u6570\u636E\u5C31\u53D1\u51FA "),Jn,a(" \u901A\u77E5\u7684\xA0"),n("a",Sn,[a("Observable"),e(s)]),a("\xA0\u5BF9\u8C61\u3002")]),Fn,n("p",null,[n("a",In,[a("public static\xA0<T>\xA0Observable<T>\xA0error(Throwable exception);"),e(s)])]),n("p",null,[a("\u521B\u5EFA\u4E0D\u53D1\u5C04\u4EFB\u4F55\u6570\u636E\u5C31\u53D1\u51FA "),Un,a(" \u901A\u77E5\u7684\xA0"),n("a",Ln,[a("Observable"),e(s)]),a("\xA0\u5BF9\u8C61\u3002")]),qn,n("p",null,[n("a",En,[a("public static\xA0<T>\xA0Observable<T>\xA0never();"),e(s)])]),n("p",null,[a("\u521B\u5EFA\u4E00\u4E2A\u4E0D\u53D1\u5C04\u4EFB\u4F55\u6570\u636E\u548C\u901A\u77E5\u7684\xA0"),n("a",An,[a("Observable"),e(s)]),a("\xA0\u5BF9\u8C61\u3002")]),Xn,n("p",null,[n("a",Nn,[a("public static\xA0<T>\xA0Observable<T>\xA0defer(Func0<Observable<T>>\xA0observableFactory);"),e(s)])]),n("p",null,[a("\u5728\u8BA2\u9605\u7684\u65F6\u5019\u624D\u4F1A\u521B\u5EFA Observable \u5BF9\u8C61\uFF1B\u6BCF\u4E00\u6B21\u8BA2\u9605\u90FD\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\xA0"),n("a",Cn,[a("Observable"),e(s)]),a("\xA0\u5BF9\u8C61\u3002")]),Bn,n("p",null,[n("a",Dn,[a("public final Observable<T>\xA0repeat();"),e(s)])]),Mn,Wn,Pn,Vn,n("ul",null,[n("li",null,[n("p",null,[n("a",Hn,[a("public final Observable<T>\xA0repeat(final long count);\xA0"),e(s)])])]),n("li",null,[n("p",null,[n("a",zn,[a("public final Observable<T>\xA0repeat(Scheduler scheduler); "),e(s)])])]),n("li",null,[n("p",null,[n("a",Gn,[a("public final Observable<T>\xA0repeat(final long count, Scheduler scheduler);"),e(s)])])])]),Kn,n("p",null,[n("a",Qn,[a("public final Observable<T>\xA0repeatWhen(final Func1<? super Observable<? extends Void>, ? extends Observable<?>>\xA0notificationHandler)"),e(s)])]),Yn,Zn,$n,na,n("ul",null,[n("li",null,[n("a",aa,[a("public final Observable<T>\xA0repeatWhen(final Func1<? super Observable<? extends Void>, ? extends Observable>?>\xA0notificationHandler, Scheduler scheduler);"),e(s)])])]),sa,n("p",null,[n("a",ea,[a("public final Observable<T>\xA0retry();"),e(s)])]),n("p",null,[a("\u5728\u6267\u884C\xA0"),n("a",ta,[a("Observable"),e(s)]),a("\u5BF9\u8C61\u7684\u5E8F\u5217\u51FA\u73B0\u5F02\u5E38\u65F6\uFF0C\u4E0D\u76F4\u63A5\u53D1\u51FA "),pa,a(" \u901A\u77E5\uFF0C\u800C\u662F\u91CD\u65B0\u8BA2\u9605\u8BE5\xA0"),n("a",oa,[a("Observable"),e(s)]),a("\u5BF9\u8C61\uFF0C\u76F4\u5230\u91CD\u505A\u8FC7\u7A0B\u4E2D\u672A\u51FA\u73B0\u5F02\u5E38\uFF0C\u5219\u4F1A\u53D1\u51FA "),la,a(" \u548C "),ca,a(" \u901A\u77E5\uFF1B\u82E5\u91CD\u505A\u8FC7\u7A0B\u4E2D\u4E5F\u51FA\u73B0\u5F02\u5E38\uFF0C\u5219\u4F1A\u7EE7\u7EED\u91CD\u8BD5\uFF0C\u76F4\u5230\u8FBE\u5230\u91CD\u8BD5\u6B21\u6570\u4E0A\u9650\uFF0C\u8D85\u51FA\u6B21\u6570\u540E\u53D1\u51FA\u6700\u65B0\u7684 "),ia,a(" \u901A\u77E5\u3002")]),ra,ua,ka,n("ul",null,[n("li",null,[n("p",null,[n("a",da,[a("public final Observable<T>\xA0retry(final long count);"),e(s)])])]),n("li",null,[n("p",null,[n("a",va,[a("public final Observable<T>\xA0retry(Func2<Integer, Throwable, Boolean>\xA0predicate);"),e(s)])])])]),ba,n("p",null,[n("a",ma,[a("public final Observable<T>\xA0retryWhen(final Func1<? super Observable<? extends Throwable>, ? extends Observable<?>>\xA0notificationHandler);"),e(s)])]),ha,ga,_a,fa,n("ul",null,[n("li",null,[n("a",xa,[a("public final Observable<T>\xA0retryWhen(final Func1<? super Observable<? extends Throwable>, ? extends Observable<?>>notificationHandler, Scheduler scheduler);"),e(s)])])]),Oa,n("p",null,[n("a",Ta,[a("public final\xA0<R>\xA0Observable<R>\xA0map(Func1<? super T, ? extends R>\xA0func);"),e(s)])]),n("p",null,[a("\u628A\u6E90\xA0"),n("a",ja,[a("Observable"),e(s)]),a("\xA0\u53D1\u5C04\u7684\u5143\u7D20\u5E94\u7528\u4E8E\u6307\u5B9A\u7684\u51FD\u6570\uFF0C\u5E76\u53D1\u9001\u8BE5\u51FD\u6570\u7684\u7ED3\u679C\u3002")]),n("p",null,[a("**\u4F7F\u7528\u573A\u666F\uFF1A**\u5C06\u4ECE\u7F51\u7EDC\u83B7\u53D6\u7684\u6570\u636E\uFF08NetData \u5BF9\u8C61\uFF09\u8F6C\u6362\u4E3A\u6570\u636E\u5E93\u76F8\u5173\u5BF9\u8C61\uFF08DBData\u5BF9\u8C61\uFF09\u5E76\u4F7F\u7528 "),n("a",wa,[a("Observable"),e(s)]),a(" \u53D1\u9001\u3002")]),Ra,n("p",null,[n("a",ya,[a("public final\xA0<R>\xA0Observable<R>\xA0flatMap(Func1<? super T, ? extends Observable<? extends R>>\xA0func);"),e(s)])]),n("p",null,[a("\u8F6C\u6362\u6E90\xA0"),n("a",Ja,[a("Observable"),e(s)]),a("\xA0\u5BF9\u8C61\u4E3A\u53E6\u4E00\u4E2A\xA0"),n("a",Sa,[a("Observable"),e(s)]),a("\xA0\u5BF9\u8C61\u3002")]),Fa,Ia,Ua,n("ul",null,[n("li",null,[n("p",null,[n("a",La,[a("@Beta\xA0public final\xA0<R>\xA0Observable<R>\xA0flatMap(Func1<? super T, ? extends Observable<? extends R>>\xA0func, int maxConcurrent);"),e(s)])])]),n("li",null,[n("p",null,[n("a",qa,[a("public final\xA0<R>\xA0Observable<R>\xA0flatMap(Func1<? super T, ? extends Observable<? extends R>>\xA0onNext,\xA0Func1<? super Throwable, ? extends Observable<? extends R>>\xA0onError,\xA0Func0<? extends Observable<? extends R>>\xA0onCompleted);"),e(s)])])]),n("li",null,[n("p",null,[n("a",Ea,[a("@Beta\xA0public final\xA0<R>\xA0Observable<R>\xA0flatMap(Func1<? super T, ? extends Observable<? extends R>>\xA0onNext,\xA0Func1<? super Throwable, ? extends Observable<? extends R>>\xA0onError,\xA0Func0<? extends Observable<? extends R>>\xA0onCompleted, int maxConcurrent);"),e(s)])])]),n("li",null,[n("p",null,[n("a",Aa,[a("public final <U, R>\xA0Observable<R>\xA0flatMap(final Func1<? super T, ? extends Observable<? extends U>>\xA0collectionSelector,\xA0final Func2<? super T, ? super U, ? extends R>\xA0resultSelector);"),e(s)])])]),n("li",null,[n("p",null,[n("a",Xa,[a("@Beta\xA0public final\xA0<U, R>\xA0Observable<R>\xA0flatMap(final Func1<? super T, ? extends Observable<? extends U>>\xA0collectionSelector,\xA0final Func2<? super T, ? super U, ? extends R>\xA0resultSelector, int maxConcurrent);"),e(s)])])])]),Na,n("p",null,[n("a",Ca,[a("public final Observable<T>\xA0filter(Func1<? super T, Boolean>\xA0predicate);"),e(s)])]),Ba,n("p",null,[n("a",Da,[a("public final Observable<T>\xA0first();"),e(s)])]),n("p",null,[a("\u8FD4\u56DE\u4E00\u4E2A\u4EC5\u4EC5\u53D1\u5C04\u6E90\xA0"),n("a",Ma,[a("Observable"),e(s)]),a("\xA0\u53D1\u5C04\u7684\u7B2C\u4E00\u4E2A\uFF3B\u6EE1\u8DB3\u6307\u5B9A\u8C13\u8BCD\u7684\uFF3D\u5143\u7D20\u7684\xA0"),n("a",Wa,[a("Observable"),e(s)]),a("\uFF0C\u5982\u679C\u6E90\xA0"),n("a",Pa,[a("Observable"),e(s)]),a("\xA0\u4E3A\u7A7A\uFF0C\u5219\u4F1A\u629B\u51FA\u4E00\u4E2A "),Va,a("\u3002")]),Ha,za,Ga,n("ul",null,[n("li",null,[n("a",Ka,[a("public final Observable<T>\xA0first(Func1<? super T, Boolean>\xA0predicate)"),e(s)])])]),Qa,n("p",null,[n("a",Ya,[a("public final Observable<T>\xA0last();"),e(s)])]),n("p",null,[a("\u8FD4\u56DE\u4E00\u4E2A\u4EC5\u4EC5\u53D1\u5C04\u6E90\xA0"),n("a",Za,[a("Observable"),e(s)]),a("\xA0\u53D1\u5C04\u7684\u5012\u6570\u7B2C\u4E00\u4E2A\uFF3B\u6EE1\u8DB3\u6307\u5B9A\u8C13\u8BCD\u7684\uFF3D\u5143\u7D20\u7684\xA0"),n("a",$a,[a("Observable"),e(s)]),a("\uFF0C\u5982\u679C\u6E90\xA0"),n("a",ns,[a("Observable"),e(s)]),a("\xA0\u4E3A\u7A7A\uFF0C\u5219\u4F1A\u629B\u51FA\u4E00\u4E2A "),as,a("\u3002")]),ss,es,ts,n("ul",null,[n("li",null,[n("a",ps,[a("public final Observable<T>\xA0last(Func1<? super T, Boolean>\xA0predicate)"),e(s)])])]),os,n("p",null,[n("a",ls,[a("public final Observable<T>\xA0skip(int count);"),e(s)])]),cs,is,rs,n("ul",null,[n("li",null,[n("p",null,[n("a",us,[a("public final Observable<T>\xA0skip(long time, TimeUnit unit);"),e(s)])])]),n("li",null,[n("p",null,[n("a",ks,[a("public final Observable<T>\xA0skip(long time, TimeUnit unit, Scheduler scheduler);"),e(s)])])])]),ds,n("p",null,[n("a",vs,[a("public final Observable<T>\xA0skipLast(int count);"),e(s)])]),n("p",null,[a("\u8DF3\u8FC7\u524D\u9762\u6307\u5B9A\u6570\u91CF\u6216\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u5143\u7D20\uFF0C\u53EA\u53D1\u5C04\u540E\u9762\u7684\u5143\u7D20\u3002\u6307\u5B9A\u65F6\u95F4\u65F6\u4F1A\u5EF6\u8FDF\u6E90\xA0"),n("a",bs,[a("Observable"),e(s)]),a("\xA0\u53D1\u5C04\u7684\u4EFB\u4F55\u6570\u636E\u3002")]),ms,hs,n("ul",null,[n("li",null,[n("p",null,[n("a",gs,[a("public final Observable<T>\xA0skipLast(long time, TimeUnit unit);"),e(s)])])]),n("li",null,[n("p",null,[n("a",_s,[a("public final Observable<T>\xA0skipLast(long time, TimeUnit unit, Scheduler scheduler);"),e(s)])])])]),fs,n("p",null,[n("a",xs,[a("public final Observable<T>\xA0take(final int count);"),e(s)])]),Os,Ts,js,n("ul",null,[n("li",null,[n("p",null,[n("a",ws,[a("public final Observable<T>\xA0take(long time, TimeUnit unit);"),e(s)])])]),n("li",null,[n("p",null,[n("a",Rs,[a("public final Observable<T>\xA0take(long time, TimeUnit unit, Scheduler scheduler);"),e(s)])])])]),ys,n("p",null,[n("a",Js,[a("public final Observable<T>\xA0takeLast(final int count);"),e(s)])]),n("p",null,[a("\u53EA\u53D1\u5C04\u540E\u9762\u6307\u5B9A\u6570\u91CF\u6216\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u5143\u7D20\u3002\u6307\u5B9A\u65F6\u95F4\u65F6\u4F1A\u5EF6\u8FDF\u6E90\xA0"),n("a",Ss,[a("Observable"),e(s)]),a("\xA0\u53D1\u5C04\u7684\u4EFB\u4F55\u6570\u636E\u3002")]),Fs,Is,n("ul",null,[n("li",null,[n("p",null,[n("a",Us,[a("public final Observable<T>\xA0takeLast(int count, long time, TimeUnit unit);"),e(s)])])]),n("li",null,[n("p",null,[n("a",Ls,[a("public final Observable<T>\xA0takeLast(int count, long time, TimeUnit unit, Scheduler scheduler);"),e(s)])])]),n("li",null,[n("p",null,[n("a",qs,[a("public final Observable<T>\xA0takeLast(long time, TimeUnit unit);"),e(s)])])]),n("li",null,[n("p",null,[n("a",Es,[a("public final Observable<T>\xA0takeLast(long time, TimeUnit unit, Scheduler scheduler);"),e(s)])])])]),As,n("p",null,[n("a",Xs,[a("public final Observable<T>\xA0sample(long period, TimeUnit unit);"),e(s)])]),n("p",null,[a("\u5B9A\u671F\u53D1\u5C04\xA0"),n("a",Ns,[a("Observable"),e(s)]),a("\xA0\u53D1\u5C04\u7684\u6700\u540E\u4E00\u6761\u6570\u636E\u3002")]),Cs,Bs,n("ul",null,[n("li",null,[n("p",null,[n("a",Ds,[a("public final Observable<T>\xA0sample(long period, TimeUnit unit, Scheduler scheduler);"),e(s)])])]),n("li",null,[n("p",null,[n("a",Ms,[a("public final\xA0<U>\xA0Observable<T>\xA0sample(Observable<U>\xA0sampler);"),e(s)])])])]),Ws,n("p",null,[n("a",Ps,[a("public final Observable<T>\xA0elementAt(int index);"),e(s)])]),Vs,n("p",null,[n("a",Hs,[a("public final Observable<T>\xA0elementAtOrDefault(int index, T defaultValue);"),e(s)])]),zs,n("p",null,[n("a",Gs,[a("public final Observable<T>\xA0ignoreElements();"),e(s)])]),Ks,n("p",null,[n("a",Qs,[a("public final Observable<T>\xA0distinct();"),e(s)])]),Ys,Zs,$s,n("ul",null,[n("li",null,[n("a",ne,[a("public final\xA0<U>\xA0Observable<T>\xA0distinct(Func1<? super T, ? extends U>\xA0keySelector)"),e(s)])])]),ae,n("p",null,[n("a",se,[a("public final Observable<T>\xA0debounce(long timeout, TimeUnit unit)"),e(s)])]),n("p",null,[a("\u6E90\xA0"),n("a",ee,[a("Observable"),e(s)]),a("\xA0\u6BCF\u4EA7\u751F\u7ED3\u679C\u540E\uFF0C\u5982\u679C\u5728\u89C4\u5B9A\u7684\u95F4\u9694\u65F6\u95F4\u5185\u6CA1\u6709\u4EA7\u751F\u65B0\u7684\u7ED3\u679C\uFF0C\u5219\u53D1\u5C04\u8FD9\u4E2A\u7ED3\u679C\uFF0C\u5426\u5219\u4F1A\u5FFD\u7565\u8FD9\u4E2A\u7ED3\u679C\u3002\u8BE5\u64CD\u4F5C\u7B26\u4F1A\u8FC7\u6EE4\u6389\u53D1\u5C04\u901F\u7387\u8FC7\u5FEB\u7684\u6570\u636E\u9879\u3002")]),te,pe,n("ul",null,[n("li",null,[n("p",null,[n("a",oe,[a("public final Observable<T>\xA0debounce(long timeout, TimeUnit unit, Scheduler scheduler)"),e(s)])])]),n("li",null,[n("p",null,[n("a",le,[a("public final\xA0<U>\xA0Observable<T>\xA0debounce(Func1<? super T, ? extends Observable<U>>\xA0debounceSelector)"),e(s)])])])]),ce])}const de=p(i,[["render",ie],["__file","RxJava 1.x\uFF1A\u4F60\u4E00\u5B9A\u4F1A\u7528\u5230\u7684\u5E38\u7528\u64CD\u4F5C\u7B26.html.vue"]]);export{de as default};
