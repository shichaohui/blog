import{_ as e,p as o,q as p,s as n,R as a,t,Y as c,n as i}from"./framework-a25df3d5.js";const l={},r={href:"https://shichaohui.github.io/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://shichaohui.github.io/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://blog.csdn.net/u014165119/article/details/111355519",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"什么是-jsonp",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#什么是-jsonp","aria-hidden":"true"},"#"),a(" 什么是 JSONP？")],-1),h=n("strong",null,"JSONP",-1),v=n("strong",null,"JSON with Padding",-1),m={href:"https://zh.wikipedia.org/wiki/JSON",title:"JSON",target:"_blank",rel:"noopener noreferrer"},_={href:"https://zh.wikipedia.org/wiki/JSONP",target:"_blank",rel:"noopener noreferrer"},b=c(`<h2 id="jsonp-核心原理" tabindex="-1"><a class="header-anchor" href="#jsonp-核心原理" aria-hidden="true">#</a> JSONP 核心原理</h2><ul><li><code>script</code> 标签不受同源策略影响。</li><li>动态插入到 <code>DOM</code> 中的 <code>script</code> 脚本可以立即得到执行。</li></ul><h2 id="实现步骤" tabindex="-1"><a class="header-anchor" href="#实现步骤" aria-hidden="true">#</a> 实现步骤</h2><ol><li>客户端创建一个 <code>JavaScript</code> 函数，用来接收服务端返回的数据。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">onResponse</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>客户端动态插入 <code>script</code> 标签执行请求。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span>
script<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&#39;protocal://domain:port/path?callback=onResponse&#39;</span>
document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span>
document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>服务端将数据和 js 回调函数名拼接为函数调用的字符串并返回给客户端。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/path&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> callback <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>callback
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>callback<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">);</span><span class="token template-punctuation string">\`</span></span>
    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>客户端接收到 <code>script</code> 标签响应并自动执行回调函数。</li></ol><h2 id="jsonp-的缺点" tabindex="-1"><a class="header-anchor" href="#jsonp-的缺点" aria-hidden="true">#</a> JSONP 的缺点</h2><ul><li>只能使用 <code>GET</code> 请求。</li><li>动态插入的 <code>script</code> 脚本可能被注入恶意代码。</li></ul>`,12);function g(f,j){const s=i("ExternalLinkIcon");return o(),p("div",null,[n("blockquote",null,[n("p",null,[a("转载请注明出处，"),n("a",r,[a("点击此处"),t(s)]),a("可了解 "),n("a",u,[a("StoneHui"),t(s)]),a(" 更多信息")])]),n("p",null,[a("前置知识点： "),n("a",d,[a("同源策略 & 跨域"),t(s)])]),k,n("blockquote",null,[n("p",null,[h,a("（"),v,a("）是资料格式"),n("a",m,[a("JSON"),t(s)]),a("的一种“使用模式”，可以让网页从别的网域获取资料。 —— "),n("a",_,[a("维基百科"),t(s)])])]),b])}const S=e(l,[["render",g],["__file","JSONP kuayuyuanli.html.vue"]]);export{S as default};
