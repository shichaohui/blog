import{_ as o,p,q as c,s as n,R as s,t as e,Y as t,n as i}from"./framework-a25df3d5.js";const l={},u={href:"https://shichaohui.github.io/",target:"_blank",rel:"noopener noreferrer"},r=n("h1",{id:"wujie-使用手册",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#wujie-使用手册","aria-hidden":"true"},"#"),s(" wujie 使用手册")],-1),d={href:"https://wujie-micro.github.io/doc/guide/",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"Web Component",-1),v=n("code",null,"iframe",-1),h=t(`<h2 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手" aria-hidden="true">#</a> 快速上手</h2><h3 id="主应用" tabindex="-1"><a class="header-anchor" href="#主应用" aria-hidden="true">#</a> 主应用</h3><p>主应用不限技术栈，只需引入 <code>wujie</code>、配置子应用路由并启动 <code>wujie</code> 即可。</p><p><code>wujie</code> 针对 <code>React</code> 和 <code>Vue</code> 框架分别提供了 <code>wujie-react</code> <code>wujie-vue2</code> <code>wujie-vue3</code> 依赖。这里以 <code>Vue3</code> 为例。</p><h4 id="安装-wujie" tabindex="-1"><a class="header-anchor" href="#安装-wujie" aria-hidden="true">#</a> 安装 <code>wujie</code></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> wujie-vue3

<span class="token function">pnpm</span> <span class="token function">add</span> wujie-vue3

<span class="token function">npm</span> i wujie-vue3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="嵌入子应用" tabindex="-1"><a class="header-anchor" href="#嵌入子应用" aria-hidden="true">#</a> 嵌入子应用</h4><p>创建 Vue 页面（如 <code>src/views/SubApp.vue</code>）用于承载子应用。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>WujieVue width<span class="token operator">=</span><span class="token string">&quot;100%&quot;</span> height<span class="token operator">=</span><span class="token string">&quot;100%&quot;</span> name<span class="token operator">=</span><span class="token string">&quot;sub-app&quot;</span> url<span class="token operator">=</span><span class="token string">&quot;http://localhost:8381/&quot;</span> sync <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>&lt;micro-app&gt;</code> 组件配置说明：</strong></p>`,10),m=n("li",null,"name: 子应用唯一标识符。",-1),b=n("li",null,"url: 子应用的路径地址。",-1),_=n("li",null,[s("sync: 是否开启路由同步。开启后 "),n("code",null,"wujie"),s(" 会将子应用的 name 作为一个 url 查询参数，实时同步子应用的路径作为这个查询参数的值，这样分享 URL 或者刷新浏览器子应用路由都不会丢失。")],-1),g={href:"https://wujie-micro.github.io/doc/api/startApp.html",target:"_blank",rel:"noopener noreferrer"},w=t(`<h4 id="配置子应用路由" tabindex="-1"><a class="header-anchor" href="#配置子应用路由" aria-hidden="true">#</a> 配置子应用路由</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createRouter<span class="token punctuation">,</span> createWebHistory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>

<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_URL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token operator">...</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;sub-app&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/sub-app&#39;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/SubApp.vue&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> router
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>path</code> 是子应用路由地址。</p><h3 id="子应用" tabindex="-1"><a class="header-anchor" href="#子应用" aria-hidden="true">#</a> 子应用</h3><p><code>wujie</code> 对子应用的侵入非常小，在满足跨域条件下子应用可以不用改造。</p><h2 id="子应用运行模式" tabindex="-1"><a class="header-anchor" href="#子应用运行模式" aria-hidden="true">#</a> 子应用运行模式</h2><p>在微前端框架中，子应用放置在主应用页面中随着主应用页面的打开和关闭反复的激活和销毁，而在 <code>wujie</code> 中子应用是否保活以及是否进行生命周期的改造会进入完全不同的处理流程。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f18070295ef34d0a8fd04441d55edaff~tplv-k3u1fbpfcp-zoom-1.image" alt="运行模式"></p>`,8),f={href:"https://wujie-micro.github.io/doc/guide/mode.html#%E4%BF%9D%E6%B4%BB%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"alive",-1),x={href:"https://wujie-micro.github.io/doc/guide/mode.html#%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"alive",-1),q={href:"https://wujie-micro.github.io/doc/guide/mode.html#%E9%87%8D%E5%BB%BA%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"dom",-1),A=n("code",null,"Web Component",-1),B=n("code",null,"JavaScript",-1),W=n("code",null,"iframe",-1),V=n("code",null,"wujie",-1),I=t(`<h4 id="生命周期改造" tabindex="-1"><a class="header-anchor" href="#生命周期改造" aria-hidden="true">#</a> 生命周期改造</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> app<span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">renderApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    router<span class="token punctuation">,</span>
    store<span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  app<span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">destroyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function">$destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>__POWERED_BY_WUJIE__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  window<span class="token punctuation">.</span>__WUJIE_MOUNT <span class="token operator">=</span> renderApp<span class="token punctuation">;</span>
  window<span class="token punctuation">.</span>__WUJIE_UNMOUNT <span class="token operator">=</span> destroyApp<span class="token punctuation">;</span>
  <span class="token comment">// // Vite 需要主动调用 wujie 的渲染函数</span>
  <span class="token comment">// window.__WUJIE.mount();</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token function">renderApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果子应用的实例化是在异步函数中进行的（如 <code>Vite</code>），在定义完生命周期函数后，需要主动调用 <code>wujie</code> 的渲染函数 <code>window.__WUJIE.mount()</code>。</p><h2 id="应用间通信" tabindex="-1"><a class="header-anchor" href="#应用间通信" aria-hidden="true">#</a> 应用间通信</h2><p><code>wujie</code> 提供三种通信方式。</p><h3 id="props-通信" tabindex="-1"><a class="header-anchor" href="#props-通信" aria-hidden="true">#</a> props 通信</h3><p>主应用可以通过 <code>props</code> 注入数据和方法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>WujieVue name<span class="token operator">=</span><span class="token string">&quot;xxx&quot;</span> url<span class="token operator">=</span><span class="token string">&quot;xxx&quot;</span> <span class="token operator">:</span>props<span class="token operator">=</span><span class="token string">&quot;{ data: xxx, methods: xxx }&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>WujieVue<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>子应用可以通过 <code>$wujie</code> 对象来获取数据：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> props <span class="token operator">=</span> window<span class="token punctuation">.</span>$wujie<span class="token operator">?.</span>props<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="eventbus-通信" tabindex="-1"><a class="header-anchor" href="#eventbus-通信" aria-hidden="true">#</a> eventBus 通信</h3>`,11),U=n("code",null,"wujie",-1),N={href:"https://wujie-micro.github.io/doc/api/bus.html#bus",target:"_blank",rel:"noopener noreferrer"},R=t(`<p>获取 <code>bus</code> 实例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 主应用</span>
<span class="token keyword">import</span> WujieVue <span class="token keyword">from</span> <span class="token string">&quot;wujie-vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> bus <span class="token punctuation">}</span> <span class="token operator">=</span> WujieVue<span class="token punctuation">;</span>

<span class="token comment">// 子应用</span>
window<span class="token punctuation">.</span>$wujie<span class="token operator">?.</span>bus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通信方法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 监听事件</span>
bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&quot;事件名字&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">,</span> <span class="token operator">...</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 发送事件</span>
bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&quot;事件名字&quot;</span><span class="token punctuation">,</span> arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 取消事件监听</span>
bus<span class="token punctuation">.</span><span class="token function">$off</span><span class="token punctuation">(</span><span class="token string">&quot;事件名字&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">,</span> <span class="token operator">...</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="window-通信" tabindex="-1"><a class="header-anchor" href="#window-通信" aria-hidden="true">#</a> window 通信</h3><p>由于子应用运行的 <code>iframe</code> 的 <code>src</code> 和主应用是同域的，所以相互可以直接通信。</p><p>主应用调用子应用的全局数据：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;iframe[name=子应用id]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>xxx<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>子应用调用主应用的全局数据:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>xxx<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h2><h3 id="子应用的相对地址图片没有替换成绝对地址" tabindex="-1"><a class="header-anchor" href="#子应用的相对地址图片没有替换成绝对地址" aria-hidden="true">#</a> 子应用的相对地址图片没有替换成绝对地址</h3><p>子应用通过 <code>v-html</code>、<code>innerHtml</code> 或者在 <code>template</code> 中动态添加 <code>style</code> 时，框架默认的 <code>plugin</code> 无法处理这种场景。可通过动态资源路径解决。</p><ol><li>在 <code>src</code> 目录新增 <code>public-path.js</code>：</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>__POWERED_BY_QIANKUN__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  __webpack_public_path__ <span class="token operator">=</span> window<span class="token punctuation">.</span>__INJECTED_PUBLIC_PATH_BY_QIANKUN__<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>在应用入口 <code>index.js</code> 顶部导入 <code>public-path.js</code>。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&quot;./public-path&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="子应用-window-是一个代理对象-如何获取子应用的真实对象" tabindex="-1"><a class="header-anchor" href="#子应用-window-是一个代理对象-如何获取子应用的真实对象" aria-hidden="true">#</a> 子应用 window 是一个代理对象，如何获取子应用的真实对象？</h3><p>通过 <code>window.__WUJIE_RAW_WINDOW__</code> 获取真实的 <code>window</code> 对象。</p><h3 id="浏览器回退及前进路由异常。" tabindex="-1"><a class="header-anchor" href="#浏览器回退及前进路由异常。" aria-hidden="true">#</a> 浏览器回退及前进路由异常。</h3><p><strong>问题描述：</strong></p><ul><li>重建模式下回到子应用时及后续回退都是进入子应用首页，无法进入子路由，前进只能进入子应用首页。</li><li>单例模式下回退到子应用时都是进入子应用首页，前进只能进入子应用首页。</li><li>保活模式下回退正常，前进只能进入子应用首页。</li></ul><p><strong>GitHub Issues：</strong></p>`,23),C={href:"https://github.com/Tencent/wujie/issues/308",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/Tencent/wujie/issues/223",target:"_blank",rel:"noopener noreferrer"},$=n("p",null,[n("strong",null,"问题原因：")],-1),D=n("p",null,[n("code",null,"iframe"),s(" 拥有自己的路由栈，切换子应用导致 "),n("code",null,"iframe"),s(" 被销毁，重新进入子应用时创建新的 "),n("code",null,"iframe"),s(" ，路由栈丢失。")],-1),T=n("p",null,[n("strong",null,"解决方案：")],-1),S=n("p",null,"暂无",-1);function H(L,O){const a=i("ExternalLinkIcon");return p(),c("div",null,[n("blockquote",null,[n("p",null,[n("small",null,[s("转载请注明出处，"),n("a",u,[s("点击此处"),e(a)]),s(" 查看更多精彩内容")])])]),r,n("p",null,[n("a",d,[s("wujie"),e(a)]),s(" 是一个基于 "),k,s(" 容器 + "),v,s(" 沙箱的微前端方案。能够完善的解决适配成本、样式隔离、运行性能、页面白屏、子应用通信、子应用保活、多应用激活、vite 框架支持、应用共享等问题。")]),h,n("ul",null,[m,b,_,n("li",null,[n("a",g,[s("查看更多配置信息"),e(a)])])]),w,n("ul",null,[n("li",null,[n("a",f,[s("保活模式"),e(a)]),s(" 子应用的 "),j,s(" 设置为 true 时进入保活模式，内部的数据和路由的状态不会随着页面切换而丢失。")]),n("li",null,[n("a",x,[s("单例模式"),e(a)]),s(" 子应用的 "),y,s(" 设置为 false 且进行了生命周期改造时进入单例模式。")]),n("li",null,[n("a",q,[s("重建模式"),e(a)]),s(" 子应用既没有设置为保活模式，也没有进行生命周期的改造则进入了重建模式。每次页面切换不仅会销毁承载子应用 "),E,s(" 的 "),A,s("，还会销毁承载子应用 "),B,s(" 的 "),W,s("，相应的 "),V,s(" 实例和子应用实例都会被销毁。")])]),I,n("p",null,[U,s(" 提供一套去中心化的通信方案，主应用和子应用、子应用和子应用都可以通过这种方式方便的进行通信， "),n("a",N,[s("详见 api"),e(a)])]),R,n("ul",null,[n("li",null,[n("a",C,[s("页面刷新后，浏览器回退按钮点击多次无反应"),e(a)])]),n("li",null,[n("a",J,[s("开启路由同步时，切换子应用的tab（路由变化），刷新后，点击后退按钮，路由不变页面内容也不变"),e(a)])])]),$,D,T,S])}const P=o(l,[["render",H],["__file","weiqianduan（wujie）shiyongshouce.html.vue"]]);export{P as default};
